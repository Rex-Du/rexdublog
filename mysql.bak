-- MySQL dump 10.13  Distrib 5.7.27, for Linux (x86_64)
--
-- Host: localhost    Database: 
-- ------------------------------------------------------
-- Server version	5.7.27-0ubuntu0.18.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `blog`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `blog` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `blog`;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(150) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=49 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add log entry',1,'add_logentry'),(2,'Can change log entry',1,'change_logentry'),(3,'Can delete log entry',1,'delete_logentry'),(4,'Can view log entry',1,'view_logentry'),(5,'Can add permission',2,'add_permission'),(6,'Can change permission',2,'change_permission'),(7,'Can delete permission',2,'delete_permission'),(8,'Can view permission',2,'view_permission'),(9,'Can add group',3,'add_group'),(10,'Can change group',3,'change_group'),(11,'Can delete group',3,'delete_group'),(12,'Can view group',3,'view_group'),(13,'Can add user',4,'add_user'),(14,'Can change user',4,'change_user'),(15,'Can delete user',4,'delete_user'),(16,'Can view user',4,'view_user'),(17,'Can add content type',5,'add_contenttype'),(18,'Can change content type',5,'change_contenttype'),(19,'Can delete content type',5,'delete_contenttype'),(20,'Can view content type',5,'view_contenttype'),(21,'Can add session',6,'add_session'),(22,'Can change session',6,'change_session'),(23,'Can delete session',6,'delete_session'),(24,'Can view session',6,'view_session'),(25,'Can add 文章',7,'add_article'),(26,'Can change 文章',7,'change_article'),(27,'Can delete 文章',7,'delete_article'),(28,'Can view 文章',7,'view_article'),(29,'Can add 轮播图',8,'add_banner'),(30,'Can change 轮播图',8,'change_banner'),(31,'Can delete 轮播图',8,'delete_banner'),(32,'Can view 轮播图',8,'view_banner'),(33,'Can add 用户点赞',9,'add_readandpraise'),(34,'Can change 用户点赞',9,'change_readandpraise'),(35,'Can delete 用户点赞',9,'delete_readandpraise'),(36,'Can view 用户点赞',9,'view_readandpraise'),(37,'Can add 分类',10,'add_category'),(38,'Can change 分类',10,'change_category'),(39,'Can delete 分类',10,'delete_category'),(40,'Can view 分类',10,'view_category'),(41,'Can add 标签',11,'add_tag'),(42,'Can change 标签',11,'change_tag'),(43,'Can delete 标签',11,'delete_tag'),(44,'Can view 标签',11,'view_tag'),(45,'Can add 评论',12,'add_comment'),(46,'Can change 评论',12,'change_comment'),(47,'Can delete 评论',12,'delete_comment'),(48,'Can view 评论',12,'view_comment');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user`
--

DROP TABLE IF EXISTS `auth_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) NOT NULL,
  `first_name` varchar(30) NOT NULL,
  `last_name` varchar(150) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user`
--

LOCK TABLES `auth_user` WRITE;
/*!40000 ALTER TABLE `auth_user` DISABLE KEYS */;
INSERT INTO `auth_user` VALUES (1,'pbkdf2_sha256$150000$hYFZZDF6hwvo$J7ta9eM7ruwn5gvHjD5Ccx718CjEvY+WhM5h4+Ms5xI=','2019-09-05 22:41:31.408307',1,'admin','','','',1,1,'2019-09-01 11:35:57.906468');
/*!40000 ALTER TABLE `auth_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_groups`
--

DROP TABLE IF EXISTS `auth_user_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_groups_user_id_group_id_94350c0c_uniq` (`user_id`,`group_id`),
  KEY `auth_user_groups_group_id_97559544_fk_auth_group_id` (`group_id`),
  CONSTRAINT `auth_user_groups_group_id_97559544_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `auth_user_groups_user_id_6a12ed8b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_groups`
--

LOCK TABLES `auth_user_groups` WRITE;
/*!40000 ALTER TABLE `auth_user_groups` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_user_permissions`
--

DROP TABLE IF EXISTS `auth_user_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_user_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_user_permissions_user_id_permission_id_14a6b632_uniq` (`user_id`,`permission_id`),
  KEY `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_user_permissions`
--

LOCK TABLES `auth_user_user_permissions` WRITE;
/*!40000 ALTER TABLE `auth_user_user_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6_fk_auth_user_id` (`user_id`),
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=78 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2019-09-01 11:37:35.991523','1','Article object (1)',1,'[{\"added\": {}}]',7,1),(2,'2019-09-02 21:49:54.995794','2','Diango + uwsgi + nginx 项目部署',1,'[{\"added\": {}}]',7,1),(3,'2019-09-02 21:50:33.142292','2','Diango + uwsgi + nginx 项目部署',2,'[{\"changed\": {\"fields\": [\"detail\"]}}]',7,1),(4,'2019-09-02 21:51:34.292119','2','Diango + uwsgi + nginx 项目部署',2,'[{\"changed\": {\"fields\": [\"detail\"]}}]',7,1),(5,'2019-09-02 23:34:56.343372','2','Diango + uwsgi + nginx 项目部署',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',7,1),(6,'2019-09-03 08:42:49.139952','3','django后台admin设置字段为空',1,'[{\"added\": {}}]',7,1),(7,'2019-09-03 08:45:38.331997','4','asyncio 的 coroutine对象 与 Future对象使用指南',1,'[{\"added\": {}}]',7,1),(8,'2019-09-03 08:46:41.718575','5','python3使用ntlm代理爬虫',1,'[{\"added\": {}}]',7,1),(9,'2019-09-03 08:47:49.668153','6','Flask 数据库迁移工具 flask-migrate',1,'[{\"added\": {}}]',7,1),(10,'2019-09-03 08:51:09.195348','7','浅析Python中bytes和str区别',1,'[{\"added\": {}}]',7,1),(11,'2019-09-03 08:52:32.719626','8','[asyncio随记一]asyncio的实现原理和关键源码分析',1,'[{\"added\": {}}]',7,1),(12,'2019-09-03 08:55:06.173167','9','Python在Windows环境下处理文件路径问题最佳实践',1,'[{\"added\": {}}]',7,1),(13,'2019-09-03 09:42:53.048835','10','Django Admin 后台管理系统',1,'[{\"added\": {}}]',7,1),(14,'2019-09-03 16:17:56.481848','10','Django Admin 后台管理系统',2,'[{\"changed\": {\"fields\": [\"add_time\"]}}]',7,1),(15,'2019-09-03 16:18:11.687792','9','Python在Windows环境下处理文件路径问题最佳实践',2,'[{\"changed\": {\"fields\": [\"add_time\"]}}]',7,1),(16,'2019-09-03 16:18:27.005618','8','[asyncio随记一]asyncio的实现原理和关键源码分析',2,'[{\"changed\": {\"fields\": [\"add_time\"]}}]',7,1),(17,'2019-09-03 16:18:43.925535','7','浅析Python中bytes和str区别',2,'[{\"changed\": {\"fields\": [\"add_time\"]}}]',7,1),(18,'2019-09-03 16:37:12.894709','1','受用一生的高效 PyCharm 使用技巧',2,'[{\"changed\": {\"fields\": [\"is_banner\"]}}]',7,1),(19,'2019-09-03 16:37:24.071078','2','Diango + uwsgi + nginx 项目部署',2,'[{\"changed\": {\"fields\": [\"is_banner\"]}}]',7,1),(20,'2019-09-03 16:38:01.313261','1','受用一生的高效 PyCharm 使用技巧',2,'[{\"changed\": {\"fields\": [\"desc\"]}}]',7,1),(21,'2019-09-03 23:09:18.493637','11','inux内存管理（最透彻的一篇）',1,'[{\"added\": {}}]',7,1),(22,'2019-09-03 23:17:13.739410','9','Python在Windows环境下处理文件路径问题最佳实践',2,'[{\"changed\": {\"fields\": [\"image\", \"is_banner\"]}}]',7,1),(23,'2019-09-03 23:21:15.545157','10','Django Admin 后台管理系统',2,'[{\"changed\": {\"fields\": [\"image\", \"is_banner\"]}}]',7,1),(24,'2019-09-03 23:21:32.723154','3','django后台admin设置字段为空',2,'[{\"changed\": {\"fields\": [\"image\", \"is_banner\"]}}]',7,1),(25,'2019-09-03 23:21:59.686633','4','asyncio 的 coroutine对象 与 Future对象使用指南',2,'[{\"changed\": {\"fields\": [\"image\", \"is_banner\"]}}]',7,1),(26,'2019-09-03 23:22:29.256126','5','python3使用ntlm代理爬虫',2,'[{\"changed\": {\"fields\": [\"image\", \"is_banner\"]}}]',7,1),(27,'2019-09-03 23:22:51.291082','8','[asyncio随记一]asyncio的实现原理和关键源码分析',2,'[{\"changed\": {\"fields\": [\"image\", \"is_banner\"]}}]',7,1),(28,'2019-09-03 23:23:26.812809','7','浅析Python中bytes和str区别',2,'[{\"changed\": {\"fields\": [\"image\", \"is_banner\"]}}]',7,1),(29,'2019-09-03 23:23:42.061140','6','Flask 数据库迁移工具 flask-migrate',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',7,1),(30,'2019-09-03 23:23:54.231333','6','Flask 数据库迁移工具 flask-migrate',2,'[{\"changed\": {\"fields\": [\"is_banner\"]}}]',7,1),(31,'2019-09-03 23:24:22.063655','11','inux内存管理（最透彻的一篇）',2,'[{\"changed\": {\"fields\": [\"image\", \"is_banner\"]}}]',7,1),(32,'2019-09-03 23:25:20.060554','11','Linux内存管理（最透彻的一篇）',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',7,1),(33,'2019-09-03 23:31:16.813323','12','深度理解python中的元类',1,'[{\"added\": {}}]',7,1),(34,'2019-09-03 23:32:40.460678','13','linux防火墙查看状态firewall、iptable',1,'[{\"added\": {}}]',7,1),(35,'2019-09-04 08:27:09.153690','14','docopt：构造一个漂亮的命令行工具',1,'[{\"added\": {}}]',7,1),(36,'2019-09-04 08:33:12.557736','15','Pycharm新建文件模板配置',1,'[{\"added\": {}}]',7,1),(37,'2019-09-04 08:34:03.335575','16','python读取大文件',1,'[{\"added\": {}}]',7,1),(38,'2019-09-04 08:36:00.531288','17','让 CPU 告诉你硬盘和网络到底有多慢',1,'[{\"added\": {}}]',7,1),(39,'2019-09-04 08:37:42.149998','18','windows最大路径长度',1,'[{\"added\": {}}]',7,1),(40,'2019-09-04 08:41:20.443421','19','Linux中CPU亲和性(affinity)',1,'[{\"added\": {}}]',7,1),(41,'2019-09-04 08:42:19.188203','20','linux 创建连接命令 ln -s 软链接',1,'[{\"added\": {}}]',7,1),(42,'2019-09-04 08:43:43.537906','21','数据库设计三大范式',1,'[{\"added\": {}}]',7,1),(43,'2019-09-07 00:57:48.821520','22','Django模板过滤器',1,'[{\"added\": {}}]',7,1),(44,'2019-09-07 13:12:15.986639','1','python',1,'[{\"added\": {}}]',10,1),(45,'2019-09-07 17:06:28.866112','2','linux',1,'[{\"added\": {}}]',10,1),(46,'2019-09-07 17:06:35.941572','3','other',1,'[{\"added\": {}}]',10,1),(47,'2019-09-07 17:40:42.406031','1','玩转Linux',1,'[{\"added\": {}}]',11,1),(48,'2019-09-07 17:40:44.332626','20','linux 创建连接命令 ln -s 软链接',2,'[{\"changed\": {\"fields\": [\"category\", \"tags\"]}}]',7,1),(49,'2019-09-07 17:42:26.879048','20','linux 创建连接命令 ln -s 软链接',2,'[]',7,1),(50,'2019-09-07 17:42:35.181104','13','linux防火墙查看状态firewall、iptable',2,'[{\"changed\": {\"fields\": [\"tags\"]}}]',7,1),(51,'2019-09-07 17:42:42.372366','11','Linux内存管理（最透彻的一篇）',2,'[{\"changed\": {\"fields\": [\"tags\"]}}]',7,1),(52,'2019-09-07 17:43:06.780357','2','python进阶',1,'[{\"added\": {}}]',11,1),(53,'2019-09-07 17:43:10.583844','12','深度理解python中的元类',2,'[{\"changed\": {\"fields\": [\"tags\"]}}]',7,1),(54,'2019-09-07 17:43:36.600343','3','好用工具',1,'[{\"added\": {}}]',11,1),(55,'2019-09-07 17:43:39.784081','14','docopt：构造一个漂亮的命令行工具',2,'[{\"changed\": {\"fields\": [\"tags\"]}}]',7,1),(56,'2019-09-09 08:29:45.681972','23','vim常用命令总结 （转)',1,'[{\"added\": {}}]',7,1),(57,'2019-09-09 08:31:27.756436','24','磁盘阵列RAID原理、种类及性能优缺点对比',1,'[{\"added\": {}}]',7,1),(58,'2019-09-09 08:32:49.536426','25','利用nc和tar拷贝两台linux主机之间大量的小文件',1,'[{\"added\": {}}]',7,1),(59,'2019-09-09 08:34:26.643711','4','windows',1,'[{\"added\": {}}]',10,1),(60,'2019-09-09 08:34:53.881091','4','别看不起windows',1,'[{\"added\": {}}]',11,1),(61,'2019-09-09 08:35:01.324499','26','查看windows操作系统的默认编码',1,'[{\"added\": {}}]',7,1),(62,'2019-09-09 08:36:10.754089','27','史上最全win10下Linux子系统的安装及优化方案',1,'[{\"added\": {}}]',7,1),(63,'2019-09-09 08:36:35.440761','18','windows最大路径长度',2,'[{\"changed\": {\"fields\": [\"category\", \"tags\"]}}]',7,1),(64,'2019-09-09 08:37:35.241642','1','python',2,'[{\"changed\": {\"fields\": [\"index\"]}}]',10,1),(65,'2019-09-09 08:37:42.350146','2','linux',2,'[{\"changed\": {\"fields\": [\"index\"]}}]',10,1),(66,'2019-09-09 08:37:50.496311','4','windows',2,'[{\"changed\": {\"fields\": [\"index\"]}}]',10,1),(67,'2019-09-09 15:46:08.166784','28','python单进程CPU是否会超过100%？',1,'[{\"added\": {}}]',7,1),(68,'2019-09-09 16:54:23.272537','5','web开发',1,'[{\"added\": {}}]',11,1),(69,'2019-09-09 16:54:26.994833','29','你真的了解 Cookie 和 Session 吗?',1,'[{\"added\": {}}]',7,1),(70,'2019-09-10 10:04:12.676752','5','python3使用ntlm代理爬虫',2,'[{\"changed\": {\"fields\": [\"image_url\", \"tags\"]}}]',7,1),(71,'2019-09-10 10:38:41.539401','15','Pycharm新建文件模板配置',2,'[{\"changed\": {\"fields\": [\"image_url\", \"tags\"]}}]',7,1),(72,'2019-09-10 10:41:41.454450','30','使用MobaXterm开启centos的远程桌面(个人笔记)',1,'[{\"added\": {}}]',7,1),(73,'2019-09-10 17:01:10.962051','31','为什么网站广告会推送和我们搜索相关的内容？Cookie到底是什么？',1,'[{\"added\": {}}]',7,1),(74,'2019-09-10 17:13:32.669855','32','为何广告竟然如此懂你？这锅不该Cookies来背',1,'[{\"added\": {}}]',7,1),(75,'2019-09-10 17:14:04.624237','31','为什么网站广告会推送和我们搜索相关的内容？Cookie到底是什么？',3,'',7,1),(76,'2019-09-11 09:43:36.309700','6','进击的数据',1,'[{\"added\": {}}]',11,1),(77,'2019-09-11 09:43:52.593506','33','MySQL数据库基础备份',1,'[{\"added\": {}}]',7,1);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (1,'admin','logentry'),(3,'auth','group'),(2,'auth','permission'),(4,'auth','user'),(5,'contenttypes','contenttype'),(7,'home','article'),(8,'home','banner'),(10,'home','category'),(12,'home','comment'),(9,'home','readandpraise'),(11,'home','tag'),(6,'sessions','session');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_migrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2019-09-01 11:35:07.485319'),(2,'auth','0001_initial','2019-09-01 11:35:07.574732'),(3,'admin','0001_initial','2019-09-01 11:35:08.390360'),(4,'admin','0002_logentry_remove_auto_add','2019-09-01 11:35:08.447862'),(5,'admin','0003_logentry_add_action_flag_choices','2019-09-01 11:35:08.458648'),(6,'contenttypes','0002_remove_content_type_name','2019-09-01 11:35:08.512439'),(7,'auth','0002_alter_permission_name_max_length','2019-09-01 11:35:08.536731'),(8,'auth','0003_alter_user_email_max_length','2019-09-01 11:35:08.565890'),(9,'auth','0004_alter_user_username_opts','2019-09-01 11:35:08.575977'),(10,'auth','0005_alter_user_last_login_null','2019-09-01 11:35:08.600359'),(11,'auth','0006_require_contenttypes_0002','2019-09-01 11:35:08.602011'),(12,'auth','0007_alter_validators_add_error_messages','2019-09-01 11:35:08.610582'),(13,'auth','0008_alter_user_username_max_length','2019-09-01 11:35:08.641836'),(14,'auth','0009_alter_user_last_name_max_length','2019-09-01 11:35:08.669222'),(15,'auth','0010_alter_group_name_max_length','2019-09-01 11:35:08.696156'),(16,'auth','0011_update_proxy_permissions','2019-09-01 11:35:08.704267'),(17,'home','0001_initial','2019-09-01 11:35:08.734157'),(18,'home','0002_auto_20190901_1132','2019-09-01 11:35:08.738379'),(19,'sessions','0001_initial','2019-09-01 11:35:08.752746'),(20,'home','0003_auto_20190902_1423','2019-09-02 14:24:05.452933'),(21,'home','0004_auto_20190902_1741','2019-09-02 17:41:53.013652'),(22,'home','0005_auto_20190903_0839','2019-09-03 08:39:44.541891'),(23,'home','0006_auto_20190903_2149','2019-09-03 23:05:36.147326'),(24,'home','0007_auto_20190905_1527','2019-09-05 15:27:51.256965'),(25,'home','0008_category_comment_tag','2019-09-07 01:29:09.487460'),(26,'home','0009_auto_20190907_1210','2019-09-07 13:06:13.206791'),(27,'home','0010_auto_20190907_1218','2019-09-07 17:05:08.988841'),(28,'home','0011_auto_20190907_1322','2019-09-07 17:05:08.993141'),(29,'home','0011_auto_20190907_1710','2019-09-07 17:12:46.726913'),(30,'home','0012_auto_20190907_1738','2019-09-07 17:38:16.062389'),(31,'home','0013_auto_20190910_0927','2019-09-10 09:54:35.735364');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('37psr2errpgyn57lcxvzm84l5x3hk5oa','MzkwNTk0ZmUxMTU1YTQ1ZDg4MDZmOGVlYjU0MDMwMWFiZWQxOWM0Mjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI1YjAzOTNhZWNhODkwYzU1M2IzOWMyZTUxNDc4MDc3MmNjNjY2NThlIn0=','2019-09-19 22:41:31.411301'),('qxvrf8nnvfknzlu0lpzovhr0fr5soen0','MzkwNTk0ZmUxMTU1YTQ1ZDg4MDZmOGVlYjU0MDMwMWFiZWQxOWM0Mjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI1YjAzOTNhZWNhODkwYzU1M2IzOWMyZTUxNDc4MDc3MmNjNjY2NThlIn0=','2019-09-16 14:08:33.847013'),('vlqfjtoa17xszqs04qikgvx0236fx7y5','MzkwNTk0ZmUxMTU1YTQ1ZDg4MDZmOGVlYjU0MDMwMWFiZWQxOWM0Mjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI1YjAzOTNhZWNhODkwYzU1M2IzOWMyZTUxNDc4MDc3MmNjNjY2NThlIn0=','2019-09-15 11:36:02.535376'),('vzgd6l54fkaff3hr69vjdy8gh6eyo9fs','MzkwNTk0ZmUxMTU1YTQ1ZDg4MDZmOGVlYjU0MDMwMWFiZWQxOWM0Mjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI1YjAzOTNhZWNhODkwYzU1M2IzOWMyZTUxNDc4MDc3MmNjNjY2NThlIn0=','2019-09-19 09:01:55.659447');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `home_article`
--

DROP TABLE IF EXISTS `home_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `home_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(100) NOT NULL,
  `image` varchar(100) DEFAULT NULL,
  `is_banner` tinyint(1) NOT NULL,
  `desc` varchar(1000) NOT NULL,
  `detail` longtext NOT NULL,
  `category_id` int(11) NOT NULL,
  `add_time` datetime(6) NOT NULL,
  `click_nums` int(11) NOT NULL,
  `user` varchar(20) NOT NULL,
  `praise_nums` int(11) NOT NULL,
  `image_url` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `home_article_category_id_f7eda728` (`category_id`)
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `home_article`
--

LOCK TABLES `home_article` WRITE;
/*!40000 ALTER TABLE `home_article` DISABLE KEYS */;
INSERT INTO `home_article` VALUES (1,'受用一生的高效 PyCharm 使用技巧','article/2019/09/1.jpg',1,'今天从 PyCharm 入手，写一些可以明显改善开发效率的使用技巧，一旦学会，受用一生。以下代码演示是在 Mac 环境下，Windows 也类似，Command 键 相当于 Windows 上的 Control 键。','<p>1. 代码排版，自动PEP8</p>\r\n\r\n<p>pep8&nbsp;是Python 语言的一个代码编写规范。如若你是新手，目前只想快速掌握基础，而不想过多去注重代码的的编写风格（虽然这很重要），那你可以尝试一下这个工具 -&nbsp;autopep8</p>\r\n\r\n<p>首先在全局环境中（不要在虚拟环境中安装），安装一下这个工具。</p>\r\n\r\n<p>sudo&nbsp;pip&nbsp;install&nbsp;autopep8</p>\r\n\r\n<p>然后在 Pycharm 里导入这个工具。</p>\r\n\r\n<p>Name:&nbsp;AutoPep8</p>\r\n\r\n<p>Description:&nbsp;autopep8&nbsp;your&nbsp;code</p>\r\n\r\n<p>Program:&nbsp;autopep8</p>\r\n\r\n<p>Arguments:&nbsp;--in-place&nbsp;--aggressive&nbsp;--aggressive&nbsp;$FilePath$</p>\r\n\r\n<p>Working&nbsp;directory:&nbsp;$ProjectFileDir$</p>\r\n\r\n<p>Output&nbsp;filters:&nbsp;$FILE_PATH$:$LINE$:$COLUMN$:.*</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13717038-56fff990f0adf654?imageMogr2/auto-orient/strip|imageView2/2/w/1080/format/webp\" /></p>\r\n\r\n<p>我随意写了一段不符合 pep8 规范的代码。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13717038-4504f20f84df547e?imageMogr2/auto-orient/strip|imageView2/2/w/1080/format/webp\" /></p>\r\n\r\n<p>点击右键，选择&nbsp;External Tools&nbsp;-&gt;&nbsp;AutoPep8</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13717038-57afa1de6c8e8fad?imageMogr2/auto-orient/strip|imageView2/2/w/1080/format/webp\" /></p>\r\n\r\n<p>看一下效果，还是挺明显的。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13717038-37b99912f453bd01?imageMogr2/auto-orient/strip|imageView2/2/w/1080/format/webp\" /></p>\r\n\r\n<p>你可能会说，Pycharm 本身就自带这个功能了呀，快捷键&nbsp;Command+Option+L&nbsp;，就可以实现一键pep8了。你可以对比一下，Pycharm 自带的代码 pep8 化功能 并没有像这个autopep8&nbsp;来得彻底。 我相信你最终的选择肯定是后者。</p>\r\n\r\n<p>2. 误删文件，一秒找回</p>\r\n\r\n<p>上周，由于自己的误操作，在没有任何备份的情况下，将一个自己写了两个星期的项目给删除了。待我回头神来的时候，我甚至都记不起是何时进行的删除操作。</p>\r\n\r\n<p>做为一名老司机，当然是临危不惧地打开了回收站，进行一番搜寻，几个月没有清理过的回收站，真是一片狼藉，什么 jpg，avi 都有，不堪入目呀。</p>\r\n\r\n<p>我用一分钟快速浏览了一下，没有发现我要找的那几个 py 文件，我心想，应该是文件太多了，看叉掉了。由于项目是最近写的，文件名我还清楚地记得，既然有文件名，那就利用windows 自带的搜索功能，结果还是没有，这下我才开始意识到事态的严重性，文件可能真的「没了」。</p>\r\n\r\n<p>我已经很久没有清理过回收站了，为什么回收站里会没有我的文件呢？</p>\r\n\r\n<p>我想这可能是一次非同寻常的 delete，会不会是在 Pycharm 里的 发起删除操作，不会往回收站里丢呢？经过一番测试，在回收站还真的找不着，但是这次尝试也无意中发现了 Pycharm 的隐藏的一个功能&nbsp;Local History，它会保存你对文件的所有操作记录。</p>\r\n\r\n<p>就拿我的刚刚测试的文件来举例，我先是新建了一个文件，然后对在这个文件里添加了几行代码。最后我将这个文件删除了。</p>\r\n\r\n<p>此时你可以在你的项目目录里，点击右键，有个&nbsp;Local History&nbsp;的选项，再点击子选项&nbsp;Show History，你可以看到这里有个记录板。如果你想恢复删除的文件，就在删除的记录项点击右键，选择&nbsp;Revert&nbsp;即可恢复。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13717038-23a3116f121bd305?imageMogr2/auto-orient/strip|imageView2/2/w/1070/format/webp\" /></p>\r\n\r\n<p>3. 拥抱Vim，远离鼠标</p>\r\n\r\n<p>在大多数场景之下，使用鼠标的效率和精准度，是远不如键盘快捷键的（前提是你已经相当熟练的掌握了快捷键），这个你得承认吧。</p>\r\n\r\n<p>Vi 可以满足你对文本操作的所有需求，比可视化界面更加效率，更加 geek。如果你和我一样，是忠实的 vim 粉。在安装完 Pycharm 完后，肯定会第一时间将&nbsp;ideaVim这个插件也装上，它可以让我们在 Pycharm 中 使用 vim 来编辑代码。</p>\r\n\r\n<p>安装方法如下，安装完后需要重启 Pycharm 生效。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13717038-4869d2cf4592f315?imageMogr2/auto-orient/strip|imageView2/2/w/1080/format/webp\" /></p>\r\n\r\n<p>4. 代码模板，效率编码</p>\r\n\r\n<p>Pycharm 提供的这个代码模板，可以说是相当实用的一个功能了。它可以在你新建一个文件时，按照你预设的模板给你生成一段内容，比如解释器路径，编码方法，作者详细信息等</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13717038-53511f8f218d304a?imageMogr2/auto-orient/strip|imageView2/2/w/1080/format/webp\" /></p>\r\n\r\n<p>按照上图模板，生成的效果如下。</p>\r\n\r\n<p>除了新建文件时可以初始化文件，在开发编写代码时，也同样使用 Pycharm 中自带的实用的代码模板，提高你的编码效率。</p>\r\n\r\n<p>当你在键盘中敲入&nbsp;Command&nbsp;+&nbsp;J&nbsp;时，就可以调出一个面板，从下图可以看出里面有许多预设的模板。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13717038-b6b04197474d2773?imageMogr2/auto-orient/strip|imageView2/2/w/854/format/webp\" /></p>\r\n\r\n<p>如果我们想选择最后一个 main ，可以继续键入 main，然后就可以直接生成如下这段平时都要手动敲入的代码。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13717038-901fd3de6b100257?imageMogr2/auto-orient/strip|imageView2/2/w/798/format/webp\" /></p>\r\n\r\n<p>这里再举个例子，for 循环 可以这样写。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13717038-130c922a94dfa677?imageMogr2/auto-orient/strip|imageView2/2/w/734/format/webp\" /></p>\r\n\r\n<p>5. 使用书签，快速定位</p>\r\n\r\n<p>都我在看框架的源代码时，最常使用的是&nbsp;Command&nbsp;+&nbsp;B&nbsp;（也就是 command + 鼠标左键 ）一层一层地往里深入，但是当源代码比较多，可能一整个事件过程涉及十几文件，函数调用错综复杂，对于一个庞大的项目来说，有用的可能就几个关键函数，每次要找到这几个函数，都要重头从源函数再一层一层的找下去，这样实在太麻烦了，我常常因此把自己给看晕了。</p>\r\n\r\n<p>直到后来我发现了 Pycharm 这个书签功能。</p>\r\n\r\n<p>使用书签功能，我可以在在关键的位置打上书签，想看的时候，调用书签，快速定位即可。</p>\r\n\r\n<p>使用它，你需要记住下面下几个快捷键</p>\r\n\r\n<p>Command&nbsp;+&nbsp;F11&nbsp;&nbsp;&nbsp;&nbsp;打上书签</p>\r\n\r\n<p>Shift&nbsp;+&nbsp;F11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;展示所有书签</p>\r\n\r\n<p>F11&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 删除书签（经测试仅能在Windows上有效）</p>\r\n\r\n<p>在你要打书签的位置，按下&nbsp;Command&nbsp;+&nbsp;F11&nbsp;，你可以给这个位置加个序号，可以是数字也可以是字母，假如在下面这个位置 加了&nbsp;1&nbsp;这个序号，下次你就可以使用&nbsp;Control&nbsp;+&nbsp;1&nbsp;直接跳转到这个位置。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13717038-0f8a1e7feff7b756?imageMogr2/auto-orient/strip|imageView2/2/w/1080/format/webp\" /></p>\r\n\r\n<p>当然你也可以不加，不加的话就是匿名书签了。你可以使用&nbsp;Shift&nbsp;+&nbsp;F11&nbsp;展示所有的书签，再进行跳转。</p>\r\n\r\n<p>本周的 PyCharm 高效技巧，就是这五个了，你学会了吗？</p>',1,'2019-09-01 11:36:00.000000',45,'RexDu',1,NULL),(2,'Diango + uwsgi + nginx 项目部署','article/2019/09/about_2.jpg',1,'自己通过nginx uwsgi 部署django项目，查询了很多资料，遇到了很多问题，最终完成了部署，趁着心情愉悦，写个随笔，为曾像我一样苦寻解决方案的小伙伴们提供些思路。','<p><img alt=\"\" src=\"/media/article/2019/09/02/about_3.jpg\" />安装Nginx：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n 1 #安装nginx\r\n 2 sudo apt-get install nginx\r\n 3 \r\n 4 #一些有用的命令\r\n 5 #启动nginx\r\n 6 sudo /etc/init.d/nginx start \r\n 7 #重启nginx\r\n 8sudo /etc/init.d/nginx restart</pre>\r\n\r\n<pre>\r\n 9 #停止nginx\r\n10 sudo /etc/init.d/nginx stop\r\n11 \r\n12 #很暴力的方法，我喜欢\r\n13 sudo killall nginx</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>安装uwsgi:</p>\r\n\r\n<pre>\r\n1 pip install uwsgi\r\n2 \r\n3 #注意uwsgi需要在虚拟环境中运行</pre>\r\n\r\n<p>配置uwsgi:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n#在项目目录中建立个conf文件夹，将nginx和uwsgi文件都放进去，不是必须#但是个好习惯\r\n\r\n#my_uwsgi.ini\r\nite_uwsgi.ini file\r\n[uwsgi]\r\n\r\n# Django-related settings\r\n# the base directory (full path)\r\nchdir           = /to/your/project/#这个是项目的路径\r\n# Django&#39;s wsgi file\r\nmodule          = project.wsgi#这个project要换成自己的项目名，也就是uwsgi.py所在的文件夹名\r\n# the virtualenv (full path)\r\nhome            = /home/ubuntu/.virtualenvs/虚拟环境名#这个就是虚拟环境的路径\r\n\r\n# process-related settings\r\n# master\r\nmaster          = true\r\n# maximum number of worker processes\r\nprocesses       = 10\r\n# the socket (use the full path to be safe\r\nsocket          = 127.0.0.1:8080#这个用来和Nginx对接，端口号可以改，本人项目将uwsgi作为本地服务，外网不能直接访问，用nginx作为代理，所以用本地的地址。\r\n# ... with appropriate permissions - may be needed\r\n# chmod-socket    = 664\r\n# clear environment on exit\r\nvacuum          = true\r\n~                          </pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>配置nginx</p>\r\n\r\n<pre>\r\n 1 #以下内容在mysite_nginx.conf中，这个文件名也可以随意起\r\n 2 # mysite_nginx.conf\r\n 3 \r\n 4 # the upstream component nginx needs to connect to\r\n 5 upstream django {\r\n 6     # server unix:///path/to/your/mysite/mysite.sock; # for a file socket\r\n 7     server 127.0.0.1:8080; #这个是用来跟uwsgi对接的，要和my_uwsgi.ini中写一致\r\n 8 }\r\n 9 \r\n10 # configuration of the server\r\n11 server {\r\n12     # the port your site will be served on\r\n13     listen      8000;#这个端口是nginx用来监听uwsgi的，默认的是80,总之项目是通过下面的server_name:8000来访问的\r\n14     # the domain name it will serve for\r\n15     server_name xxx.xxx.xx.xx ; #这个ip就是服务器的ip\r\n16     charset     utf-8;\r\n17 \r\n18     # max upload size\r\n19     client_max_body_size 75M;   # adjust to taste\r\n20 \r\n21     # Django media\r\n22     location /media  {\r\n23         alias /your/project/media;  #这个目录是项目的meda目录\r\n24     }\r\n25    location /static {\r\n26         alias /your/project/static; # 这个目录是项目的static目录\r\n27     }\r\n28 \r\n29     # Finally, send all non-media requests to the Django server.\r\n30     location / {\r\n31         uwsgi_pass  django;#这个是对接uwsgi的\r\n32         include     uwsgi_params; # 这个参数按我这样写nginx就能找到的\r\n33     }\r\n34 }\r\n35   </pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>将nginx配置文件链接到启动配置目录：</p>\r\n\r\n<pre>\r\n#注意修改下面的路径及文件名，哈哈不要只复制粘贴啊\r\nsudo ln -s ~/path/to/your/mysite/mysite_nginx.conf /etc/nginx/sites-enabled/</pre>\r\n\r\n<pre>\r\n修改django项目中的setting.py文件，添加</pre>\r\n\r\n<pre>\r\n#要将STATICFILES_DIRS =[os.path.join(BASE_DIR, &#39;static&#39;)]注释掉，Debug在生产模式也要改成False\r\n\r\nSTATIC_ROOT = os.path.join(BASE_DIR, &quot;static/&quot;)</pre>\r\n\r\n<p>将静态文件打包，让nginx代理：</p>\r\n\r\n<pre>\r\npython manage.py collectstatic</pre>\r\n\r\n<p>启动nginx,uwsgi</p>\r\n\r\n<pre>\r\n sudo /etc/init.d/nginx restart\r\n#进入conf文件夹，或者说配置的uwsgi.ini文件所在目录\r\n#uwsgi.ini改成自己的名字\r\nuwsgi -i uwsgi.ini</pre>\r\n\r\n<p>访问：</p>\r\n\r\n<p>ip:port(端口为nginx.conf中配置的）</p>\r\n\r\n<p>总结：</p>\r\n\r\n<p>写到这也差不多了，项目可以跑起来了，nginx，uwsgi高级配置还在学习中，希望本文对你有所帮助，谢谢。</p>\r\n\r\n<p>最后再提醒下，网上有很多配置文件的模板，将我写注释的地方对比修改下，别遗漏。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>参考文档：<a href=\"http://uwsgi-docs.readthedocs.io/en/latest/Nginx.html\" target=\"_blank\">https://uwsgi.readthedocs.io/en/latest/tutorials/Django_and_nginx.html</a></p>\r\n\r\n<p>　　　　　<a href=\"http://uwsgi-docs.readthedocs.io/en/latest/Nginx.html\" target=\"_blank\">http://uwsgi-docs.readthedocs.io/en/latest/Nginx.htm</a>l</p>',1,'2019-09-02 21:48:00.000000',15,'RexDu',0,NULL),(3,'django后台admin设置字段为空','article/2019/09/157276b30d936a4ae22b0e2e513973aa.jpg',1,'django后台admin设置字段为空','<p>设置null=True，则仅表示在数据库中该字段可以为空，但使用后台管理添加数据时仍然要需要输入值，因为Django自动做了数据验证不允许字段为空</p>\r\n\r\n<p>想要在Django中也可以将字段保存为空值，则需要添加另一个参数：blank=True</p>\r\n\r\n<blockquote>\r\n<p>null=True</p>\r\n\r\n<p>数据库中字段可以为空</p>\r\n\r\n<p>blank=True</p>\r\n\r\n<p>django的 Admin 中添加数据时可允许空值</p>\r\n</blockquote>\r\n\r\n<p>要想实现在Django 后台管理中添加空值，则应该如下设计表：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>class &nbsp; Hall(models.Model):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; name = models.CharField(max_length=120)</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; description = models.CharField(max_length=1024,blank=True,null=True)</p>\r\n</blockquote>',1,'2019-09-03 08:42:00.000000',6,'RexDu',0,NULL),(4,'asyncio 的 coroutine对象 与 Future对象使用指南','article/2019/09/0c6703db7792b0276b14f4920bf3d1d6.gif',1,'asyncio 的 coroutine对象 与 Future对象使用指南','<p><strong>coroutine 与 Future 的关系</strong></p>\r\n\r\n<p>看起来两者是一样的，因为都可以用以下的语法来异步获取结果，</p>\r\n\r\n<p><a href=\"https://www.jb51.net/article/92397.htm#\">?</a></p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p>result = await future</p>\r\n\r\n			<p>result = await coroutine</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>实际上，coroutine 是生成器函数，它既可以从外部接受参数，也可以产生结果。使用 coroutine 的好处是，我们可以暂停一个函数，然后稍后恢复执行。比如在涉及到网路操作的情况下，能够停下函数直到响应到来。在停下的这段时间内，我们可以切换到其他任务继续执行。</p>\r\n\r\n<p>而 Future 更像是 Javascript 中的 Promise 对象。它是一个占位符，其值会在将来被计算出来。在上述的例子中，当我们在等待网络 IO 函数完成时，函数会给我们一个容器，Promise 会在完成时填充该容器。填充完毕后，我们可以用回调函数来获取实际结果。</p>\r\n\r\n<p>Task 对象是 Future 的子类，它将 coroutine 和 Future 联系在一起，将 coroutine 封装成一个 Future 对象。</p>\r\n\r\n<p>一般会看到两种任务启动方法，</p>\r\n\r\n<p><a href=\"https://www.jb51.net/article/92397.htm#\">?</a></p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n			</td>\r\n			<td>\r\n			<p>tasks = asyncio.gather(</p>\r\n\r\n			<p>&nbsp;&nbsp;asyncio.ensure_future(func1()),</p>\r\n\r\n			<p>&nbsp;&nbsp;asyncio.ensure_future(func2())</p>\r\n\r\n			<p>)</p>\r\n\r\n			<p>loop.run_until_complete(tasks)</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>和</p>\r\n\r\n<p><a href=\"https://www.jb51.net/article/92397.htm#\">?</a></p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n			</td>\r\n			<td>\r\n			<p>tasks = [</p>\r\n\r\n			<p>&nbsp;&nbsp;asyncio.ensure_future(func1()),</p>\r\n\r\n			<p>&nbsp;&nbsp;asyncio.ensure_future(func2())</p>\r\n\r\n			<p>&nbsp;&nbsp;]</p>\r\n\r\n			<p>loop.run_until_complete(asyncio.wait(tasks))</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>ensure_future 可以将 coroutine 封装成 Task。asyncio.gather 将一些 Future 和 coroutine 封装成一个 Future。</p>\r\n\r\n<p>asyncio.wait 则本身就是 coroutine。</p>\r\n\r\n<p>run_until_complete 既可以接收 Future 对象，也可以是 coroutine 对象，</p>\r\n\r\n<p><a href=\"https://www.jb51.net/article/92397.htm#\">?</a></p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n			</td>\r\n			<td>\r\n			<p>BaseEventLoop.run_until_complete(future)</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>Run until the Future is done.</p>\r\n\r\n			<p>If the argument is a coroutine object, it is wrapped by ensure_future().</p>\r\n\r\n			<p>Return the Future&#39;s result, or raise its exception.</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>Task 任务的正确退出方式</strong></p>\r\n\r\n<p>在 asyncio 的任务循环中，如果使用 CTRL-C 退出的话，即使捕获了异常，Event Loop 中的任务会报错，出现如下的错误，</p>\r\n\r\n<p>Task was destroyed but it is pending!<br />\r\ntask: &lt;Task pending coro=&lt;kill_me() done, defined at test.py:5&gt; wait_for=&lt;Future pending cb=[Task._wakeup()]&gt;&gt;</p>\r\n\r\n<p>根据官方文档，Task 对象只有在以下几种情况，会认为是退出，</p>\r\n\r\n<p>a result / exception are available, or that the future was cancelled</p>\r\n\r\n<p>Task 对象的 cancel 和其父类 Future 略有不同。当调用 Task.cancel() 后，对应 coroutine 会在事件循环的下一轮中抛出 CancelledError 异常。使用 Future.cancelled() 并不能立即返回 True（用来表示任务结束），只有在上述异常被处理任务结束后才算是 cancelled。</p>\r\n\r\n<p>故结束任务可以用</p>\r\n\r\n<p><a href=\"https://www.jb51.net/article/92397.htm#\">?</a></p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p>for task in asyncio.Task.all_tasks():</p>\r\n\r\n			<p>&nbsp;&nbsp;task.cancel()</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>这种方法将所有任务找出并 cancel。</p>\r\n\r\n<p>但 CTRL-C 也会将事件循环停止，所以有必要重启事件循环，</p>\r\n\r\n<p><a href=\"https://www.jb51.net/article/92397.htm#\">?</a></p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n			</td>\r\n			<td>\r\n			<p>try:</p>\r\n\r\n			<p>&nbsp;&nbsp;loop.run_until_complete(tasks)</p>\r\n\r\n			<p>except KeyboardInterrupt as e:</p>\r\n\r\n			<p>&nbsp;&nbsp;for task in asyncio.Task.all_tasks():</p>\r\n\r\n			<p>&nbsp;&nbsp;&nbsp;&nbsp;task.cancel()</p>\r\n\r\n			<p>&nbsp;&nbsp;loop.run_forever() # restart loop</p>\r\n\r\n			<p>finally:</p>\r\n\r\n			<p>&nbsp;&nbsp;loop.close()</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>在每个 Task 中捕获异常是必要的，如果不确定，可以使用</p>\r\n\r\n<p>asyncio.gather(..., return_exceptions=True)</p>\r\n\r\n<p>将异常转换为正常的结果返回。</p>',1,'2019-09-03 08:44:00.000000',9,'RexDu',2,NULL),(5,'python3使用ntlm代理爬虫','article/2019/09/b0d8ce4fbaa150009bf6b0c38beaa021.jpg',1,'python3使用ntlm代理爬虫','<p>一、安装所需要的模块:</p>\r\n\r\n<p>ntlm-auth</p>\r\n\r\n<p>requests</p>\r\n\r\n<p>requests-ntlm</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>二、修改ntlm-auth模块中的代码：</p>\r\n\r\n<p>解决报错&quot;struct.error: unpack requires a bytes object of length 2&quot;</p>\r\n\r\n<p>修改Lib\\site-packages\\ntlm_auth\\target_info.py</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-</p>\r\n\r\n<p>Python 代码</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>1</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;from_string(self, data):</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>2</td>\r\n			<td>&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;attribute_type&nbsp;=&nbsp;0xff</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>3</td>\r\n			<td>&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;while&nbsp;attribute_type&nbsp;is&nbsp;not&nbsp;TargetInfo.MSV_AV_EOL:</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>修改为：</p>\r\n\r\n<p>-</p>\r\n\r\n<p>Python 代码</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>1</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;from_string(self, data):</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>2</td>\r\n			<td>&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;attribute_type&nbsp;=&nbsp;0xff</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>3</td>\r\n			<td>&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;if&nbsp;not&nbsp;data:</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>4</td>\r\n			<td>&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;return</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>5</td>\r\n			<td>&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;while&nbsp;attribute_type&nbsp;is&nbsp;not&nbsp;TargetInfo.MSV_AV_EOL:</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>新增两行代码</p>\r\n\r\n<p>三、爬虫代码：</p>\r\n\r\n<p>-</p>\r\n\r\n<p>Python 代码</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>1</td>\r\n			<td>import&nbsp;requests</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>2</td>\r\n			<td>import&nbsp;requests_ntlm</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>3</td>\r\n			<td>session&nbsp;=&nbsp;requests.session()</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>4</td>\r\n			<td>session.auth&nbsp;=&nbsp;requests_ntlm.HttpNtlmAuth(r&#39;china\\账号&#39;,&#39;密码&#39;, session)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>5</td>\r\n			<td>session.proxies&nbsp;=&nbsp;{&nbsp;&quot;http&quot;:&nbsp;&quot;<a href=\"http://proxy.huawei.com:8080/\">http://proxy.huawei.com:8080</a>&quot;,&nbsp;&quot;https&quot;:&nbsp;&quot;<a href=\"http://proxy.huawei.com:8080/\">http://proxy.huawei.com:8080</a>&quot;, }</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>6</td>\r\n			<td>page&nbsp;=&nbsp;session.get(&#39;<a href=\"http://www.baidu.com/\">http://www.baidu.com</a>&#39;)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>7</td>\r\n			<td>print(page.content.decode())</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>四、爬虫代码：</p>\r\n\r\n<p>针对python363,并且访问https网站,可以采用以下代码:</p>\r\n\r\n<p>-</p>\r\n\r\n<p>Python 代码</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>1</td>\r\n			<td>import&nbsp;requests</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>2</td>\r\n			<td>session&nbsp;=&nbsp;requests.session()</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>3</td>\r\n			<td>session.proxies&nbsp;=&nbsp;{&nbsp;&quot;http&quot;:&nbsp;&quot;<a href=\"http:\">http://</a>帐号:密码@proxy.huawei.com:8080&quot;,&nbsp;&quot;https&quot;:&nbsp;&quot;<a href=\"http:\">http://</a>帐号:密码@proxy.huawei.com:8080&quot;}</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>4</td>\r\n			<td>page&nbsp;=&nbsp;session.get(&#39;<a href=\"http://www.baidu.com/\">http://www.baidu.com/</a>&#39;, verify=False)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>5</td>\r\n			<td>page&nbsp;=&nbsp;session.get(&#39;<a href=\"https://www.baidu.com/\">https://www.baidu.com/</a>&#39;, verify=False)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>6</td>\r\n			<td>page&nbsp;=&nbsp;session.get(&#39;<a href=\"https://www.python.org/\">https://www.python.org/</a>&#39;, verify=False)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>7</td>\r\n			<td>print(page.content.decode())</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>注意点:</p>\r\n\r\n<p>1.密码中的特殊字符处理，有些特殊字符会造成访问网页失败。</p>\r\n\r\n<p>2.ipython有时会出现错误,这时候重启命令行窗口</p>\r\n\r\n<p>3.关于blog中的两种方法，有时候第一种管用,有时候第二种管用,有时候两种都可以用，具体什么原因造成的不清楚。</p>\r\n\r\n<p>4.关于https网站的访问,有如下的文章参考:一个关于python requests 和SSL证书的问题？(https://www.zhihu.com/question/40025043 )</p>\r\n\r\n<p>总结:</p>\r\n\r\n<p>（1）requests.get(&#39;<a href=\"https://www.python.org/\">https://www.python.org/</a>&#39;,&nbsp;verify=False)</p>\r\n\r\n<p>（2）然后在使用 urllib3 之前的代码中（即在使用 requests 之前），注入以下代码：</p>\r\n\r\n<p>-</p>\r\n\r\n<p>Python 代码</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>1</td>\r\n			<td>import&nbsp;urllib3.contrib.pyopenssl</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>2</td>\r\n			<td>urllib3.contrib.pyopenssl.inject_into_urllib3()</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>五、目前最新情况：</p>\r\n\r\n<p>下列代码在我本机的python3.7.0&nbsp; python3.7.1中验证通过，不需要上面文件的处理</p>\r\n\r\n<p>-</p>\r\n\r\n<p>Python 代码</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>01</td>\r\n			<td>import&nbsp;requests</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>02</td>\r\n			<td>headers&nbsp;=&nbsp;{&quot;user-agent&quot;:&nbsp;&quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36&quot;}</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>03</td>\r\n			<td># 代理变量设置，我的账户密码是存在文件中，个人使用时，请将 下面的三行注释掉，并将MyDomainAccount.user_name,MyDomainAccount.password修改为自己的域帐号和密码</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>04</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>05</td>\r\n			<td>import&nbsp;sys</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>06</td>\r\n			<td>sys.path.append(r&quot;F:\\Git_Code\\python3\\Python3Learning&quot;)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>07</td>\r\n			<td>from&nbsp;my_private_data.domain_data&nbsp;import&nbsp;MyDomainAccount</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>08</td>\r\n			<td>hw_proxy&nbsp;=&nbsp;&quot;<a href=\"http:\">http://</a>{0}:{1}@proxy.huawei.com:8080&quot;.format(MyDomainAccount.user_name,MyDomainAccount.password)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>09</td>\r\n			<td>proxies&nbsp;=&nbsp;{&nbsp;&quot;http&quot;: hw_proxy,&nbsp;&quot;https&quot;: hw_proxy, }</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>10</td>\r\n			<td># 访问网页</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>11</td>\r\n			<td>url&nbsp;=&nbsp;&quot;<a href=\"http://www.baidu.com/\">http://www.baidu.com</a>&quot;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>12</td>\r\n			<td>response&nbsp;=&nbsp;requests.get(url, headers=headers, proxies=proxies)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>13</td>\r\n			<td>print(response.status_code, response.content[:200])</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>附录：target_info.py(修改后的)</p>\r\n\r\n<p>-</p>\r\n\r\n<p>Python 代码<a href=\"http://3ms.huawei.com/km/blogs/details/5159077#viewSource\" title=\"查看代码\">查看代码</a></p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>01</td>\r\n			<td>&quot;&quot;&quot;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>02</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;Original Author: Ian Clegg</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>03</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;Project: ntlmlib</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>04</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;URL:&nbsp;<a href=\"https://github.com/ianclegg/ntlmlib\">https://github.com/ianclegg/ntlmlib</a></td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>05</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;License: Apache 2.0 License</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>06</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;Notes: Most of this code has been copied from the messages.py in the ntlmlib repo.</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>07</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;Some minor changes such as the name of the AV Pairs and extra comments have been added.</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>08</td>\r\n			<td>&quot;&quot;&quot;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>09</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>10</td>\r\n			<td>import&nbsp;struct</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>11</td>\r\n			<td>try:</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>12</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;collections&nbsp;import&nbsp;OrderedDict</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>13</td>\r\n			<td>except&nbsp;ImportError:</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>14</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;ordereddict&nbsp;import&nbsp;OrderedDict</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>15</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>16</td>\r\n			<td>class&nbsp;TargetInfo(object):</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>17</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;MSV_AV_EOL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;0x00</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>18</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;MSV_AV_NB_COMPUTER_NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;0x01</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>19</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;MSV_AV_NB_DOMAIN_NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;0x02</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>20</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;MSV_AV_DNS_COMPUTER_NAME&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;0x03</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>21</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;MSV_AV_DNS_DOMAIN_NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;0x04</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>22</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;MSV_AV_DNS_TREE_NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;0x05</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>23</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;MSV_AV_FLAGS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;0x06</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>24</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;MSV_AV_TIMESTAMP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;0x07</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>25</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;MSV_AV_SINGLE_HOST&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;0x08</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>26</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;MSV_AV_TARGET_NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;0x09</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>27</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;MSV_AV_CHANNEL_BINDINGS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;0x0a</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>28</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>29</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self, data=None):</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>30</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.fields&nbsp;=&nbsp;OrderedDict()</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>31</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;data&nbsp;is&nbsp;not&nbsp;None:</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>32</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.from_string(data)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>33</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>34</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__setitem__(self, key, value):</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>35</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.fields[key]&nbsp;=&nbsp;(len(value), value)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>36</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>37</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__getitem__(self, key):</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>38</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;key&nbsp;in&nbsp;self.fields:</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>39</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;self.fields[key]</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>40</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;None</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>41</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>42</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__delitem__(self, key):</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>43</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;del&nbsp;self.fields[key]</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>44</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>45</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;from_string(self, data):</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>46</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attribute_type&nbsp;=&nbsp;0xff</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>47</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;data:</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>48</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>49</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;attribute_type&nbsp;is&nbsp;not&nbsp;TargetInfo.MSV_AV_EOL:</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>50</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# Parse the Attribute Value pair from the structure</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>51</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attribute_type&nbsp;=&nbsp;struct.unpack(&#39;&lt;H&#39;, data[:struct.calcsize(&#39;&lt;H&#39;)])[0]</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>52</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;=&nbsp;data[struct.calcsize(&#39;&lt;H&#39;):]</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>53</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length&nbsp;=&nbsp;struct.unpack(&#39;&lt;H&#39;, data[:struct.calcsize(&#39;&lt;H&#39;)])[0]</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>54</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;=&nbsp;data[struct.calcsize(&#39;&lt;H&#39;):]</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>55</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# Add a new field to the object for the parse attribute value</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>56</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.fields[attribute_type]&nbsp;=&nbsp;(length, data[:length])</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>57</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;=&nbsp;data[length:]</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>58</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>59</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;get_data(self):</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>60</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;TargetInfo.MSV_AV_EOL&nbsp;in&nbsp;self.fields:</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>61</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;del&nbsp;self.fields[TargetInfo.MSV_AV_EOL]</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>62</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>63</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;=&nbsp;b&#39;&#39;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>64</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;self.fields.keys():</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>65</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;+=&nbsp;struct.pack(&#39;&lt;HH&#39;, i,&nbsp;self[i][0])</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>66</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;+=&nbsp;self[i][1]</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>67</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>68</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# end with a NTLMSSP_AV_EOL</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>69</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;+=&nbsp;struct.pack(&#39;&lt;HH&#39;, TargetInfo.MSV_AV_EOL,&nbsp;0)</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>70</td>\r\n			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;data</td>\r\n		</tr>\r\n	</tbody>\r\n</table>',1,'2019-09-03 08:45:00.000000',15,'RexDu',1,'http://pic13.nipic.com/20110409/7119492_114440620000_2.jpg'),(6,'Flask 数据库迁移工具 flask-migrate','article/2019/09/c665bf0eab240cc5d5021b4ac518c2ca.jpg',1,'新数据库迁移 flask-migrate','<p>新数据库迁移 flask-migrate</p>\r\n\r\n<p>由于模型中经常会新加一行或几行column (比如用来保存账户的确认状态)，此时要修改 models.py，并执行一次新数据库迁移</p>\r\n\r\n<p><br />\r\n具体步骤：<br />\r\napp\\models.py、app\\__init.py、manage.py里面，设置好 db的引用关系</p>\r\n\r\n<p>__init__.py：初始化db</p>\r\n\r\n<p>from flask_sqlalchemy import SQLAlchemy<br />\r\ndb = SQLAlchemy()<br />\r\ndb.init_app(app)<br />\r\nconfig[config_name].init_app(app) # config.py里，指定了数据库文件，比如 mysql:///, sqlite:///<br />\r\nmodels.py: 设置好表格、字段属性<br />\r\nfrom . import db, login_manager<br />\r\nclass Order(db.Model):<br />\r\n&nbsp; &nbsp; __tablename__ = &#39;orders&#39; &nbsp; &nbsp;# 订单表格<br />\r\n&nbsp; &nbsp; id = db.Column(db.Integer, primary_key=True)<br />\r\n&nbsp; &nbsp; body = db.Column(db.Text)<br />\r\n# 其它表格。。。<br />\r\nmanage.py：添加db命令<br />\r\nfrom app import create_app, db<br />\r\nfrom flask_script import Manager, Shell<br />\r\nfrom flask_migrate import Migrate, MigrateCommand<br />\r\napp = create_app(os.getenv(&#39;FLASK_CONFIG&#39;) or &#39;default&#39;)<br />\r\nmigrate = Migrate(app, db)<br />\r\nmanager.add_command(&#39;db&#39;, MigrateCommand)</p>\r\n\r\n<p><br />\r\n第一次使用：</p>\r\n\r\n<p>初始化：(venv) &nbsp;python manage.py db init&nbsp;这个命令会在项目下创建 migrations 文件夹，所有迁移脚本都存放其中。<br />\r\n创建第一个版本：(venv) $&nbsp;python manage.py db migrate -m &quot;initial migration&quot;&nbsp;&nbsp;检查migrations\\versions，会新建一个版本.py，检查里面表格及字段<br />\r\n运行升级 (venv) $&nbsp;python manage.py db upgrade，会把项目使用的数据库文件，更新为新的表格、字段，同时保留数据</p>\r\n\r\n<p><br />\r\n后缀更新：</p>\r\n\r\n<p>更新表格的字段 (models.py)<br />\r\n再次运行一下 db migrate -m -&gt; 相当于commit 更新到/migrate目录<br />\r\ndb upgrade -&gt; 数据库会更新<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\n<br />\r\n原文链接：https://blog.csdn.net/kevin_qq/article/details/51777190</p>',1,'2019-09-03 08:46:00.000000',21,'RexDu',2,NULL),(7,'浅析Python中bytes和str区别','article/2019/09/c4da05daeb7de40535208fa8e51782f6.jpg',1,'Python 3最重要的新特性之一是对字符串和二进制数据流做了明确的区分。文本总是Unicode，由str类型表示，二进制数据则由bytes类型表示。Python 3不会以任意隐式的方式混用str和bytes，你不能拼接字符串和字节流，也无法在字节流里搜索字符串（反之亦然），也不能将字符串传入参数为字节流的函数（反之亦然）。','<p>下面让我们深入分析一下二者的区别和联系。</p>\r\n\r\n<h2>编码发展的历史</h2>\r\n\r\n<p>在谈bytes和str之前，需要先说说关于编码是如何发展的。。</p>\r\n\r\n<p>在计算机历史的早期，美国为代表的英语系国家主导了整个计算机行业，26个英文字母组成了多样的英语单词、语句、文章。因此，最早的字符编码规范是<strong>ASCII码，一种8位即1个字节的编码规范</strong>，它可以涵盖整个英语系的编码需要。</p>\r\n\r\n<p>编码是什么？编码就是把一个字符用一个二进制来表示。我们都知道，所有的东西，不管是英文、中文还是符号等等，最终存储在磁盘上都是01010101这类东西。在计算机内部，读取和存储数据归根结底，处理的都是0和1组成的比特流。问题来了，人类看不懂这些比特流，如何让这些010101对人类变得可读呢？于是出现了字符编码，它是个翻译机，在计算机内部某个地方，透明的帮我们将比特流翻译成人类可以直接理解的文字。对于一般用户，不需要知道这个过程是什么原理，是怎么执行的。但是对于程序员却是个必须搞清楚的问题。</p>\r\n\r\n<p>以ASCII编码为例，它规定1个字节8个比特位代表1个字符的编码，也就是&ldquo;00000000&rdquo;这么宽，一个一个字节的解读。例如：01000001表示大写字母A，有时我们会&ldquo;偷懒&quot;的用65这个十进制来表示A在ASCII中的编码。8个比特位，可以没有重复的最多表示2的8次方(255)个字符。</p>\r\n\r\n<p>后来，计算机得到普及，中文、日文、韩文等等国家的文字需要在计算机内表示，ASCII的255位远远不够，于是标准组织制定出了叫做<strong>UNICODE的万国码</strong>，它规定<strong>任何一个字符（不管哪国的）至少以2个字节表示，可以更多</strong>。其中，英文字母就是用2个字节，而汉字是3个字节。这个编码虽然很好，满足了所有人的要求，但是它不兼容ASCII，同时还占用较多的空间和内存。因为，在计算机世界更多的字符是英文字母，明明可以1个字节就能够表示，非要用2个。</p>\r\n\r\n<p>于是UTF-8编码应运而生，它规定<strong>英文字母系列用1个字节表示，汉字用3个字节表示</strong>等等。因此，它兼容ASCII，可以解码早期的文档。UTF-8很快就得到了广泛的应用。</p>\r\n\r\n<p>在编码的发展历程中，我国还创造了自己的编码方式，例如GBK，GB2312，BIG5。他们只局限于在国内使用，不被国外认可。在GBK编码中，中文汉字占2个字节。</p>\r\n\r\n<h2>bytes和str之间的异同</h2>\r\n\r\n<p>回到bytes和str的身上。bytes是一种比特流，它的存在形式是01010001110这种。我们无论是在写代码，还是阅读文章的过程中，肯定不会有人直接阅读这种比特流，它必须有一个编码方式，使得它变成有意义的比特流，而不是一堆晦涩难懂的01组合。因为编码方式的不同，对这个比特流的解读也会不同，对实际使用造成了很大的困扰。下面让我们看看Python是如何处理这一系列编码问题的：</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; s = &quot;中文&quot;\r\n&gt;&gt;&gt; s\r\n&#39;中文&#39;\r\n&gt;&gt;&gt; type(s)\r\n&lt;class &#39;str&#39;&gt;\r\n&gt;&gt;&gt; b = bytes(s, encoding=&#39;utf-8&#39;)\r\n&gt;&gt;&gt; b\r\nb&#39;\\xe4\\xb8\\xad\\xe6\\x96\\x87&#39;\r\n&gt;&gt;&gt; type(b)\r\n&lt;class &#39;bytes&#39;&gt;</pre>\r\n\r\n<p>从例子可以看出，s是个字符串类型。Python有个内置函数bytes()可以将字符串str类型转换成bytes类型，b实际上是一串01的组合，但为了在ide环境中让我们相对直观的观察，它被表现成了b&#39;\\xe4\\xb8\\xad\\xe6\\x96\\x87&#39;这种形式，开头的b表示这是一个bytes类型。\\xe4是十六进制的表示方式，它占用1个字节的长度，因此<strong>&rdquo;中文&ldquo;</strong>被编码成utf-8后，我们可以数得出一共用了6个字节，每个汉字占用3个，这印证了上面的论述。在使用内置函数bytes()的时候，必须明确encoding的参数，不可省略。</p>\r\n\r\n<p>我们都知道，字符串类str里有一个encode()方法，它是<strong>从字符串向比特流的编码</strong>过程。而bytes类型恰好有个decode()方法，它是<strong>从比特流向字符串解码</strong>的过程。除此之外，我们查看Python源码会发现bytes和str拥有几乎一模一样的方法列表，最大的区别就是encode和decode。</p>\r\n\r\n<p>从实质上来说，字符串在磁盘上的保存形式也是01的组合，也需要编码解码。</p>\r\n\r\n<p>如果，上面的阐述还不能让你搞清楚两者的区别，那么记住下面两几句话：</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>在将字符串存入磁盘和从磁盘读取字符串的过程中，Python自动地帮你完成了编码和解码的工作，你不需要关心它的过程。</p>\r\n	</li>\r\n	<li>\r\n	<p>使用bytes类型，实质上是告诉Python，不需要它帮你自动地完成编码和解码的工作，而是用户自己手动进行，并指定编码格式。</p>\r\n	</li>\r\n	<li>\r\n	<p>Python已经严格区分了bytes和str两种数据类型，你不能在需要bytes类型参数的时候使用str参数，反之亦然。这点在读写磁盘文件时容易碰到。</p>\r\n	</li>\r\n</ol>\r\n\r\n<p>在bytes和str的互相转换过程中，实际就是编码解码的过程，必须显式地指定编码格式。</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; b\r\nb&#39;\\xe4\\xb8\\xad\\xe6\\x96\\x87&#39;\r\n&gt;&gt;&gt; type(b)\r\n&lt;class &#39;bytes&#39;&gt;\r\n&gt;&gt;&gt; s1 = str(b)\r\n&gt;&gt;&gt; s1\r\n&quot;b&#39;\\\\xe4\\\\xb8\\\\xad\\\\xe6\\\\x96\\\\x87&#39;&quot;\r\n&gt;&gt;&gt; type(s1)\r\n&lt;class &#39;str&#39;&gt;\r\n&gt;&gt;&gt; s1 = str(b, encoding=&#39;utf-8&#39;)\r\n&gt;&gt;&gt; s1\r\n&#39;中文&#39;\r\n&gt;&gt;&gt; type(s1)\r\n&lt;class &#39;str&#39;&gt;</pre>\r\n\r\n<p>我们再把字符串s1，转换成gbk编码的bytes类型：</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; s1\r\n&#39;中文&#39;\r\n&gt;&gt;&gt; type(s1)\r\n&lt;class &#39;str&#39;&gt;\r\n&gt;&gt;&gt; b =  bytes(s1, encoding=&#39;gbk&#39;)\r\n&gt;&gt;&gt; b\r\nb&#39;\\xd6\\xd0\\xce\\xc4&#39;</pre>',1,'2018-12-14 08:50:00.000000',2,'RexDu',1,NULL),(8,'[asyncio随记一]asyncio的实现原理和关键源码分析','article/2019/09/eb067bbf60cb42698d051c561365a1b2.jpg',1,'最近在python3.7上用asyncio做项目，实现web的服务端，一边从GitHub和StackOverflow上抄代码，一边在看asyncio相关的源码，所学所思，姑且写在这里。','<h2>为什么会出现协程（coroutine）这种设计？</h2>\r\n\r\n<p>&nbsp; &nbsp; 多线程（thread）也是同时执行多个任务的一种设计，为什么有了多线程，我们还要设计协程，它有什么不同呢？</p>\r\n\r\n<p>&nbsp; &nbsp; 首先，多线程的目的是什么？</p>\r\n\r\n<p>&nbsp; &nbsp; 一种说法，利用多核的性能，让代码占用尽可能的计算资源，运行快一点。这算是个原因吧，我们简称为并行（parallelism）。在这里，我还不想抠字眼讨论并发（cocurrent）和并行。</p>\r\n\r\n<p>&nbsp; &nbsp; 另一种说法，我们程序有些任务是cpu密集型（逻辑计算比较多），有些任务是IO密集型（读写文件或网络比较多），如果遇到IO密集型计算，比如从网站上下载一个大文件，这时候如果是阻塞下载，并且只有一个线程的话，程序的其他逻辑就无法执行，从这个程序的角度讲，他没能很好的占有cpu的资源，白白地等待下载的结束。如果开了另外一个线程的话，这个下载线程虽然阻塞掉了，但是别的线程依然可以跑别的逻辑，就可以更充分的占有cpu的资源。有人称同时执行不同的任务为并发。</p>\r\n\r\n<p>(TODO？ 图1 任务调度示意图)</p>\r\n\r\n<p>&nbsp; &nbsp; 同样针对上面第二种问题，我们换个角度表述，我们有一个IO密集型任务，还有一个cpu密集型任务，我们想有效的运行这两个任务，不让IO密集型任务阻塞了cpu密集型任务，所以我们构造了一个任务调度器，当IO密集任务开始从网站上下载大文件的时候，我们把他从调度器上暂时移开，后面再去检查他，让调度器去执行cpu密集任务，在此期间我们可能会时不时的去检查IO任务有没有下载完毕（也可能是被动通知，如软件驱动的中断），如果发现完毕了，调度器可能会暂停当前的cpu密集任务，转而继续执行IO密集任务的后续工作。在多线程环境下，这个调度器就是操作系统，两个任务是两个线程。而协程，就是这个思路，只不过设计的更加极端一点，我们在多线程环境下，几乎不可能手动地控制先执行什么线程，再执行什么线程（只是操作系统的调度工作），而如果我们专门写了一个任务调度器，我们自己实现应用层面的调度算法，就可能实现先执行什么任务，再执行什么任务，什么时候暂停一个任务，什么时候恢复运行这个任务。这个可控的调度机制，就是协程。他的初始目的就是实现任务的并发，只不过想更加精细地控制任务的暂停和继续。<strong>协程是种设计思想，线程是计算机实现多任务的一种工程机制，线程可以用于实现协程。</strong></p>\r\n\r\n<h3>asyncio的模样</h3>\r\n\r\n<p>&nbsp; &nbsp; 我们先杜撰一段代码应景。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14535670-e3a3b83686b219f6.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" /></p>\r\n\r\n<p>图2 调度器和两个任务</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;如图2所示，我们用async def定义了两个函数，一个下载大文件，一个做一些逻辑运算。然后我们实现了一个调度函数，在调度函数里，我们分别用两个任务函数创建了两个任务，加入到asyncio的event loop里面，接着，我们运行这个event loop，这样，两个任务就开始执行起来了。注意，async with和await的时候，都是执行一个异步函数的过程，这个时候，当前任务<strong>会主动让出event loop</strong>，去后台执行一些网络IO，event loop会选择自己等待队列的任务继续执行。等原来网络IO的任务结束网络IO，他会重新加入到event loop的等待队列，等待其他任务<strong>主动让出event loop</strong>，被动等待调度。比如self_play在执行await asyncio.sleep(3)的时候会<strong>主动让出event loop</strong>。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;上面我特别强调了主动让出event loop，这是协程的核心思想，如果一个任务没有任何await或async with逻辑，那么它一旦执行，别的任务再也没有机会被调度到。比如，我们如果去掉self_play的await语句，整个event loop将永远被self_play所占用，其他任务再也没有机会执行，整个输出只有左右右手慢动作了。总之，<strong>爸爸不给，你不能抢。</strong>这一点和朴素的多线程很不一样。</p>\r\n\r\n<h3>asyncio实现原理推测</h3>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;从上面的介绍，我们可以大概猜出，asyncio主要有一个任务调度器（event loop），然后可以用async def定义异步函数作为任务逻辑，通过create_task接口把任务挂到event loop上。event loop的运行过程应该是个不停循环的过程，不停查看等待类别有没有可以执行的任务，如果有的话执行任务，直到碰到await之类的主动让出event loop的函数，如此反复。</p>\r\n\r\n<p>（TODO？ 图3 event loop调度示意图）</p>\r\n\r\n<h4>asyncio源码分析</h4>\r\n\r\n<p>&nbsp; &nbsp; 更进一步的问，evnet loop大致是怎么实现的呢？怎么进行调度的呢？</p>\r\n\r\n<p>&nbsp; &nbsp; 我们顺藤摸瓜，在asyncio/base_events.py里面我们看到了create_task的源码实现，代码的关键是Task的构造，传了一个event loop（loop参数）进去，也就是在这个时候，task注册到了event loop上面。注册过程是c实现的（见文末附录1），但本质上都是通过event loop的call_soon()。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14535670-b46ea0023c096af2.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" /></p>\r\n\r\n<p>图4 create_task的实现</p>\r\n\r\n<p>&nbsp; &nbsp; 图5，是run_forever的实现，基本上是不停的在循环，然后每一个循环执行一帧（_run_once）。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14535670-d6e8b6cf134234eb.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" /></p>\r\n\r\n<p>图5 run_forever()的实现</p>\r\n\r\n<p>&nbsp; &nbsp; 图6是每一帧的代码实现，基本上是在调度队列里找到这一帧应该执行的任务（任务最终注册在event loop的结构是Handle，通过call_soon()实现），直接_run()。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14535670-bc02704f4acb872b.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" /></p>\r\n\r\n<p>图6 event loop每一帧的逻辑实现</p>\r\n\r\n<p>&nbsp; &nbsp; event loop的call_soon，是注册任务时使用的，字面意思是下一帧执行当前注册的任务。它的本质就是把当前任务封装成Handle，放到_ready里面，如图7所示。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14535670-663cad4523caa535.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" /></p>\r\n\r\n<p>图7 注册任务的最终实现</p>\r\n\r\n<p>&nbsp; &nbsp; 调度队列是event驱动形成的，这也是为什么<strong>asyncio的核心叫做event loop</strong>。这部分代码同样也在_run_once()里面，见图7，这个select就是某种多路复用机制，比如select，epoll和iocp。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14535670-eb7ae32765d3d164.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" /></p>\r\n\r\n<p>图8 event loop处理消息流程</p>\r\n\r\n<p>&nbsp; &nbsp; 图8给出了select机制下的selector.select实现，看起来是不是有点熟悉啊。消息处理相关我们后续在常用接口里会再次提到。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14535670-f8323d4716849ed8.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" /></p>\r\n\r\n<p>图9 select模式下的消息归集</p>\r\n\r\n<h4>总结一下asyncio的实现思路</h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;有一个任务调度器event loop，我们可以把需要执行的coroutine打包成task加入到event loop的调度列表里面（以Handle形式）。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;在event loop的每个帧里面，它会检查需要执行那些task，然后运行这些task，可能拿到最终结果，也可能执行一半继续await别的任务，任务之间互相wait，通过回调来把任务串联起来（后面常用接口会继续深入介绍，实现细节见附录2）。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;任务可能会依赖别的IO消息，在每一帧，event loop都会用selector处理相应的消息，执行相应的callback函数。</p>\r\n\r\n<p>&nbsp; &nbsp; 我们当前的介绍里，只有一个event loop，这个event loop跑在主线程里面。当然，event loop还可以开线程池处理别的任务，或者，多个线程里执行多个event loop，他们之间还有交互，我们这里不在介绍。&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;单个event loop跑在单个线程有个好处，只要自己不主动await，就会一直占有主线程，换句话说，<strong>同步函数一定没有数据冲突（data racing）</strong>。对比多线程方案，如果需要处理数据冲突，就需要加锁了，这在很多情况下会降低程序的性能。所以协程这种设计思路，非常适合有多个用户、但是每个用户之间没有共享数据的场景。如果需要实现并行，多开几个进程就行了。</p>\r\n\r\n<p>&nbsp; &nbsp; 但是实际上在工程里面，我们很难单用一个线程处理问题，asyncio也不例外，特别在集成别的同步库的时候，可能需要用到别的线程，我们后续介绍。</p>\r\n\r\n<hr />\r\n<h3>后续笔记</h3>\r\n\r\n<h4>asyncio常用接口及其意义（实用主义）</h4>\r\n\r\n<h4>如何集成asyncio和同步库（介绍executor线程池对event loop的影响）</h4>\r\n\r\n<h4>为什么异步编程容易犯错（数据冲突）</h4>\r\n\r\n<hr />\r\n<h4>不适宜骚年的附录</h4>\r\n\r\n<p>1. Task的构造的c实现</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;我们打开<a href=\"https://github.com/python/cpython/blob/addf8afb43af58b9bf56a0ecfd0f316dd60ac0c3/Modules/_asynciomodule.c\" rel=\"nofollow\" target=\"_blank\">男性社交网站</a>，这是event loop实现的核心代码。在这里我们找到了task的c实现_asyncio_Task___init___impl(<a href=\"https://github.com/python/cpython/blob/addf8afb43af58b9bf56a0ecfd0f316dd60ac0c3/Modules/_asynciomodule.c#L1933\" rel=\"nofollow\" target=\"_blank\">L1933</a>)，它的核心代码执行ask_all_step_soon，间接调用脚本的event loop的call_soon，并且把自己加入到all_task这个全局list（通过register_task，主要是后面索引使用）。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14535670-f012b63d8c9b07ff.png?imageMogr2/auto-orient/strip|imageView2/2/w/950/format/webp\" /></p>\r\n\r\n<p>图10 task构造函数实现</p>\r\n\r\n<p>2. task执行细节</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;task的执行，实现在task_step(<a href=\"https://github.com/python/cpython/blob/addf8afb43af58b9bf56a0ecfd0f316dd60ac0c3/Modules/_asynciomodule.c#L2878\" rel=\"nofollow\" target=\"_blank\">L2878</a>)和task_step_impl(<a href=\"https://github.com/python/cpython/blob/addf8afb43af58b9bf56a0ecfd0f316dd60ac0c3/Modules/_asynciomodule.c#L2540\" rel=\"nofollow\" target=\"_blank\">L2540</a>)&nbsp; 。其中task_step是asyncio任务执行的核心，对于一个coroutine，每次task_step得到一个结果，然后根据结果判断是否拿到了最终结果，或者需要继续计算等待别的结果，或者把结果扔给自己的waiter。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;python的await都是通过generator实现的，具体的计算在<a href=\"https://github.com/python/cpython/blob/8fdd331bbf7e60dd81c02c7077f44c7939e2a05d/Objects/genobject.c#L152\" rel=\"nofollow\" target=\"_blank\">genobject</a>，主要是通过PyEval_EvalFrameEx拿计算结果。</p>',1,'2018-09-14 08:51:00.000000',8,'RexDu',0,NULL),(9,'Python在Windows环境下处理文件路径问题最佳实践','article/2019/09/about_4.jpg',1,'Windows中路径分隔符是反斜线’\\’，而在Python中’\\’又有转义符的作用，因而直接从windows资源管理器复制的路径在Python中是不能正常识别的。','<ul>\r\n	<li><strong>最优实践：</strong><br />\r\n	使用os.path.join来join不同的路径，比如\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<pre>\r\n1\r\n</pre>\r\n				</td>\r\n				<td>\r\n				<pre>\r\npath=os.path.join(dirpath,filepath)\r\n</pre>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n</ul>\r\n\r\n<p>也可以使用os.sep，python会根据不同的系统自动选择合适的路径分隔符</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n1\r\n</pre>\r\n			</td>\r\n			<td>\r\n			<pre>\r\npath=dirpath+os.sep+filepath\r\n</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ul>\r\n	<li><strong>次优方案</strong><br />\r\n	可以将所有路径都使用正斜线&rsquo;/&lsquo;，不管在Windows和Linux中都适用.</li>\r\n	<li><strong>不要使用</strong><br />\r\n	在引用的字符串前面加上&rsquo;r&rsquo;可以将转义字符串(escaped strings )转换为原始字符串(raw strings)，可以解决部分问题。比如：\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<pre>\r\n1\r\n2\r\n</pre>\r\n				</td>\r\n				<td>\r\n				<pre>\r\nfile=open(&#39;c:\\myfile&#39;) #打开错误\r\nfile=open(r&#39;c:\\myfile&#39;)#可以正确打开\r\n</pre>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n</ul>\r\n\r\n<p>但是&rsquo;r&rsquo;是为了方便书写正则表达式而不是为了解决Windows下文件路径问题而设计的特性，所以会遇到一下问题</p>\r\n\r\n<blockquote>\r\n<p>file=open(r&rsquo;c:\\dir\\&rsquo;+&rsquo;myfile&rsquo;)</p>\r\n</blockquote>\r\n\r\n<p>上述代码是错误的，虽然&rsquo;\\&rsquo;失去了转义作用，但仍然有保护作用，其后的&lsquo;&rsquo;&rsquo;并不会被视为closing delimiter。</p>\r\n\r\n<p>由此可见，使用r不仅没有完全解决问题，还会引入新的问题，所以最好不要使用。</p>',1,'2018-08-02 08:54:00.000000',3,'RexDu',0,NULL),(10,'Django Admin 后台管理系统','article/2019/09/62e3b3aa3aba407199799b0516ee5cc9.jpg',1,'Django自带了强大的名为admin的后台管理功能，app名称为django.contrib.admin，它同时依赖了django.contrib.auth认证系统和django.contrib.sessions系统，当然，即使不用admin，后面两者都建议加上，不用重复造轮子。','<ul>\r\n	<li>\r\n	<p>为了使用它，我们需要先使用migrate功能去创建相应的数据库表，直接执行python manage.py makemigrations &amp;&amp; python manage.py migrate即可。运行程序后，直接访问<a href=\"http://127.0.0.1:8000/admin/\" rel=\"nofollow\">http://127.0.0.1:8000/admin/</a>就能访问admin了(一般admin的路由都是定义好了的，在urls.py中有url(r&#39;^admin/&#39;, admin.site.urls),)</p>\r\n	</li>\r\n	<li>\r\n	<p>我们需要先创建一个超级管理员python manage.py createsuperuser，按照提示输入用户名密码即可用来登录了</p>\r\n	</li>\r\n	<li>\r\n	<p>如果要让字段非必填，需要在定义model字段的时候就加上blank=True参数</p>\r\n	</li>\r\n	<li>\r\n	<p>修改超级管理员密码可以这样做:</p>\r\n	复制\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n</pre>\r\n				</td>\r\n				<td>\r\n				<pre>\r\n# python manage.py shell\r\nfrom django.contrib.auth.models import User  \r\nuser =User.objects.get(username=&#39;admin&#39;)  \r\nuser.set_password(&#39;new_password&#39;)  \r\nuser.save()\r\n</pre>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n</ul>\r\n\r\n<h3>使用admin管理数据表</h3>\r\n\r\n<p>为了管理具体的某张表，我们需要在app下的admin.py文件里面注册相应的model：</p>\r\n\r\n<p>复制</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n19\r\n20\r\n21\r\n22\r\n23\r\n24\r\n25\r\n26\r\n27\r\n28\r\n29\r\n30\r\n31\r\n32\r\n33\r\n34\r\n35\r\n36\r\n37\r\n38\r\n39\r\n40\r\n41\r\n42\r\n43\r\n44\r\n45\r\n46\r\n47\r\n</pre>\r\n			</td>\r\n			<td>\r\n			<pre>\r\nfrom django import forms\r\nfrom django.contrib import admin\r\nfrom django.contrib.auth.models import Group\r\nfrom django.contrib.auth.forms import ReadOnlyPasswordHashField\r\nfrom django.contrib.auth.admin import UserAdmin as BaseUserAdmin\r\nfrom myapp.models import PostModel\r\n\r\nclass PostAdmin(admin.ModelAdmin):\r\n  list_display = (&#39;id&#39;, &#39;name&#39;, &#39;created_at&#39;)	# 定义后台列表显示时需要显示哪些字段\r\n  list_per_page = 50		# 定义后台列表显示时每页显示数量\r\n  list_filter = (&#39;id&#39;, &#39;name&#39;, )	# 定义后台列表显示时能够筛选的字段(会列出所有的可筛选值)\r\n  search_fields = (&#39;username&#39;, &#39;email&#39;,)	# 指定能搜索哪些字段\r\n  list_editable = [&#39;field&#39;]	# 定义可以直接在列表页进行更改的字段\r\n  fx_fields = (&#39;user_id&#39;, )	# 定义列表页显示的外键字段，会直接显示关联的值\r\n  filter_horizontal = (&#39;posts&#39;)	# 显示多对多字段\r\n  readonly_fields = (&#39;username&#39;)	# 设置只读字段，不允许更改\r\n  ordering = (&#39;-created_at&#39;, )	# 定义列表显示的顺序，负号表示降序\r\n  fieldsets = (		# 对字段进行分类设置，前端会分开显示\r\n  	(None, {&#39;fields&#39;: (&#39;username&#39;, &#39;password&#39;, )}),\r\n  	(&#39;Personal info&#39;, {&#39;fields&#39;: (&#39;firstname&#39;, )}),\r\n    (&#39;Permissions&#39;, {&#39;fields&#39;: (&#39;groups&#39;, )}),\r\n  )\r\n  add_fieldsets = (	# 定义添加数据时需要填写哪些字段\r\n    (None, {&#39;classes&#39;: (&#39;wide&#39;,), &#39;fields&#39;: (&#39;name&#39;, &#39;content&#39; )}),\r\n    )\r\n  \r\n  def save_model(self, request, obj, form, change):\r\n    &quot;&quot;&quot;定义保存对象的方式，可以在这里做一些其他的事情。这个方法不需要返回任何东西，如果要捕获其中的错误或者重定向，最好是设置一个对象字段，然后在response_change或response_add中进行处理&quot;&quot;&quot;\r\n    self.has_error = True\r\n    self.message_user(request, &quot;友好地给用户显示错误信息&quot;, level=logging.ERROR)\r\n    super().save_model(request, obj, form, change)\r\n    return\r\n  \r\n  def response_change(self, request, obj):\r\n    &quot;&quot;&quot;改变记录之后的响应操作，可以捕获错误并返回应该返回的消息&quot;&quot;&quot;\r\n    if self.has_error:\r\n      return HttpResponseRedirect(request.path)\r\n    else:\r\n      return super().response_chage(request, obj)\r\n  \r\n  def respopnse_add(self, request, obj, post_url_continue=None):\r\n    &quot;&quot;&quot;添加记录之后的响应操作&quot;&quot;&quot;\r\n    return super().response_add(request, obj, post_url_continue)\r\n  \r\nadmin.site.register(PostModel, PostAdmin)	# 注册管理模型\r\nadmin.site.site_header = &#39;后台页面的header&#39;\r\nadmin.site.site_title = &#39;后台的title&#39;\r\n</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h3>自定义admin管理数据创建及修改表单</h3>\r\n\r\n<p>复制</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n</pre>\r\n			</td>\r\n			<td>\r\n			<pre>\r\nclass MyModelCreationForm(forms.ModelForm):\r\n    &quot;&quot;&quot;自定义创建表单&quot;&quot;&quot;\r\n    field_name = forms.CharField(label=&#39;field_name&#39;)\r\n    \r\n    class Meta:\r\n        model = MyModel\r\n        fields = (&#39;email&#39;, &#39;field2&#39;)\r\n        exclude = (&#39;created_at&#39;, )	# 排除某些字段不用在后台管理\r\n\r\nclass MyModelChangeForm(forms.ModelForm):\r\n    &quot;&quot;&quot;自定义修改表单&quot;&quot;&quot;\r\n    password = ReadOnlyPasswordHashField(label= (&quot;Password&quot;), help_text= (&quot;Raw passwords are not stored, so there is no way to see this user&#39;s password, but you can change the password using &lt;a href=\\&quot;../password/\\&quot;&gt;this form&lt;/a&gt;.&quot;))	# 如果要修改密码字段，我们需要这样提示\r\n    def clean_password(self):\r\n        return self.initial[&quot;password&quot;]\r\n\r\nclass UserAdmin(BaseUserAdmin):	# 用户管理需要继承单独的Admin\r\n    form = UserChangeForm				# 指定修改表单\r\n    add_form = UserCreationForm	# 指定创建表单\r\n</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h3>Django-CKeditor富文本编辑使用</h3>\r\n\r\n<p>django-ckeditor扩展，使用简单，前端也漂亮</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>安装pip install django-ckeditor，如果要在富文本里添加图片还需要pip install pillow</p>\r\n	</li>\r\n	<li>\r\n	<p>注册应用，INSTALLED_APPS里添加ckeditor，图片还需要添加ckeditor_uploader</p>\r\n	</li>\r\n	<li>\r\n	<p>如果要使用自定义的文件存储，例如七牛云存储，可以参考<a href=\"https://haofly.net/django-storage\">这篇文章</a>进行设置</p>\r\n	</li>\r\n	<li>\r\n	<p>如果要处理图片，还需要在settings.py里面添加如下设置:</p>\r\n	复制\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n</pre>\r\n				</td>\r\n				<td>\r\n				<pre>\r\n# 前面两个可能已经设置了，是存放用户上传文件的地方\r\nMEDIA_URL = &#39;/media/&#39;\r\nMEDIA_ROOT = os.path.join(BASE_DIR, &#39;media&#39;)\r\n \r\nCKEDITOR_UPLOAD_PATH = &#39;upload/&#39;\r\n\r\nCKEDITOR_CONFIGS = {	# 添加个性化的配置\r\n    &#39;default&#39;: {\r\n        &#39;image_previewText&#39;:&#39; &#39;,	# 替换图片显示区域那一串搞不懂的字符串\r\n        &#39;tabSpaces&#39;: 4,\r\n    }\r\n}\r\n</pre>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n\r\n	<p>另外还需要添加一个路由用于上传请求</p>\r\n	复制\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n</pre>\r\n				</td>\r\n				<td>\r\n				<pre>\r\nfrom django.conf.urls.static import static\r\n\r\nurlpatterns = [\r\n	...\r\n    path(&#39;ckeditor/&#39;, include(&#39;ckeditor_uploader.urls&#39;)),\r\n] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\r\n</pre>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n\r\n	<p>模型里面对应的字段设置</p>\r\n	复制\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n</pre>\r\n				</td>\r\n				<td>\r\n				<pre>\r\nfrom ckeditor.fields import RichTextField\r\n\r\nclass Post(models.Model):\r\n    content = RichTextField()\r\n    content2 = RichTextUploadingField()	# 带有上传图片功能的富文本编辑\r\n</pre>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n</ol>\r\n\r\n<p>Django-CKeditor目前还不支持粘贴的时候自动上传图片，我的做法是在对象的Admin的save_model方法里面对没有转换为内链的外部链接图片通过requests抓取下来再上传到七牛云，以达到自动替换的效果。这只是最简单的做法，当然，最好的做法还是在前端监听粘贴事件，实时上传。</p>\r\n\r\n<h3>Django-MarkdownX文本编辑器使用</h3>\r\n\r\n<p>目前，Django-CKeditor暂时还不支持markdown，所以只能用Django-Markdownx来代替，要兼容两者就只能用两个字段来存储了。引入步骤：</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>安装依赖，并且将markdownx加入INSTALLED_APPS中</p>\r\n	复制\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<pre>\r\n1\r\n</pre>\r\n				</td>\r\n				<td>\r\n				<pre>\r\npip install django-markdownx\r\n</pre>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n</ol>\r\n\r\n<ol>\r\n	<li>\r\n	<p>添加路由vim app/urls.py:</p>\r\n	复制\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<pre>\r\n1\r\n2\r\n3\r\n4\r\n</pre>\r\n				</td>\r\n				<td>\r\n				<pre>\r\nurlpatterns = [\r\n    [...]\r\n    url(r&#39;^markdownx/&#39;, include(&#39;markdownx.urls&#39;)),\r\n]\r\n</pre>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n</ol>\r\n\r\n<ol>\r\n	<li>\r\n	<p>字段定义</p>\r\n	复制\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<pre>\r\n1\r\n2\r\n</pre>\r\n				</td>\r\n				<td>\r\n				<pre>\r\nclass Post(models.Model):\r\n  content = MarkdownxField()\r\n</pre>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n</ol>\r\n\r\n<ol>\r\n	<li>\r\n	<p>自定义tag，vim app/templatetags/base.py</p>\r\n	复制\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n19\r\n20\r\n21\r\n22\r\n23\r\n24\r\n25\r\n26\r\n27\r\n28\r\n29\r\n30\r\n31\r\n32\r\n33\r\n34\r\n35\r\n36\r\n37\r\n38\r\n39\r\n</pre>\r\n				</td>\r\n				<td>\r\n				<pre>\r\nimport markdown\r\nfrom django import template\r\nfrom django.utils.safestring import mark_safe\r\n\r\nregister = template.Library()\r\n\r\n@register.filter(is_safe=True)\r\ndef custom_markdown(value):\r\n    return mark_safe(\r\n        markdown.markdown(\r\n            value,\r\n            extensions=[\r\n                &quot;markdown.extensions.extra&quot;,\r\n                &quot;markdown.extensions.toc&quot;,\r\n                &quot;markdown.extensions.sane_lists&quot;,\r\n                &quot;markdown.extensions.nl2br&quot;,\r\n                &quot;markdown.extensions.codehilite&quot;,\r\n            ],\r\n            safe_mode=True,\r\n            enable_attributes=False,\r\n        )\r\n    )\r\n\r\n@register.filter(is_safe=False)\r\ndef custom_markdown_unsafe(value):\r\n    return mark_safe(\r\n        markdown.markdown(\r\n            value,\r\n            extensions=[\r\n                &quot;markdown.extensions.extra&quot;,\r\n                &quot;markdown.extensions.toc&quot;,\r\n                &quot;markdown.extensions.sane_lists&quot;,\r\n                &quot;markdown.extensions.nl2br&quot;,\r\n                &quot;markdown.extensions.codehilite&quot;,\r\n            ],\r\n            safe_mode=False,\r\n            enable_attributes=False,\r\n        )\r\n    )\r\n</pre>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n</ol>\r\n\r\n<ol>\r\n	<li>\r\n	<p>添加相关配置到配置文件</p>\r\n	复制\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n</pre>\r\n				</td>\r\n				<td>\r\n				<pre>\r\nMARKDOWNX_MARKDOWNIFY_FUNCTION = &#39;markdownx.utils.markdownify&#39;\r\nMARKDOWNX_MARKDOWN_EXTENSION_CONFIGS = {}\r\nMARKDOWNX_URLS_PATH = &#39;/markdownx/markdownify/&#39;\r\nMARKDOWNX_UPLOAD_URLS_PATH = &#39;/markdownx/upload/&#39;\r\nMARKDOWNX_MEDIA_PATH = &#39;media/markdownx/img&#39;\r\nMARKDOWNX_UPLOAD_MAX_SIZE = 5 * 1024 * 1024\r\nMARKDOWNX_UPLOAD_CONTENT_TYPES = [&#39;image/jpeg&#39;, &#39;image/png&#39;, &#39;image/svg+xml&#39;]\r\nMARKDOWNX_IMAGE_MAX_SIZE = {&#39;size&#39;: (800, 500), &#39;quality&#39;: 100,}\r\nMARKDOWNX_EDITOR_RESIZABLE = True\r\nMARKDOWNX_MARKDOWN_EXTENSIONS = [\r\n    &#39;markdown.extensions.fenced_code&#39;,\r\n    &#39;markdown.extensions.codehilite&#39;,\r\n    &#39;markdown.extensions.smarty&#39;,\r\n    &#39;markdown.extensions.extra&#39;,\r\n    &#39;markdown.extensions.tables&#39;,\r\n    &#39;markdown.extensions.sane_lists&#39;,\r\n    ]\r\n</pre>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n</ol>\r\n\r\n<ol>\r\n	<li>\r\n	<p>前端模板这样渲染</p>\r\n	复制\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<pre>\r\n1\r\n2\r\n3\r\n</pre>\r\n				</td>\r\n				<td>\r\n				<pre>\r\n&lt;div&gt;\r\n  {{ content | custom_markdown }}\r\n&lt;/div&gt;\r\n</pre>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n</ol>\r\n\r\n<h5>左右分割显示</h5>\r\n\r\n<p>默认的编辑器样式是上下分割，上面编辑，下面实时显示，但是对于长文本十分不方便，如果要进行左右分割，需要这样做：</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>引入bootstrap依赖，并且将bootstrap3加入INSTALLED_APPS中</p>\r\n	复制\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<pre>\r\n1\r\n</pre>\r\n				</td>\r\n				<td>\r\n				<pre>\r\npip install django-bootstrap3\r\n</pre>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n</ol>\r\n\r\n<ol>\r\n	<li>\r\n	<p>覆写原本的编辑框，app/templates/markdownx/widget2.html:</p>\r\n	复制\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n</pre>\r\n				</td>\r\n				<td>\r\n				<pre>\r\n{% load bootstrap3 %}\r\n{% bootstrap_css %}\r\n{% bootstrap_javascript %}\r\n&lt;div class=&quot;markdownx row&quot;&gt;\r\n    &lt;div class=&quot;col-md-6&quot;&gt;\r\n        {% include &#39;django/forms/widgets/textarea.html&#39; %}\r\n    &lt;/div&gt;\r\n    &lt;div class=&quot;col-md-1&quot;&gt;&lt;/div&gt;\r\n    &lt;div class=&quot;col-md-5&quot;&gt;\r\n        &lt;div class=&quot;markdownx-preview&quot;&gt;&lt;/div&gt;\r\n    &lt;/div&gt;\r\n&lt;/div&gt;\r\n</pre>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n</ol>\r\n\r\n<ol>\r\n	<li>\r\n	<p>添加admin管理：</p>\r\n	复制\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<pre>\r\n1\r\n2\r\n3\r\n4\r\n</pre>\r\n				</td>\r\n				<td>\r\n				<pre>\r\nclass PostAdmin(admin.ModelAdmin):\r\n      formfield_overrides = {\r\n        models.TextField: {&#39;widget&#39;: AdminMarkdownxWidget},\r\n    }\r\n</pre>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n</ol>',1,'2018-07-01 09:41:00.000000',3,'RexDu',0,NULL),(11,'Linux内存管理（最透彻的一篇）','article/2019/09/62e3b3aa3aba407199799b0516ee5cc9_HjV4Qn3.jpg',1,'摘要：本章首先以应用程序开发者的角度审视Linux的进程内存管理，在此基础上逐步深入到内核中讨论系统物理内存管理和内核内存的使用方法。力求从外到内、水到渠成地引导网友分析Linux的内存管理与使用。在本章最后，我们给出一个内存映射的实例，帮助网友们理解内核内存管理与用户内存管理之间的关系，希望大家最终能驾驭Linux内存管理。','<p>摘要：本章首先以应用程序开发者的角度审视Linux的进程内存管理，在此基础上逐步深入到内核中讨论系统物理内存管理和内核内存的使用方法。力求从外到内、水到渠成地引导网友分析Linux的内存管理与使用。在本章最后，我们给出一个内存映射的实例，帮助网友们理解内核内存管理与用户内存管理之间的关系，希望大家最终能驾驭Linux内存管理。</p>\r\n\r\n<h2>前言</h2>\r\n\r\n<p>内存管理一向是所有操作系统书籍不惜笔墨重点讨论的内容，无论市面上或是网上都充斥着大量涉及内存管理的教材和资料。因此，我们这里所要写的Linux内存管理采取避重就轻的策略，从理论层面就不去班门弄斧，贻笑大方了。我们最想做的和可能做到的是从开发者的角度谈谈对内存管理的理解，最终目的是把我们在内核开发中使用内存的经验和对Linux内存管理的认识与大家共享。</p>\r\n\r\n<p>当然，这其中我们也会涉及到一些诸如段页等内存管理的基本理论，但我们的目的不是为了强调理论，而是为了指导理解开发中的实践，所以仅仅点到为止，不做深究。</p>\r\n\r\n<p>遵循&ldquo;理论来源于实践&rdquo;的&ldquo;教条&rdquo;，我们先不必一下子就钻入内核里去看系统内存到底是如何管理，那样往往会让你陷入似懂非懂的窘境（我当年就犯了这个错误！）。所以最好的方式是先从外部（用户编程范畴）来观察进程如何使用内存，等到大家对内存的使用有了较直观的认识后，再深入到内核中去学习内存如何被管理等理论知识。最后再通过一个实例编程将所讲内容融会贯通。</p>\r\n\r\n<h2>进程与内存</h2>\r\n\r\n<h3><a name=\"t2\"></a>进程如何使用内存？</h3>\r\n\r\n<p>毫无疑问，所有进程（执行的程序）都必须占用一定数量的内存，它或是用来存放从磁盘载入的程序代码，或是存放取自用户输入的数据等等。不过进程对这些内存的管理方式因内存用途不一而不尽相同，有些内存是事先静态分配和统一回收的，而有些却是按需要动态分配和回收的。</p>\r\n\r\n<p>对任何一个普通进程来讲，它都会涉及到5种不同的数据段。稍有编程知识的朋友都能想到这几个数据段中包含有&ldquo;程序代码段&rdquo;、&ldquo;程序数据段&rdquo;、&ldquo;程序堆栈段&rdquo;等。不错，这几种数据段都在其中，但除了以上几种数据段之外，进程还另外包含两种数据段。下面我们来简单归纳一下进程对应的内存空间中所包含的5种不同的数据区。</p>\r\n\r\n<p><em>代码段</em>：代码段是用来存放可执行文件的操作指令，也就是说是它是可执行程序在内存中的镜像。代码段需要防止在运行时被非法修改，所以只准许读取操作，而不允许写入（修改）操作&mdash;&mdash;它是不可写的。</p>\r\n\r\n<p><em>数据段</em>：数据段用来存放可执行文件中已初始化全局变量，换句话说就是存放程序静态分配<a href=\"http://www.kerneltravel.net/journal/v/mem.htm#_ftn1\" target=\"_blank\" title=\"\">[1]</a>的变量和全局变量。</p>\r\n\r\n<p><em>BSS段<a href=\"http://www.kerneltravel.net/journal/v/mem.htm#_ftn2\" target=\"_blank\" title=\"\">[2]</a></em>：BSS段包含了程序中未初始化的全局变量，在内存中&nbsp;bss段全部置零。</p>\r\n\r\n<p><em>堆（heap）</em>：堆是用于存放进程运行中被动态分配的内存段，它的大小并不固定，可动态扩张或缩减。当进程调用malloc等函数分配内存时，新分配的内存就被动态添加到堆上（堆被扩张）；当利用free等函数释放内存时，被释放的内存从堆中被剔除（堆被缩减）</p>\r\n\r\n<p><em>栈</em>：栈是用户存放程序临时创建的局部变量，也就是说我们函数括弧&ldquo;{}&rdquo;中定义的变量（但不包括static声明的变量，static意味着在数据段中存放变量）。除此以外，在函数被调用时，其参数也会被压入发起调用的进程栈中，并且待到调用结束后，函数的返回值也会被存放回栈中。由于栈的先进先出特点，所以栈特别方便用来保存/恢复调用现场。从这个意义上讲，我们可以把堆栈看成一个寄存、交换临时数据的内存区。</p>\r\n\r\n<h3>进程如何组织这些区域？</h3>\r\n\r\n<p>上述几种内存区域中数据段、BSS和堆通常是被连续存储的&mdash;&mdash;内存位置上是连续的，而代码段和栈往往会被独立存放。有趣的是，堆和栈两个区域关系很&ldquo;暧昧&rdquo;，他们一个向下&ldquo;长&rdquo;（i386体系结构中栈向下、堆向上），一个向上&ldquo;长&rdquo;，相对而生。但你不必担心他们会碰头，因为他们之间间隔很大（到底大到多少，你可以从下面的例子程序计算一下），绝少有机会能碰到一起。</p>\r\n\r\n<p>下图简要描述了进程内存区域的分布：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&ldquo;事实胜于雄辩&rdquo;，我们用一个小例子（原形取自《User-Level Memory Management》）来展示上面所讲的各种内存区的差别与位置。<img alt=\"\" src=\"http://www.kerneltravel.net/journal/v/mem.files/image001.gif\" style=\"height:468px; width:159px\" /></p>\r\n\r\n<p><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img alt=\"复制代码\" src=\"https://common.cnblogs.com/images/copycode.gif\" /></a></p>\r\n\r\n<pre>\r\n#include&lt;stdio.h&gt;\r\n\r\n#include&lt;malloc.h&gt;\r\n\r\n#include&lt;unistd.h&gt;\r\n\r\nint bss_var;\r\n\r\nint data_var0=1;\r\n\r\nint main(int argc,char **argv)\r\n\r\n{\r\n\r\n  　　printf(&quot;below are addresses of types of process&#39;s mem\\n&quot;);\r\n\r\n  　　printf(&quot;Text location:\\n&quot;);\r\n\r\n  　　printf(&quot;\\tAddress of main(Code Segment):%p\\n&quot;,main);\r\n\r\n  　　printf(&quot;____________________________\\n&quot;);\r\n\r\n  　　int stack_var0=2;\r\n\r\n  　　printf(&quot;Stack Location:\\n&quot;);\r\n\r\n  　　printf(&quot;\\tInitial end of stack:%p\\n&quot;,&amp;stack_var0);\r\n\r\n  　　int stack_var1=3;\r\n\r\n  　　printf(&quot;\\tnew end of stack:%p\\n&quot;,&amp;stack_var1);\r\n\r\n  　　printf(&quot;____________________________\\n&quot;);\r\n\r\n  　　printf(&quot;Data Location:\\n&quot;);\r\n\r\n  　　printf(&quot;\\tAddress of data_var(Data Segment):%p\\n&quot;,&amp;data_var0);\r\n\r\n  　　static int data_var1=4;\r\n\r\n  　　printf(&quot;\\tNew end of data_var(Data Segment):%p\\n&quot;,&amp;data_var1);\r\n\r\n 　　 printf(&quot;____________________________\\n&quot;);\r\n\r\n  　　printf(&quot;BSS Location:\\n&quot;);\r\n\r\n  　　printf(&quot;\\tAddress of bss_var:%p\\n&quot;,&amp;bss_var);\r\n\r\n 　　 printf(&quot;____________________________\\n&quot;);\r\n\r\n  　　char *b = sbrk((ptrdiff_t)0);\r\n\r\n 　　 printf(&quot;Heap Location:\\n&quot;);\r\n\r\n 　　 printf(&quot;\\tInitial end of heap:%p\\n&quot;,b);\r\n\r\n 　　 brk(b+4);\r\n\r\n  　　b=sbrk((ptrdiff_t)0);\r\n\r\n  　　printf(&quot;\\tNew end of heap:%p\\n&quot;,b);\r\n\r\n　　  return 0;\r\n\r\n }</pre>\r\n\r\n<p><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img alt=\"复制代码\" src=\"https://common.cnblogs.com/images/copycode.gif\" /></a></p>\r\n\r\n<p>它的结果如下：</p>\r\n\r\n<p><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img alt=\"复制代码\" src=\"https://common.cnblogs.com/images/copycode.gif\" /></a></p>\r\n\r\n<pre>\r\nbelow are addresses of types of process&#39;s mem\r\n\r\nText location:\r\n\r\n   Address of main(Code Segment):0x8048388\r\n\r\n____________________________\r\n\r\nStack Location:\r\n\r\n   Initial end of stack:0xbffffab4\r\n\r\n   new end of stack:0xbffffab0\r\n\r\n____________________________\r\n\r\nData Location:\r\n\r\n   Address of data_var(Data Segment):0x8049758\r\n\r\n   New end of data_var(Data Segment):0x804975c\r\n\r\n____________________________\r\n\r\nBSS Location:\r\n\r\n   Address of bss_var:0x8049864\r\n\r\n____________________________\r\n\r\nHeap Location:\r\n\r\n   Initial end of heap:0x8049868\r\n\r\n   New end of heap:0x804986c</pre>\r\n\r\n<p><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img alt=\"复制代码\" src=\"https://common.cnblogs.com/images/copycode.gif\" /></a></p>\r\n\r\n<p>利用size命令也可以看到程序的各段大小，比如执行size example会得到</p>\r\n\r\n<p>　　text&nbsp; &nbsp; data&nbsp;bss&nbsp;dec&nbsp; &nbsp;hex filename</p>\r\n\r\n<p>　　1654&nbsp; 280&nbsp;&nbsp;&nbsp;8&nbsp; &nbsp;1942 796 example</p>\r\n\r\n<p>但这些数据是程序编译的静态统计，而上面显示的是进程运行时的动态值，但两者是对应的。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>通过前面的例子，我们对进程使用的逻辑内存分布已先睹为快。这部分我们就继续进入操作系统内核看看，进程对内存具体是如何进行分配和管理的。</p>\r\n\r\n<p>从用户向内核看，所使用的内存表象形式会依次经历&ldquo;逻辑地址&rdquo;&mdash;&mdash;&ldquo;线性地址&rdquo;&mdash;&mdash;&ldquo;物理地址&rdquo;几种形式（关于几种地址的解释在前面已经讲述了）。逻辑地址经段机制转化成线性地址；线性地址又经过页机制转化为物理地址。（但是我们要知道Linux系统虽然保留了段机制，但是将所有程序的段地址都定死为0-4G，所以虽然逻辑地址和线性地址是两种不同的地址空间，但在Linux中逻辑地址就等于线性地址，它们的值是一样的）。沿着这条线索，我们所研究的主要问题也就集中在下面几个问题。</p>\r\n\r\n<p>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;进程空间地址如何管理？</p>\r\n\r\n<p>2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;进程地址如何映射到物理内存？</p>\r\n\r\n<p>3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;物理内存如何被管理？</p>\r\n\r\n<p>以及由上述问题引发的一些子问题。如系统虚拟地址分布；内存分配接口；连续内存分配与非连续内存分配等。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>进程内存空间</h2>\r\n\r\n<p>Linux操作系统采用虚拟内存管理技术，使得每个进程都有各自互不干涉的进程地址空间。该空间是块大小为4G的线性虚拟空间，用户所看到和接触到的都是该虚拟地址，无法看到实际的物理内存地址。利用这种虚拟地址不但能起到保护操作系统的效果（用户不能直接访问物理内存），而且更重要的是，用户程序可使用比实际物理内存更大的地址空间（具体的原因请看硬件基础部分）。</p>\r\n\r\n<p>在讨论进程空间细节前，这里先要澄清下面几个问题：</p>\r\n\r\n<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第一、4G的进程地址空间被人为的分为两个部分&mdash;&mdash;用户空间与内核空间。用户空间从0到3G（0xC0000000），内核空间占据3G到4G。用户进程通常情况下只能访问用户空间的虚拟地址，不能访问内核空间虚拟地址。只有用户进程进行系统调用（代表用户进程在内核态执行）等时刻可以访问到内核空间。</p>\r\n\r\n<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第二、用户空间对应进程，所以每当进程切换，用户空间就会跟着变化；而内核空间是由内核负责映射，它并不会跟着进程改变，是固定的。内核空间地址有自己对应的页表（init_mm.pgd），用户进程各自有不同的页表。</p>\r\n\r\n<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第三、每个进程的用户空间都是完全独立、互不相干的。不信的话，你可以把上面的程序同时运行10次（当然为了同时运行，让它们在返回前一同睡眠100秒吧），你会看到10个进程占用的线性地址一模一样。</p>\r\n\r\n<h3><a name=\"t5\"></a>进程内存管理</h3>\r\n\r\n<p>进程内存管理的对象是进程线性地址空间上的内存镜像，这些内存镜像其实就是进程使用的虚拟内存区域（memory region）。进程虚拟空间是个32或64位的&ldquo;平坦&rdquo;（独立的连续区间）地址空间（空间的具体大小取决于体系结构）。要统一管理这么大的平坦空间可绝非易事，为了方便管理，虚拟空间被划分为许多大小可变的(但必须是4096的倍数)内存区域，这些区域在进程线性地址中像停车位一样有序排列。这些区域的划分原则是&ldquo;将访问属性一致的地址空间存放在一起&rdquo;，所谓访问属性在这里无非指的是&ldquo;可读、可写、可执行等&rdquo;。</p>\r\n\r\n<p>如果你要查看某个进程占用的内存区域，可以使用命令cat /proc/&lt;pid&gt;/maps获得（pid是进程号，你可以运行上面我们给出的例子&mdash;&mdash;./example &amp;;pid便会打印到屏幕），你可以发现很多类似于下面的数字信息。</p>\r\n\r\n<p>由于程序example使用了动态库，所以除了example本身使用的的内存区域外，还会包含那些动态库使用的内存区域（区域顺序是：代码段、数据段、bss段）。</p>\r\n\r\n<p>我们下面只抽出和example有关的信息，除了前两行代表的代码段和数据段外，最后一行是进程使用的栈空间。</p>\r\n\r\n<p>-------------------------------------------------------------------------------</p>\r\n\r\n<p>08048000 - 08049000 r-xp&nbsp;00000000&nbsp;03:03&nbsp;439029&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/home/mm/src/example</p>\r\n\r\n<p>08049000 - 0804a000&nbsp;rw-p 00000000&nbsp;03:03&nbsp;439029&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/home/mm/src/example</p>\r\n\r\n<p>&hellip;&hellip;&hellip;&hellip;&hellip;</p>\r\n\r\n<p>bfffe000 - c0000000&nbsp;rwxp&nbsp;ffff000&nbsp;00:00&nbsp;0</p>\r\n\r\n<p>----------------------------------------------------------------------------------------------------------------------</p>\r\n\r\n<p>每行数据格式如下：</p>\r\n\r\n<p>（内存区域）开始－结束 访问权限&nbsp;&nbsp;偏移&nbsp;&nbsp;主设备号：次设备号&nbsp;i节点&nbsp;&nbsp;文件。</p>\r\n\r\n<p>注意，你一定会发现进程空间只包含三个内存区域，似乎没有上面所提到的堆、bss等，其实并非如此，程序内存段和进程地址空间中的内存区域是种模糊对应，也就是说，堆、bss、数据段（初始化过的）都在进程空间中由数据段内存区域表示。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>在Linux内核中对应进程内存区域的数据结构是:&nbsp;vm_area_struct,&nbsp;内核将每个内存区域作为一个单独的内存对象管理，相应的操作也都一致。采用面向对象方法使VMA结构体可以代表多种类型的内存区域－－比如内存映射文件或进程的用户空间栈等，对这些区域的操作也都不尽相同。</p>\r\n\r\n<p>vm_area_strcut结构比较复杂，关于它的详细结构请参阅相关资料。我们这里只对它的组织方法做一点补充说明。vm_area_struct是描述进程地址空间的基本管理单元，对于一个进程来说往往需要多个内存区域来描述它的虚拟空间，如何关联这些不同的内存区域呢？大家可能都会想到使用链表，的确vm_area_struct结构确实是以链表形式链接，不过为了方便查找，内核又以红黑树（以前的内核使用平衡树）的形式组织内存区域，以便降低搜索耗时。并存的两种组织形式，并非冗余：链表用于需要遍历全部节点的时候用，而红黑树适用于在地址空间中定位特定内存区域的时候。内核为了内存区域上的各种不同操作都能获得高性能，所以同时使用了这两种数据结构。</p>\r\n\r\n<p>下图反映了进程地址空间的管理模型：</p>\r\n\r\n<p><img alt=\"\" src=\"http://www.kerneltravel.net/journal/v/mem.files/image004.gif\" style=\"height:246px; width:576px\" /></p>\r\n\r\n<p>进程的地址空间对应的描述结构是&ldquo;内存描述符结构&rdquo;,它表示进程的全部地址空间，&mdash;&mdash;包含了和进程地址空间有关的全部信息，其中当然包含进程的内存区域。</p>\r\n\r\n<h3><a name=\"t6\"></a>进程内存的分配与回收</h3>\r\n\r\n<p>创建进程fork()、程序载入execve()、映射文件mmap()、动态内存分配malloc()/brk()等进程相关操作都需要分配内存给进程。不过这时进程申请和获得的还不是实际内存，而是虚拟内存，准确的说是&ldquo;内存区域&rdquo;。进程对内存区域的分配最终都会归结到do_mmap（）函数上来（brk调用被单独以系统调用实现，不用do_mmap()），</p>\r\n\r\n<p>内核使用do_mmap()函数创建一个新的线性地址区间。但是说该函数创建了一个新VMA并不非常准确，因为如果创建的地址区间和一个已经存在的地址区间相邻，并且它们具有相同的访问权限的话，那么两个区间将合并为一个。如果不能合并，那么就确实需要创建一个新的VMA了。但无论哪种情况，&nbsp;do_mmap()函数都会将一个地址区间加入到进程的地址空间中－－无论是扩展已存在的内存区域还是创建一个新的区域。</p>\r\n\r\n<p>同样，释放一个内存区域应使用函数do_ummap()，它会销毁对应的内存区域。</p>\r\n\r\n<h3><a name=\"t7\"></a>如何由虚变实！</h3>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;从上面已经看到进程所能直接操作的地址都为虚拟地址。当进程需要内存时，从内核获得的仅仅是虚拟的内存区域，而不是实际的物理地址，进程并没有获得物理内存（物理页面&mdash;&mdash;页的概念请大家参考硬件基础一章），获得的仅仅是对一个新的线性地址区间的使用权。实际的物理内存只有当进程真的去访问新获取的虚拟地址时，才会由&ldquo;请求页机制&rdquo;产生&ldquo;缺页&rdquo;异常，从而进入分配实际页面的例程。</p>\r\n\r\n<p>该异常是虚拟内存机制赖以存在的基本保证&mdash;&mdash;它会告诉内核去真正为进程分配物理页，并建立对应的页表，这之后虚拟地址才实实在在地映射到了系统的物理内存上。（当然，如果页被换出到磁盘，也会产生缺页异常，不过这时不用再建立页表了）</p>\r\n\r\n<p>这种请求页机制把页面的分配推迟到不能再推迟为止，并不急于把所有的事情都一次做完（这种思想有点像设计模式中的代理模式（proxy））。之所以能这么做是利用了内存访问的&ldquo;局部性原理&rdquo;，请求页带来的好处是节约了空闲内存，提高了系统的吞吐率。要想更清楚地了解请求页机制，可以看看《深入理解linux内核》一书。</p>\r\n\r\n<p>这里我们需要说明在内存区域结构上的nopage操作。当访问的进程虚拟内存并未真正分配页面时，该操作便被调用来分配实际的物理页，并为该页建立页表项。在最后的例子中我们会演示如何使用该方法。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>系统物理内存管理&nbsp;</h2>\r\n\r\n<p>虽然应用程序操作的对象是映射到物理内存之上的虚拟内存，但是处理器直接操作的却是物理内存。所以当应用程序访问一个虚拟地址时，首先必须将虚拟地址转化成物理地址，然后处理器才能解析地址访问请求。地址的转换工作需要通过查询页表才能完成，概括地讲，地址转换需要将虚拟地址分段，使每段虚地址都作为一个索引指向页表，而页表项则指向下一级别的页表或者指向最终的物理页面。</p>\r\n\r\n<p>每个进程都有自己的页表。进程描述符的pgd域指向的就是进程的页全局目录。下面我们借用《linux设备驱动程序》中的一幅图大致看看进程地址空间到物理页之间的转换关系。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"http://www.kerneltravel.net/journal/v/mem.files/image003.jpg\" style=\"height:532px; width:551px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的过程说起来简单，做起来难呀。因为在虚拟地址映射到页之前必须先分配物理页&mdash;&mdash;也就是说必须先从内核中获取空闲页，并建立页表。下面我们介绍一下内核管理物理内存的机制。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><a name=\"t9\"></a>物理内存管理（页管理）</h3>\r\n\r\n<p>Linux内核管理物理内存是通过分页机制实现的，它将整个内存划分成无数个4k（在i386体系结构中）大小的页，从而分配和回收内存的基本单位便是内存页了。利用分页管理有助于灵活分配内存地址，因为分配时不必要求必须有大块的连续内存<a href=\"http://www.kerneltravel.net/journal/v/mem.htm#_ftn3\" target=\"_blank\" title=\"\">[3]</a>，系统可以东一页、西一页的凑出所需要的内存供进程使用。虽然如此，但是实际上系统使用内存时还是倾向于分配连续的内存块，因为分配连续内存时，页表不需要更改，因此能降低TLB的刷新率（频繁刷新会在很大程度上降低访问速度）。</p>\r\n\r\n<p>鉴于上述需求，内核分配物理页面时为了尽量减少不连续情况，采用了&ldquo;伙伴&rdquo;关系来管理空闲页面。伙伴关系分配算法大家应该不陌生&mdash;&mdash;几乎所有操作系统方面的书都会提到,我们不去详细说它了，如果不明白可以参看有关资料。这里只需要大家明白Linux中空闲页面的组织和管理利用了伙伴关系，因此空闲页面分配时也需要遵循伙伴关系，最小单位只能是2的幂倍页面大小。内核中分配空闲页面的基本函数是get_free_page/get_free_pages，它们或是分配单页或是分配指定的页面（2、4、8&hellip;512页）。</p>\r\n\r\n<p>&nbsp;注意：get_free_page是在内核中分配内存，不同于malloc在用户空间中分配，malloc利用堆动态分配，实际上是调用brk()系统调用，该调用的作用是扩大或缩小进程堆空间（它会修改进程的brk域）。如果现有的内存区域不够容纳堆空间，则会以页面大小的倍数为单位，扩张或收缩对应的内存区域，但brk值并非以页面大小为倍数修改，而是按实际请求修改。因此Malloc在用户空间分配内存可以以字节为单位分配,但内核在内部仍然会是以页为单位分配的。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;另外,需要提及的是，物理页在系统中由页结构struct&nbsp;page描述，系统中所有的页面都存储在数组mem_map[]中，可以通过该数组找到系统中的每一页（空闲或非空闲）。而其中的空闲页面则可由上述提到的以伙伴关系组织的空闲页链表（free_area[MAX_ORDER]）来索引。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"http://www.kerneltravel.net/journal/v/mem.files/image005.gif\" style=\"height:83px; width:47px\" /><img alt=\"文本框: 伙伴关系维护\" src=\"http://www.kerneltravel.net/journal/v/mem.files/image007.gif\" style=\"height:114px; width:40px\" /><img alt=\"\" src=\"http://www.kerneltravel.net/journal/v/mem.files/image006.gif\" style=\"height:349px; width:673px\" /></p>\r\n\r\n<h3><a name=\"t10\"></a>内核内存使用</h3>\r\n\r\n<p>Slab</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;所谓尺有所长，寸有所短。以页为最小单位分配内存对于内核管理系统中的物理内存来说的确比较方便，但内核自身最常使用的内存却往往是很小（远远小于一页）的内存块&mdash;&mdash;比如存放文件描述符、进程描述符、虚拟内存区域描述符等行为所需的内存都不足一页。这些用来存放描述符的内存相比页面而言，就好比是面包屑与面包。一个整页中可以聚集多个这些小块内存；而且这些小块内存块也和面包屑一样频繁地生成/销毁。</p>\r\n\r\n<p>&nbsp;&nbsp;为了满足内核对这种小内存块的需要，Linux系统采用了一种被称为slab分配器的技术。Slab分配器的实现相当复杂，但原理不难，其核心思想就是&ldquo;存储池<a href=\"http://www.kerneltravel.net/journal/v/mem.htm#_ftn4\" target=\"_blank\" title=\"\">[4]</a>&rdquo;的运用。内存片段（小块内存）被看作对象，当被使用完后，并不直接释放而是被缓存到&ldquo;存储池&rdquo;里，留做下次使用，这无疑避免了频繁创建与销毁对象所带来的额外负载。</p>\r\n\r\n<p>Slab技术不但避免了内存内部分片（下文将解释）带来的不便（引入Slab分配器的主要目的是为了减少对伙伴系统分配算法的调用次数&mdash;&mdash;频繁分配和回收必然会导致内存碎片&mdash;&mdash;难以找到大块连续的可用内存），而且可以很好地利用硬件缓存提高访问速度。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;Slab并非是脱离伙伴关系而独立存在的一种内存分配方式，slab仍然是建立在页面基础之上，换句话说，Slab将页面（来自于伙伴关系管理的空闲页面链表）撕碎成众多小内存块以供分配，slab中的对象分配和销毁使用kmem_cache_alloc与kmem_cache_free。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Kmalloc</p>\r\n\r\n<p>Slab分配器不仅仅只用来存放内核专用的结构体，它还被用来处理内核对小块内存的请求。当然鉴于Slab分配器的特点，一般来说内核程序中对小于一页的小块内存的请求才通过Slab分配器提供的接口Kmalloc来完成（虽然它可分配32&nbsp;到131072字节的内存）。从内核内存分配的角度来讲，kmalloc可被看成是get_free_page（s）的一个有效补充，内存分配粒度更灵活了。</p>\r\n\r\n<p>有兴趣的话，可以到/proc/slabinfo中找到内核执行现场使用的各种slab信息统计，其中你会看到系统中所有slab的使用信息。从信息中可以看到系统中除了专用结构体使用的slab外，还存在大量为Kmalloc而准备的Slab（其中有些为dma准备的）。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>内核非连续内存分配（Vmalloc）</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>伙伴关系也好、slab技术也好，从内存管理理论角度而言目的基本是一致的，它们都是为了防止&ldquo;分片&rdquo;，不过分片又分为外部分片和内部分片之说，所谓内部分片是说系统为了满足一小段内存区（连续）的需要，不得不分配了一大区域连续内存给它，从而造成了空间浪费；外部分片是指系统虽有足够的内存，但却是分散的碎片，无法满足对大块&ldquo;连续内存&rdquo;的需求。无论何种分片都是系统有效利用内存的障碍。slab分配器使得一个页面内包含的众多小块内存可独立被分配使用，避免了内部分片，节约了空闲内存。伙伴关系把内存块按大小分组管理，一定程度上减轻了外部分片的危害，因为页框分配不在盲目，而是按照大小依次有序进行，不过伙伴关系只是减轻了外部分片，但并未彻底消除。你自己比划一下多次分配页面后，空闲内存的剩余情况吧。</p>\r\n\r\n<p>所以避免外部分片的最终思路还是落到了如何利用不连续的内存块组合成&ldquo;看起来很大的内存块&rdquo;&mdash;&mdash;这里的情况很类似于用户空间分配虚拟内存，内存逻辑上连续，其实映射到并不一定连续的物理内存上。Linux内核借用了这个技术，允许内核程序在内核地址空间中分配虚拟地址，同样也利用页表（内核页表）将虚拟地址映射到分散的内存页上。以此完美地解决了内核内存使用中的外部分片问题。内核提供vmalloc函数分配内核虚拟内存，该函数不同于kmalloc，它可以分配较Kmalloc大得多的内存空间（可远大于128K，但必须是页大小的倍数），但相比Kmalloc来说,Vmalloc需要对内核虚拟地址进行重映射，必须更新内核页表，因此分配效率上要低一些（用空间换时间）</p>\r\n\r\n<p>与用户进程相似,内核也有一个名为init_mm的mm_strcut结构来描述内核地址空间，其中页表项pdg=swapper_pg_dir包含了系统内核空间（3G-4G）的映射关系。因此vmalloc分配内核虚拟地址必须更新内核页表，而kmalloc或get_free_page由于分配的连续内存，所以不需要更新内核页表。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"http://www.kerneltravel.net/journal/v/mem.files/image005.gif\" style=\"height:83px; width:47px\" /><img alt=\"文本框: 伙伴关系维护\" src=\"http://www.kerneltravel.net/journal/v/mem.files/image008.gif\" style=\"height:114px; width:46px\" /><img alt=\"文本框: vmalloc\" src=\"http://www.kerneltravel.net/journal/v/mem.files/image009.gif\" style=\"height:71px; width:47px\" /><img alt=\"文本框: Kmalloc\" src=\"http://www.kerneltravel.net/journal/v/mem.files/image014.gif\" style=\"height:109px; width:47px\" /><img alt=\"\" src=\"http://www.kerneltravel.net/journal/v/mem.files/image015.gif\" style=\"height:590px; width:673px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>vmalloc分配的内核虚拟内存与kmalloc/get_free_page分配的内核虚拟内存位于不同的区间，不会重叠。因为内核虚拟空间被分区管理，各司其职。进程空间地址分布从０到３G(其实是到PAGE_OFFSET,在0x86中它等于0xC0000000)，从3G到vmalloc_start这段地址是物理内存映射区域（该区域中包含了内核镜像、物理页面表mem_map等等）比如我使用的系统内存是64M(可以用free看到)，那么(3G&mdash;&mdash;3G+64M)这片内存就应该映射到物理内存，而vmalloc_start位置应在3G+64M附近（说&quot;附近&quot;因为是在物理内存映射区与vmalloc_start期间还会存在一个8M大小的gap来防止跃界）,vmalloc_end的位置接近4G(说&quot;接近&quot;是因为最后位置系统会保留一片128k大小的区域用于专用页面映射，还有可能会有高端内存映射区，这些都是细节，这里我们不做纠缠)。&nbsp;</p>\r\n\r\n<p>　　　　　　　　　　　　　　　　<img alt=\"\" src=\"http://www.kerneltravel.net/journal/v/mem.files/image011.gif\" style=\"height:208px; width:590px\" /></p>\r\n\r\n<p>　　　　　　　　　　　　　　　　　　　　　　　　　　　　上图是内存分布的模糊轮廓</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　&nbsp;&nbsp;由get_free_page或Kmalloc函数所分配的连续内存都陷于物理映射区域，所以它们返回的内核虚拟地址和实际物理地址仅仅是相差一个偏移量（PAGE_OFFSET），你可以很方便的将其转化为物理内存地址，同时内核也提供了virt_to_phys（）函数将内核虚拟空间中的物理映射区地址转化为物理地址。要知道，物理内存映射区中的地址与内核页表是有序对应的，系统中的每个物理页面都可以找到它对应的内核虚拟地址（在物理内存映射区中的）。</p>\r\n\r\n<p>而vmalloc分配的地址则限于vmalloc_start与vmalloc_end之间。每一块vmalloc分配的内核虚拟内存都对应一个vm_struct结构体（可别和vm_area_struct搞混，那可是进程虚拟内存区域的结构），不同的内核虚拟地址被4k大小的空闲区间隔，以防止越界&mdash;&mdash;见下图）。与进程虚拟地址的特性一样，这些虚拟地址与物理内存没有简单的位移关系，必须通过内核页表才可转换为物理地址或物理页。它们有可能尚未被映射，在发生缺页时才真正分配物理页面。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　　　　　　　　　　　　　　　　　　　<img alt=\"\" src=\"http://www.kerneltravel.net/journal/v/mem.files/image013.jpg\" style=\"height:120px; width:417px\" /></p>\r\n\r\n<p>这里给出一个小程序帮助大家认清上面几种分配函数所对应的区域。</p>\r\n\r\n<p><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img alt=\"复制代码\" src=\"https://common.cnblogs.com/images/copycode.gif\" /></a></p>\r\n\r\n<pre>\r\n#include&lt;linux/module.h&gt;\r\n\r\n#include&lt;linux/slab.h&gt;\r\n\r\n#include&lt;linux/vmalloc.h&gt;\r\n\r\nunsigned char *pagemem;\r\n\r\nunsigned char *kmallocmem;\r\n\r\nunsigned char *vmallocmem;\r\n\r\nint init_module(void)\r\n\r\n{\r\n\r\n pagemem = get_free_page(0);\r\n\r\n printk(&quot;&lt;1&gt;pagemem=%s&quot;,pagemem);\r\n\r\n kmallocmem = kmalloc(100,0);\r\n\r\n printk(&quot;&lt;1&gt;kmallocmem=%s&quot;,kmallocmem);\r\n\r\n vmallocmem = vmalloc(1000000);\r\n\r\n printk(&quot;&lt;1&gt;vmallocmem=%s&quot;,vmallocmem);\r\n\r\n}\r\n\r\nvoid cleanup_module(void)\r\n\r\n{\r\n\r\n free_page(pagemem);\r\n\r\n kfree(kmallocmem);\r\n\r\n vfree(vmallocmem);\r\n\r\n}</pre>\r\n\r\n<p><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img alt=\"复制代码\" src=\"https://common.cnblogs.com/images/copycode.gif\" /></a></p>\r\n\r\n<h2>&nbsp;</h2>\r\n\r\n<h2>实例</h2>\r\n\r\n<p>内存映射(mmap)是Linux操作系统的一个很大特色，它可以将系统内存映射到一个文件（设备）上，以便可以通过访问文件内容来达到访问内存的目的。这样做的最大好处是提高了内存访问速度，并且可以利用文件系统的接口编程（设备在Linux中作为特殊文件处理）访问内存，降低了开发难度。许多设备驱动程序便是利用内存映射功能将用户空间的一段地址关联到设备内存上，无论何时，只要内存在分配的地址范围内进行读写，实际上就是对设备内存的访问。同时对设备文件的访问也等同于对内存区域的访问，也就是说，通过文件操作接口可以访问内存。Linux中的X服务器就是一个利用内存映射达到直接高速访问视频卡内存的例子。</p>\r\n\r\n<p>熟悉文件操作的朋友一定会知道file_operations结构中有mmap方法，在用户执行mmap系统调用时，便会调用该方法来通过文件访问内存&mdash;&mdash;不过在调用文件系统mmap方法前，内核还需要处理分配内存区域（vma_struct）、建立页表等工作。对于具体映射细节不作介绍了，需要强调的是,建立页表可以采用remap_page_range方法一次建立起所有映射区的页表，或利用vma_struct的nopage方法在缺页时现场一页一页的建立页表。第一种方法相比第二种方法简单方便、速度快，&nbsp;但是灵活性不高。一次调用所有页表便定型了，不适用于那些需要现场建立页表的场合&mdash;&mdash;比如映射区需要扩展或下面我们例子中的情况。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>我们这里的实例希望利用内存映射，将系统内核中的一部分虚拟内存映射到用户空间，以供应用程序读取&mdash;&mdash;你可利用它进行内核空间到用户空间的大规模信息传输。因此我们将试图写一个虚拟字符设备驱动程序，通过它将系统内核空间映射到用户空间&mdash;&mdash;将内核虚拟内存映射到用户虚拟地址。从上一节已经看到Linux内核空间中包含两种虚拟地址：一种是物理和逻辑都连续的物理内存映射虚拟地址；另一种是逻辑连续但非物理连续的vmalloc分配的内存虚拟地址。我们的例子程序将演示把vmalloc分配的内核虚拟地址映射到用户地址空间的全过程。</p>\r\n\r\n<p>程序里主要应解决两个问题：</p>\r\n\r\n<p>第一是如何将vmalloc分配的内核虚拟内存正确地转化成物理地址？</p>\r\n\r\n<p>因为内存映射先要获得被映射的物理地址，然后才能将其映射到要求的用户虚拟地址上。我们已经看到内核物理内存映射区域中的地址可以被内核函数virt_to_phys转换成实际的物理内存地址，但对于vmalloc分配的内核虚拟地址无法直接转化成物理地址，所以我们必须对这部分虚拟内存格外&ldquo;照顾&rdquo;&mdash;&mdash;先将其转化成内核物理内存映射区域中的地址，然后在用virt_to_phys变为物理地址。</p>\r\n\r\n<p>转化工作需要进行如下步骤：</p>\r\n\r\n<p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;找到vmalloc虚拟内存对应的页表，并寻找到对应的页表项。</p>\r\n\r\n<p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;获取页表项对应的页面指针</p>\r\n\r\n<p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过页面得到对应的内核物理内存映射区域地址。</p>\r\n\r\n<p>如下图所示：</p>\r\n\r\n<p><img alt=\"\" src=\"http://www.kerneltravel.net/journal/v/mem.files/image016.gif\" style=\"height:279px; width:733px\" /></p>\r\n\r\n<p>第二是当访问vmalloc分配区时，如果发现虚拟内存尚未被映射到物理页，则需要处理&ldquo;缺页异常&rdquo;。因此需要我们实现内存区域中的nopaga操作，以能返回被映射的物理页面指针，在我们的实例中就是返回上面过程中的内核物理内存映射区域中的地址。由于vmalloc分配的虚拟地址与物理地址的对应关系并非分配时就可确定，必须在缺页现场建立页表，因此这里不能使用remap_page_range方法，只能用vma的nopage方法一页一页的建立。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>程序组成</p>\r\n\r\n<p>map_driver.c，它是以模块形式加载的虚拟字符驱动程序。该驱动负责将一定长的内核虚拟地址(vmalloc分配的)映射到设备文件上。其中主要的函数有&mdash;&mdash;vaddress_to_kaddress（）负责对vmalloc分配的地址进行页表解析,以找到对应的内核物理映射地址（kmalloc分配的地址）；map_nopage()负责在进程访问一个当前并不存在的VMA页时，寻找该地址对应的物理页，并返回该页的指针。</p>\r\n\r\n<p>test.c&nbsp;它利用上述驱动模块对应的设备文件在用户空间读取读取内核内存。结果可以看到内核虚拟地址的内容（ok!），被显示在了屏幕上。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>执行步骤</p>\r\n\r\n<p>编译map_driver.c为map_driver.o模块,具体参数见Makefile</p>\r\n\r\n<p>加载模块&nbsp;：insmod&nbsp;map_driver.o</p>\r\n\r\n<p>生成对应的设备文件</p>\r\n\r\n<p>1&nbsp;在/proc/devices下找到map_driver对应的设备命和设备号：grep&nbsp;mapdrv&nbsp;/proc/devices</p>\r\n\r\n<p>2&nbsp;建立设备文件mknod&nbsp;&nbsp;mapfile&nbsp;c 254 0&nbsp;&nbsp;（在我的系统里设备号为254）</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;利用maptest读取mapfile文件，将取自内核的信息打印到屏幕上。</p>',1,'2019-09-03 23:08:00.000000',17,'RexDu',1,NULL),(12,'深度理解python中的元类','article/2019/09/5c190830dc153b8a6ef429710d12fccb.png',1,'类也是对象','<p><strong>在理解元类之前，你需要先掌握Python中的类。Python中类的概念借鉴于Smalltalk，这显得有些奇特。在大多数编程语言中，类就是一组用来描述如何生成一个对象的代码段。在Python中这一点仍然成立：</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; class ObjectCreator(object):\r\n...       pass\r\n... \r\n\r\n&gt;&gt;&gt; my_object = ObjectCreator()\r\n&gt;&gt;&gt; print(my_object)\r\n&lt;__main__.ObjectCreator object at 0x8974f2c&gt;</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　但是，Python中的类还远不止如此。类同样也是一种对象。是的，没错，就是对象。只要你使用关键字class，Python解释器在执行的时候就会创建一个对象。下面的代码段：</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; class ObjectCreator(object):\r\n...       pass\r\n... </pre>\r\n\r\n<p>　　将在内存中创建一个对象，名字就是ObjectCreator。<strong>这个对象（类）自身拥有创建对象（类实例）的能力，而这就是为什么它是一个类的原因。</strong>但是，它的本质仍然是一个对象，于是乎你可以对它做如下的操作：</p>\r\n\r\n<p>　　1) &nbsp;&nbsp;你可以将它赋值给一个变量</p>\r\n\r\n<p>　　2) &nbsp;&nbsp;你可以拷贝它</p>\r\n\r\n<p>　　3) &nbsp;&nbsp;你可以为它增加属性</p>\r\n\r\n<p>　　4) &nbsp;&nbsp;你可以将它作为函数参数进行传递</p>\r\n\r\n<p>　　下面是示例：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; print ObjectCreator     # 你可以打印一个类，因为它其实也是一个对象\r\n&lt;class &#39;__main__.ObjectCreator&#39;&gt;\r\n&gt;&gt;&gt; def echo(o):\r\n&hellip;       print o\r\n&hellip;\r\n&gt;&gt;&gt; echo(ObjectCreator)                 # 你可以将类做为参数传给函数\r\n&lt;class &#39;__main__.ObjectCreator&#39;&gt;\r\n&gt;&gt;&gt; print hasattr(ObjectCreator, &#39;new_attribute&#39;)\r\nFasle\r\n&gt;&gt;&gt; ObjectCreator.new_attribute = &#39;foo&#39; #  你可以为类增加属性\r\n&gt;&gt;&gt; print hasattr(ObjectCreator, &#39;new_attribute&#39;)\r\nTrue\r\n&gt;&gt;&gt; print ObjectCreator.new_attribute\r\nfoo\r\n&gt;&gt;&gt; ObjectCreatorMirror = ObjectCreator # 你可以将类赋值给一个变量\r\n&gt;&gt;&gt; print ObjectCreatorMirror()\r\n&lt;__main__.ObjectCreator object at 0x8997b4c&gt;</pre>\r\n\r\n<p><strong>　　动态地创建类</strong></p>\r\n\r\n<p>因为类也是对象，你可以在运行时动态的创建它们，就像其他任何对象一样。首先，你可以在函数中创建类，使用class关键字即可。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; def choose_class(name):\r\n&hellip;       if name == &#39;foo&#39;:\r\n&hellip;           class Foo(object):\r\n&hellip;               pass\r\n&hellip;           return Foo     # 返回的是类，不是类的实例\r\n&hellip;       else:\r\n&hellip;           class Bar(object):\r\n&hellip;               pass\r\n&hellip;           return Bar\r\n&hellip;\r\n&gt;&gt;&gt; MyClass = choose_class(&#39;foo&#39;)\r\n&gt;&gt;&gt; print MyClass              # 函数返回的是类，不是类的实例\r\n&lt;class &#39;__main__&#39;.Foo&gt;\r\n&gt;&gt;&gt; print MyClass()            # 你可以通过这个类创建类实例，也就是对象\r\n&lt;__main__.Foo object at 0x89c6d4c&gt;</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　但这还不够动态，因为你仍然需要自己编写整个类的代码。由于类也是对象，所以它们必须是通过什么东西来生成的才对。当你使用class关键字时，Python解释器自动创建这个对象。但就和Python中的大多数事情一样，Python仍然提供给你手动处理的方法。还记得内建函数type吗？这个古老但强大的函数能够让你知道一个对象的类型是什么，就像这样：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; print type(1)\r\n&lt;type &#39;int&#39;&gt;\r\n&gt;&gt;&gt; print type(&quot;1&quot;)\r\n&lt;type &#39;str&#39;&gt;\r\n&gt;&gt;&gt; print type(ObjectCreator)\r\n&lt;type &#39;type&#39;&gt;\r\n&gt;&gt;&gt; print type(ObjectCreator())\r\n&lt;class &#39;__main__.ObjectCreator&#39;&gt;</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　这里，type有一种完全不同的能力，它也能动态的创建类。type可以接受一个类的描述作为参数，然后返回一个类。（我知道，根据传入参数的不同，同一个函数拥有两种完全不同的用法是一件很傻的事情，但这在Python中是为了保持向后兼容性）</p>\r\n\r\n<p>type可以像这样工作：</p>\r\n\r\n<pre>\r\ntype(类名, 父类的元组（针对继承的情况，可以为空），包含属性的字典（名称和值）)</pre>\r\n\r\n<p>　　比如下面的代码：</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; class MyShinyClass(object):\r\n&hellip;       pass</pre>\r\n\r\n<p>　　可以手动像这样创建：</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; MyShinyClass = type(&#39;MyShinyClass&#39;, (), {})  # 返回一个类对象\r\n&gt;&gt;&gt; print MyShinyClass\r\n&lt;class &#39;__main__.MyShinyClass&#39;&gt;\r\n&gt;&gt;&gt; print MyShinyClass()  #  创建一个该类的实例\r\n&lt;__main__.MyShinyClass object at 0x8997cec&gt;　</pre>\r\n\r\n<p>　　你会发现我们使用&ldquo;MyShinyClass&rdquo;作为类名，并且也可以把它当做一个变量来作为类的引用。类和变量是不同的，这里没有任何理由把事情弄的复杂。</p>\r\n\r\n<p>　　type 接受一个字典来为类定义属性，因此:</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; class Foo(object):\r\n&hellip;       bar = True</pre>\r\n\r\n<p>　　可以翻译为：</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; Foo = type(&#39;Foo&#39;, (), {&#39;bar&#39;:True})</pre>\r\n\r\n<p>　　并且可以将Foo当成一个普通的类一样使用：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; print Foo\r\n&lt;class &#39;__main__.Foo&#39;&gt;\r\n&gt;&gt;&gt; print Foo.bar\r\nTrue\r\n&gt;&gt;&gt; f = Foo()\r\n&gt;&gt;&gt; print f\r\n&lt;__main__.Foo object at 0x8a9b84c&gt;\r\n&gt;&gt;&gt; print f.bar\r\nTrue</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　当然，你可以向这个类继承，所以，如下的代码：</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; class FooChild(Foo):\r\n&hellip;       pass</pre>\r\n\r\n<p>　　就可以写成：</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; FooChild = type(&#39;FooChild&#39;, (Foo,),{})\r\n&gt;&gt;&gt; print FooChild\r\n&lt;class &#39;__main__.FooChild&#39;&gt;\r\n&gt;&gt;&gt; print FooChild.bar   # bar属性是由Foo继承而来\r\nTrue</pre>\r\n\r\n<p>　　最终你会希望为你的类增加方法。只需要定义一个有着恰当签名的函数并将其作为属性赋值就可以了。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; def echo_bar(self):\r\n&hellip;       print self.bar\r\n&hellip;\r\n&gt;&gt;&gt; FooChild = type(&#39;FooChild&#39;, (Foo,), {&#39;echo_bar&#39;: echo_bar})\r\n&gt;&gt;&gt; hasattr(Foo, &#39;echo_bar&#39;)\r\nFalse\r\n&gt;&gt;&gt; hasattr(FooChild, &#39;echo_bar&#39;)\r\nTrue\r\n&gt;&gt;&gt; my_foo = FooChild()\r\n&gt;&gt;&gt; my_foo.echo_bar()\r\nTrue</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　你可以看到，在Python中，类也是对象，你可以动态的创建类。这就是当你使用关键字class时Python在幕后做的事情，而这就是通过元类来实现的。</p>\r\n\r\n<p><strong>　　到底什么是元类（终于到主题了）</strong></p>\r\n\r\n<p>元类就是用来创建类的&ldquo;东西&rdquo;。你创建类就是为了创建类的实例对象，不是吗？但是我们已经学习到了Python中的类也是对象。好吧，元类就是用来创建这些类（对象）的，元类就是类的类，你可以这样理解 为：</p>\r\n\r\n<pre>\r\nMyClass = MetaClass()\r\nMyObject = MyClass()</pre>\r\n\r\n<p>　　你已经看到了type可以让你像这样做：</p>\r\n\r\n<pre>\r\nMyClass = type(&#39;MyClass&#39;, (), {})</pre>\r\n\r\n<p>　　这是因为函数type实际上是一个元类。type就是Python在背后用来创建所有类的元类。现在你想知道那为什么type会全部采用小写形式而不是Type呢？好吧，我猜这是为了和str保持一致性，str是用来创建字符串对象的类，而int是用来创建整数对象的类。type就是创建类对象的类。你可以通过检查__class__属性来看到这一点。Python中所有的东西，注意，我是指所有的东西&mdash;&mdash;都是对象。这包括整数、字符串、函数以及类。它们全部都是对象，而且它们都是从一个类创建而来。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; age = 35\r\n&gt;&gt;&gt; age.__class__\r\n&lt;type &#39;int&#39;&gt;\r\n&gt;&gt;&gt; name = &#39;bob&#39;\r\n&gt;&gt;&gt; name.__class__\r\n&lt;type &#39;str&#39;&gt;\r\n&gt;&gt;&gt; def foo(): pass\r\n&gt;&gt;&gt;foo.__class__\r\n&lt;type &#39;function&#39;&gt;\r\n&gt;&gt;&gt; class Bar(object): pass\r\n&gt;&gt;&gt; b = Bar()\r\n&gt;&gt;&gt; b.__class__\r\n&lt;class &#39;__main__.Bar&#39;&gt;</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　现在，对于任何一个__class__的__class__属性又是什么呢？</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt; a.__class__.__class__\r\n&lt;type &#39;type&#39;&gt;\r\n&gt;&gt;&gt; age.__class__.__class__\r\n&lt;type &#39;type&#39;&gt;\r\n&gt;&gt;&gt; foo.__class__.__class__\r\n&lt;type &#39;type&#39;&gt;\r\n&gt;&gt;&gt; b.__class__.__class__\r\n&lt;type &#39;type&#39;&gt;</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　因此，元类就是创建类这种对象的东西。如果你喜欢的话，可以把元类称为&ldquo;类工厂&rdquo;（不要和工厂类搞混了:D） type就是Python的内建元类，当然了，你也可以创建自己的元类。</p>\r\n\r\n<p><strong>　　__metaclass__</strong><strong>属性</strong></p>\r\n\r\n<p>你可以在写一个类的时候为其添加__metaclass__属性。</p>\r\n\r\n<pre>\r\nclass Foo(object):\r\n    __metaclass__ = something&hellip;\r\n[&hellip;]</pre>\r\n\r\n<p>　　如果你这么做了，Python就会用元类来创建类Foo。小心点，这里面有些技巧。你首先写下class Foo(object)，但是类对象Foo还没有在内存中创建。Python会在类的定义中寻找__metaclass__属性，如果找到了，Python就会用它来创建类Foo，如果没有找到，就会用内建的type来创建这个类。把下面这段话反复读几次。当你写如下代码时 :</p>\r\n\r\n<pre>\r\nclass Foo(Bar):\r\n    pass</pre>\r\n\r\n<p>　　</p>\r\n\r\n<p>　　Python做了如下的操作：</p>\r\n\r\n<p>　　Foo中有__metaclass__这个属性吗？如果是，Python会在内存中通过__metaclass__创建一个名字为Foo的类对象（我说的是类对象，请紧跟我的思路）。如果Python没有找到__metaclass__，它会继续在Bar（父类）中寻找__metaclass__属性，并尝试做和前面同样的操作。如果Python在任何父类中都找不到__metaclass__，它就会在模块层次中去寻找__metaclass__，并尝试做同样的操作。如果还是找不到__metaclass__,Python就会用内置的type来创建这个类对象。</p>\r\n\r\n<p>现在的问题就是，你可以在__metaclass__中放置些什么代码呢？答案就是：可以创建一个类的东西。那么什么可以用来创建一个类呢？type，或者任何使用到type或者子类化type的东东都可以。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>自定义元类</strong></p>\r\n\r\n<p>　　元类的主要目的就是为了当创建类时能够自动地改变类。通常，你会为API做这样的事情，你希望可以创建符合当前上下文的类。假想一个很傻的例子，你决定在你的模块里所有的类的属性都应该是大写形式。有好几种方法可以办到，但其中一种就是通过在模块级别设定__metaclass__。采用这种方法，这个模块中的所有类都会通过这个元类来创建，我们只需要告诉元类把所有的属性都改成大写形式就万事大吉了。</p>\r\n\r\n<p>　　幸运的是，__metaclass__实际上可以被任意调用，它并不需要是一个正式的类（我知道，某些名字里带有&lsquo;class&rsquo;的东西并不需要是一个class，画画图理解下，这很有帮助）。所以，我们这里就先以一个简单的函数作为例子开始。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n# 元类会自动将你通常传给&lsquo;type&rsquo;的参数作为自己的参数传入\r\ndef upper_attr(future_class_name, future_class_parents, future_class_attr):\r\n    &#39;&#39;&#39;返回一个类对象，将属性都转为大写形式&#39;&#39;&#39;\r\n    #  选择所有不以&#39;__&#39;开头的属性\r\n    attrs = ((name, value) for name, value in future_class_attr.items() if not name.startswith(&#39;__&#39;))\r\n     # 将它们转为大写形式\r\n    uppercase_attr = dict((name.upper(), value) for name, value in attrs)\r\n \r\n    # 通过&#39;type&#39;来做类对象的创建\r\n    return type(future_class_name, future_class_parents, uppercase_attr)\r\n \r\n__metaclass__ = upper_attr  #  这会作用到这个模块中的所有类\r\n \r\nclass Foo(object):\r\n    # 我们也可以只在这里定义__metaclass__，这样就只会作用于这个类中\r\n    bar = &#39;bip&#39;\r\n\r\nprint hasattr(Foo, &#39;bar&#39;)\r\n# 输出: False\r\nprint hasattr(Foo, &#39;BAR&#39;)\r\n# 输出:True\r\n \r\nf = Foo()\r\nprint f.BAR\r\n# 输出:&#39;bip&#39;</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" id=\"code_img_closed_88f41fde-c611-406b-a23f-ddfcd72482d6\" src=\"https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" />&nbsp;Python3.x实现上述方式</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　现在让我们再做一次，这一次用一个真正的class来当做元类。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n# 请记住，&#39;type&#39;实际上是一个类，就像&#39;str&#39;和&#39;int&#39;一样\r\n# 所以，你可以从type继承\r\nclass UpperAttrMetaClass(type):\r\n    # __new__ 是在__init__之前被调用的特殊方法\r\n    # __new__是用来创建对象并返回之的方法\r\n    # 而__init__只是用来将传入的参数初始化给对象\r\n    # 你很少用到__new__，除非你希望能够控制对象的创建\r\n    # 这里，创建的对象是类，我们希望能够自定义它，所以我们这里改写__new__\r\n    # 如果你希望的话，你也可以在__init__中做些事情\r\n    # 还有一些高级的用法会涉及到改写__call__特殊方法，但是我们这里不用\r\n    def __new__(upperattr_metaclass, future_class_name, future_class_parents, future_class_attr):\r\n        attrs = ((name, value) for name, value in future_class_attr.items() if not name.startswith(&#39;__&#39;))\r\n        uppercase_attr = dict((name.upper(), value) for name, value in attrs)\r\n        return type(future_class_name, future_class_parents, uppercase_attr)</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　但是，这种方式其实不是OOP。我们直接调用了type，而且我们没有改写父类的__new__方法。现在让我们这样去处理:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\nclass UpperAttrMetaclass(type):\r\n    def __new__(upperattr_metaclass, future_class_name, future_class_parents, future_class_attr):\r\n        attrs = ((name, value) for name, value in future_class_attr.items() if not name.startswith(&#39;__&#39;))\r\n        uppercase_attr = dict((name.upper(), value) for name, value in attrs)\r\n \r\n        # 复用type.__new__方法\r\n        # 这就是基本的OOP编程，没什么魔法\r\n        return type.__new__(upperattr_metaclass, future_class_name, future_class_parents, uppercase_attr)</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　你可能已经注意到了有个额外的参数upperattr_metaclass，这并没有什么特别的。类方法的第一个参数总是表示当前的实例，就像在普通的类方法中的self参数一样。当然了，为了清晰起见，这里的名字我起的比较长。但是就像self一样，所有的参数都有它们的传统名称。因此，在真实的产品代码中一个元类应该是像这样的：</p>\r\n\r\n<pre>\r\nclass UpperAttrMetaclass(type):\r\n    def __new__(cls, name, bases, dct):\r\n        attrs = ((name, value) for name, value in dct.items() if not name.startswith(&#39;__&#39;)\r\n        uppercase_attr  = dict((name.upper(), value) for name, value in attrs)\r\n        return type.__new__(cls, name, bases, uppercase_attr)</pre>\r\n\r\n<p>　　如果使用super方法的话，我们还可以使它变得更清晰一些，这会缓解继承（是的，你可以拥有元类，从元类继承，从type继承）</p>\r\n\r\n<pre>\r\nclass UpperAttrMetaclass(type):\r\n    def __new__(cls, name, bases, dct):\r\n        attrs = ((name, value) for name, value in dct.items() if not name.startswith(&#39;__&#39;))\r\n        uppercase_attr = dict((name.upper(), value) for name, value in attrs)\r\n        return super(UpperAttrMetaclass, cls).__new__(cls, name, bases, uppercase_attr)</pre>\r\n\r\n<p>　　就是这样，除此之外，关于元类真的没有别的可说的了。使用到元类的代码比较复杂，这背后的原因倒并不是因为元类本身，而是因为你通常会使用元类去做一些晦涩的事情，依赖于自省，控制继承等等。确实，用元类来搞些&ldquo;黑暗魔法&rdquo;是特别有用的，因而会搞出些复杂的东西来。但就元类本身而言，它们其实是很简单的：</p>\r\n\r\n<p>　　1) &nbsp;&nbsp;拦截类的创建</p>\r\n\r\n<p>　　2) &nbsp; 修改类</p>\r\n\r\n<p>　　3) &nbsp; 返回修改之后的类</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>为什么要用metaclass类而不是函数?</strong></p>\r\n\r\n<p>　　由于__metaclass__可以接受任何可调用的对象，那为何还要使用类呢，因为很显然使用类会更加复杂啊？这里有好几个原因：</p>\r\n\r\n<p>　　1） &nbsp;意图会更加清晰。当你读到UpperAttrMetaclass(type)时，你知道接下来要发生什么。</p>\r\n\r\n<p>　　2） 你可以使用OOP编程。元类可以从元类中继承而来，改写父类的方法。元类甚至还可以使用元类。</p>\r\n\r\n<p>　　3） &nbsp;你可以把代码组织的更好。当你使用元类的时候肯定不会是像我上面举的这种简单场景，通常都是针对比较复杂的问题。将多个方法归总到一个类中会很有帮助，也会使得代码更容易阅读。</p>\r\n\r\n<p>　　4） 你可以使用__new__, __init__以及__call__这样的特殊方法。它们能帮你处理不同的任务。就算通常你可以把所有的东西都在__new__里处理掉，有些人还是觉得用__init__更舒服些。</p>\r\n\r\n<p>　　5） 哇哦，这东西的名字是metaclass，肯定非善类，我要小心！</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>究竟为什么要使用元类？</strong></p>\r\n\r\n<p>　　现在回到我们的大主题上来，究竟是为什么你会去使用这样一种容易出错且晦涩的特性？好吧，一般来说，你根本就用不上它：</p>\r\n\r\n<p><em>　　&ldquo;元类就是深度的魔法，99%的用户应该根本不必为此操心。如果你想搞清楚究竟是否需要用到元类，那么你就不需要它。那些实际用到元类的人都非常清楚地知道他们需要做什么，而且根本不需要解释为什么要用元类。&rdquo;&nbsp; &mdash;&mdash; Python界的领袖 Tim Peters</em></p>\r\n\r\n<p>　　元类的主要用途是创建API。一个典型的例子是Django ORM。它允许你像这样定义：</p>\r\n\r\n<pre>\r\nclass Person(models.Model):\r\n    name = models.CharField(max_length=30)\r\n    age = models.IntegerField()</pre>\r\n\r\n<p>　　但是如果你像这样做的话：</p>\r\n\r\n<pre>\r\nguy  = Person(name=&#39;bob&#39;, age=&#39;35&#39;)\r\nprint guy.age</pre>\r\n\r\n<p>　　这并不会返回一个IntegerField对象，而是会返回一个int，甚至可以直接从数据库中取出数据。这是有可能的，因为models.Model定义了__metaclass__， 并且使用了一些魔法能够将你刚刚定义的简单的Person类转变成对数据库的一个复杂hook。Django框架将这些看起来很复杂的东西通过暴露出一个简单的使用元类的API将其化简，通过这个API重新创建代码，在背后完成真正的工作。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>结语</strong></p>\r\n\r\n<p>　　首先，你知道了类其实是能够创建出类实例的对象。好吧，事实上，类本身也是实例，当然，它们是元类的实例。</p>\r\n\r\n<pre>\r\n&gt;&gt;&gt;class Foo(object): pass\r\n&gt;&gt;&gt; id(Foo)\r\n142630324</pre>\r\n\r\n<p>　　Python中的一切都是对象，它们要么是类的实例，要么是元类的实例，除了type。type实际上是它自己的元类，在纯Python环境中这可不是你能够做到的，这是通过在实现层面耍一些小手段做到的。其次，元类是很复杂的。对于非常简单的类，你可能不希望通过使用元类来对类做修改。你可以通过其他两种技术来修改类：</p>\r\n\r\n<p>　　1）&nbsp;<a href=\"http://en.wikipedia.org/wiki/Monkey_patch\">Monkey patching</a></p>\r\n\r\n<p>　　2) &nbsp; class decorators</p>\r\n\r\n<p>　　当你需要动态修改类时，99%的时间里你最好使用上面这两种技术。当然了，其实在99%的时间里你根本就不需要动态修改类 :D</p>',1,'2019-09-03 23:29:00.000000',6,'RexDu',1,NULL),(13,'linux防火墙查看状态firewall、iptable','article/2019/09/a0c343111f32e8ad6d4ea18da347fe6c.png',1,'linux防火墙查看状态firewall、iptable','<p>一、iptables防火墙<br />\r\n1、基本操作</p>\r\n\r\n<p># 查看防火墙状态</p>\r\n\r\n<p>service iptables status&nbsp;&nbsp;</p>\r\n\r\n<p># 停止防火墙</p>\r\n\r\n<p>service iptables stop&nbsp;&nbsp;</p>\r\n\r\n<p># 启动防火墙</p>\r\n\r\n<p>service iptables start&nbsp;&nbsp;</p>\r\n\r\n<p># 重启防火墙</p>\r\n\r\n<p>service iptables restart&nbsp;&nbsp;</p>\r\n\r\n<p># 永久关闭防火墙</p>\r\n\r\n<p>chkconfig iptables off&nbsp;&nbsp;</p>\r\n\r\n<p># 永久关闭后重启</p>\r\n\r\n<p>chkconfig iptables&nbsp;on　　</p>\r\n\r\n<p>2、开启80端口</p>\r\n\r\n<p>vim /etc/sysconfig/iptables<br />\r\n# 加入如下代码<br />\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT<br />\r\n保存退出后重启防火墙</p>\r\n\r\n<p>service iptables restart<br />\r\n二、firewall防火墙<br />\r\n1、查看firewall服务状态</p>\r\n\r\n<p>systemctl status firewalld</p>\r\n\r\n<p>出现Active: active (running)切高亮显示则表示是启动状态。</p>\r\n\r\n<p>出现&nbsp;Active: inactive (dead)灰色表示停止，看单词也行。<br />\r\n2、查看firewall的状态</p>\r\n\r\n<p>firewall-cmd --state<br />\r\n3、开启、重启、关闭、firewalld.service服务</p>\r\n\r\n<p># 开启<br />\r\nservice firewalld start<br />\r\n# 重启<br />\r\nservice firewalld restart<br />\r\n# 关闭<br />\r\nservice firewalld stop<br />\r\n4、查看防火墙规则</p>\r\n\r\n<p>firewall-cmd --list-all&nbsp;<br />\r\n5、查询、开放、关闭端口</p>\r\n\r\n<p># 查询端口是否开放<br />\r\nfirewall-cmd --query-port=8080/tcp<br />\r\n# 开放80端口<br />\r\nfirewall-cmd --permanent --add-port=80/tcp<br />\r\n# 移除端口<br />\r\nfirewall-cmd --permanent --remove-port=8080/tcp<br />\r\n#重启防火墙(修改配置后要重启防火墙)<br />\r\nfirewall-cmd --reload<br />\r\n<br />\r\n# 参数解释<br />\r\n1、firwall-cmd：是Linux提供的操作firewall的一个工具；<br />\r\n2、--permanent：表示设置为持久；<br />\r\n3、--add-port：标识添加的端口；<br />\r\n<br />\r\n原文：https://blog.csdn.net/bbwangj/article/details/74502967</p>',1,'2019-09-03 23:31:00.000000',7,'RexDu',1,NULL),(14,'docopt：构造一个漂亮的命令行工具','',0,'docopt是一个命令行接口描述语言，用于定义命令行程序的各项参数，并且生成一个处理分析参数的分析器。','<p>最近拜读了覃超在知乎专栏的文章<a href=\"https://zhuanlan.zhihu.com/p/22332669\" rel=\"external\" target=\"_blank\">《谁说程序员不是潜力股？！让这位世界前五名的天才程序员来颠覆你的三观！》</a>，受到了深深的一击。于是跪着爬进了Kenneth的<a href=\"https://github.com/kennethreitz\" rel=\"external\" target=\"_blank\">Github</a>,汲取点营养。</p>\r\n\r\n<p>我先找了一个单份文件的小工具<a href=\"https://github.com/kennethreitz/pip-pop\" rel=\"external\" target=\"_blank\">pip-pop</a>看起（潜台词：没敢一开始就从requests干起，怕齁着了==）。这是一个用于分析requirements.txt文件的程序，挺简单的。其中引起我注意的是它用到的docopt。</p>\r\n\r\n<p><a href=\"https://github.com/docopt/docopt\" rel=\"external\" target=\"_blank\">docopt</a>是一个命令行接口描述语言，用于定义命令行程序的各项参数，并且生成一个处理分析参数的分析器。</p>\r\n\r\n<h2>说明</h2>\r\n\r\n<p>先看一份官方文档中的例子：</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n19\r\n20\r\n21\r\n22\r\n23\r\n24\r\n</pre>\r\n			</td>\r\n			<td>\r\n			<pre>\r\n&quot;&quot;&quot;Naval Fate.\r\n\r\nUsage:\r\n  naval_fate.py ship new &lt;name&gt;...\r\n  naval_fate.py ship &lt;name&gt; move &lt;x&gt; &lt;y&gt; [--speed=&lt;kn&gt;]\r\n  naval_fate.py ship shoot &lt;x&gt; &lt;y&gt;\r\n  naval_fate.py mine (set|remove) &lt;x&gt; &lt;y&gt; [--moored | --drifting]\r\n  naval_fate.py (-h | --help)\r\n  naval_fate.py --version\r\n\r\nOptions:\r\n  -h --help     Show this screen.\r\n  --version     Show version.\r\n  --speed=&lt;kn&gt;  Speed in knots [default: 10].\r\n  --moored      Moored (anchored) mine.\r\n  --drifting    Drifting mine.\r\n\r\n&quot;&quot;&quot;\r\nfrom docopt import docopt\r\n\r\n\r\nif __name__ == &#39;__main__&#39;:\r\n    arguments = docopt(__doc__, version=&#39;Naval Fate 2.0&#39;)\r\n    print(arguments)\r\n</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>首先，在Usage下定义了这个命令行工具（naval_fate.py)的6个使用模式，真正调用时一定要匹配到这6个的其中之一。</p>\r\n\r\n<p>在每个模式中，&lt;&gt;包围的是位置参数，[]包围的是可选参数，（）包围的是必选参数，|用于分割两个互斥的参数。省略号&hellip;用于表示格式为数组的参数。</p>\r\n\r\n<p>其次，在Options下面是对参数的描述。参数与其描述之间用两个以上的空格分隔，如果参数有默认值的话，则在描述字符串之后，用[default: val]注明。</p>\r\n\r\n<p>最后，使用docopt(__doc__, version=&rsquo;Naval Fate 2.0&rsquo;)生成传入参数组成的dict，dict的key就是上面描述中的参数字符串。</p>\r\n\r\n<p>那么，arguments可能的形式如下：</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n</pre>\r\n			</td>\r\n			<td>\r\n			<pre>\r\n{&#39;--drifting&#39;: False,\r\n &#39;--help&#39;: False,\r\n &#39;--moored&#39;: False,\r\n &#39;--speed&#39;: &#39;10&#39;,\r\n &#39;--version&#39;: False,\r\n &#39;&lt;name&gt;&#39;: [&#39;abc&#39;],\r\n &#39;&lt;x&gt;&#39;: &#39;0&#39;,\r\n &#39;&lt;y&gt;&#39;: &#39;0&#39;,\r\n &#39;mine&#39;: False,\r\n &#39;move&#39;: True,\r\n &#39;new&#39;: False,\r\n &#39;remove&#39;: False,\r\n &#39;set&#39;: False,\r\n &#39;ship&#39;: True,\r\n &#39;shoot&#39;: False}\r\n</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>实践</h2>\r\n\r\n<p>我们用一个小程序实践一下。</p>\r\n\r\n<p>在我的工作中，有这样一个目录：</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n</pre>\r\n			</td>\r\n			<td>\r\n			<pre>\r\n- code\r\n  - server\r\n  - client\r\n    - data\r\n  - common\r\n    - cdata\r\n  - common_server\r\n    -data\r\n</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\n其中server、client、common、common_server下面都有python代码文件，而data、cdata目录下都是python数据文件。python数据文件由csv文件转化而来，数据量庞大。当我在code目录下需要grep某一个关键字时，往往会搜索所有的数据文件，耗时严重，其实我只想要在程序文件中搜索。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>一般的，我们可以这样组合find命令和grep命令，实现这一功能：</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n1\r\n</pre>\r\n			</td>\r\n			<td>\r\n			<pre>\r\nfind . \\( -wholename ./client/data -prune \\) -o \\( -wholename ./common/cdata -prune \\) -o \\( -wholename ./common_server/data -prune \\) -o -name &quot;*.py&quot; -print | xargs grep -n --color sth_you_want_to_grep\r\n</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>我们也可以写一个python程序，结合正则表达式re模块，实现这一功能。</p>\r\n\r\n<p>分析我们这个小程序：</p>\r\n\r\n<ol>\r\n	<li>有两个参数必不可少，即搜索的根目录，以及所搜索的字符串（或者正则表达式）</li>\r\n	<li>一个可选参数，用于表明搜索过程中，强制跳过的目录序列</li>\r\n	<li>一个可选参数，用于表示是否忽略大小写</li>\r\n</ol>\r\n\r\n<p>那么，设计出来的docopt描述字符串如下：</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n</pre>\r\n			</td>\r\n			<td>\r\n			<pre>\r\n&quot;&quot;&quot;Usage:\r\n    py-grep &lt;searchpath&gt; &lt;pattern&gt; [-i] [--ignorepath &lt;igpaths&gt;...]\r\n    py-grep (-h | --help)\r\nOptions:\r\n    -h --help        Show this screen\r\n    -i               Ignore case\r\n    --ignore_paths   Ignored directories\r\n&quot;&quot;&quot;\r\n</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>接下来，根据此字符串可以解析传递给py-grep程序的各项参数：</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n</pre>\r\n			</td>\r\n			<td>\r\n			<pre>\r\ndef main():\r\n    args = docopt(__doc__, version=&quot;py-grep&quot;)\r\n\r\n    if args[&#39;-i&#39;]:\r\n        pattern = re.compile(args[&#39;&lt;pattern&gt;&#39;], re.IGNORECASE)\r\n    else:\r\n        pattern = re.compile(args[&#39;&lt;pattern&gt;&#39;])\r\n    \r\n    kwargs = {\r\n        &#39;search_path&#39;: args[&#39;&lt;searchpath&gt;&#39;],\r\n        &#39;pattern&#39;: pattern,\r\n        &#39;ignore_paths&#39;: args[&#39;&lt;igpaths&gt;&#39;],\r\n    }\r\n    py_grep(**kwargs)\r\n    return\r\n</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>在py_grep函数中，我们将利用os.walk遍历目录下的文件，跳过ignore_paths,使用pattern对文件的每一行进行搜索。</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n19\r\n</pre>\r\n			</td>\r\n			<td>\r\n			<pre>\r\ndef py_grep(search_path, pattern, ignore_paths=None):\r\n    ignore_paths = ignore_paths if ignore_paths else []\r\n    ignore_paths = [os.path.abspath(p) for p in ignore_paths]\r\n    for parent, dirnames, filenames in os.walk(search_path):\r\n        abs_parent = os.path.abspath(parent)\r\n        is_ignore = False\r\n        for ig_path in ignore_paths:\r\n            if abs_parent.startswith(ig_path):\r\n                is_ignore = True\r\n                break\r\n        if is_ignore:\r\n            continue\r\n        for fn in filenames:\r\n            fn = os.path.join(parent, fn)\r\n            with open(fn, &#39;r&#39;) as fobj:\r\n                for n, line in enumerate(fobj):\r\n                    if pattern.search(line):\r\n                        print fn, n+1, &#39;:&#39;, line.strip()\r\n    return\r\n</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>在如下目录结构中尝试一下：</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n</pre>\r\n			</td>\r\n			<td>\r\n			<pre>\r\n|-- example.sh\r\n|-- py-grep\r\n|-- test_file1\r\n|-- test_path1\r\n|   |-- inner_path\r\n|   |   `-- test_file4\r\n|   `-- test_file2\r\n`-- test_path2\r\n    `-- test_file3\r\n</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>输出如下：</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n</pre>\r\n			</td>\r\n			<td>\r\n			<pre>\r\n./py-grep . &quot;(\\w)+@(\\w)+((\\.\\w+)+)&quot; --ignorepath ./test_path1\r\n./test_file1 2 : My email is yubo1911@163.com.\r\n./test_file1 4 : I have another email: usher@gmail.com\r\n./test_path2/test_file3 2 : My email is yubo1911@163.com.\r\n./test_path2/test_file3 4 : I have another email: usher@gmail.com\r\n====================\r\n./py-grep . &quot;(\\w)+@(\\w)+((\\.\\w+)+)&quot; --ignorepath test_path1\r\n./test_file1 2 : My email is yubo1911@163.com.\r\n./test_file1 4 : I have another email: usher@gmail.com\r\n./test_path2/test_file3 2 : My email is yubo1911@163.com.\r\n./test_path2/test_file3 4 : I have another email: usher@gmail.com\r\n</pre>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>输出结果符合预期。</p>\r\n\r\n<h2>总结</h2>\r\n\r\n<p>docopt的简介就到这里了。更详细的信息，请参阅其<a href=\"http://docopt.org/\" rel=\"external\" target=\"_blank\">官方文档</a>。</p>\r\n\r\n<p>PS. 这里写的py-grep一定是有性能问题的，只用于熟悉docopt的用法，请不要将其用于日常工作中。</p>\r\n\r\n<p>完整代码详见<a href=\"https://github.com/yubo1911/saber/tree/master/pylibtravel/docopt\" rel=\"external\" target=\"_blank\">docopt</a></p>\r\n\r\n<p>转载请注明出处： <a href=\"http://blog.guoyb.com/2016/09/26/docopt\">http://blog.guoyb.com/2016/09/26/docopt/</a></p>',1,'2018-11-15 08:26:00.000000',1,'RexDu',0,NULL),(15,'Pycharm新建文件模板配置','',0,'pycharm模板设置','<p>本文链接：https://blog.csdn.net/mouday/article/details/80184511<br />\r\n1.打开pycharm，选择File-Settings&nbsp;<br />\r\n2.选择Editor&ndash;Color&amp;Style&ndash;File and Templates&ndash;Python-Script</p>\r\n\r\n<p>可用的预定义文件模板变量为：</p>\r\n\r\n<p>${PROJECT_NAME} - 当前项目的名称。</p>\r\n\r\n<p>${NAME} - 在文件创建过程中在&ldquo;新建文件&rdquo;对话框中指定的新文件的名称。</p>\r\n\r\n<p>${USER} - 当前用户的登录名。</p>\r\n\r\n<p>${DATE} - 当前的系统日期。</p>\r\n\r\n<p>${TIME} - 当前系统时间。</p>\r\n\r\n<p>${YEAR} - 今年。</p>\r\n\r\n<p>${MONTH} - 当月。</p>\r\n\r\n<p>${DAY} - 当月的当天。</p>\r\n\r\n<p>${HOUR} - 目前的小时。</p>\r\n\r\n<p>${MINUTE} - 当前分钟。</p>\r\n\r\n<p>${PRODUCT_NAME} - 将在其中创建文件的IDE的名称。</p>\r\n\r\n<p>${MONTH_NAME_SHORT} - 月份名称的前3个字母。 示例：1月，2月等</p>\r\n\r\n<p>${MONTH_NAME_FULL} - 一个月的全名。 示例：1月，2月等<br />\r\n<br />\r\n实例</p>\r\n\r\n<p># -*- coding: utf-8 -*-</p>\r\n\r\n<p># @File &nbsp; &nbsp;: ${NAME}.py<br />\r\n# @Date &nbsp; &nbsp;: ${YEAR}-${MONTH}-${DAY}<br />\r\n# @Author &nbsp;: ${USER}<br />\r\n<br />\r\n显示效果</p>\r\n\r\n<p># -*- coding: utf-8 -*-</p>\r\n\r\n<p># @File &nbsp; &nbsp;: name.py<br />\r\n# @Date &nbsp; &nbsp;: 2018-05-03<br />\r\n# @Author &nbsp;: Peng Shiyu<br />\r\n<br />\r\n参考：&nbsp;<br />\r\nPycharm新建模板默认添加作者时间等信息<br />\r\n<br />\r\n原文链接：https://blog.csdn.net/mouday/article/details/80184511</p>',1,'2018-07-11 08:30:00.000000',1,'RexDu',1,'http://gss0.baidu.com/-fo3dSag_xI4khGko9WTAnF6hhy/lvpics/w=600/sign=1350023d79899e51788e391472a5d990/b21bb051f819861810d03e4448ed2e738ad4e65f.jpg'),(16,'python读取大文件','',0,'python对文件的读取','<p>最近在学习python的过程中接触到了python对文件的读取。python读取文件一般情况是利用open()函数以及read()函数来完成：</p>\r\n\r\n<pre>\r\nf = open(filename,&#39;r&#39;)\r\nf.read()</pre>\r\n\r\n<p>这种方法读取小文件，即读取远远大小小于内存的文件显然没有什么问题。但是如果是将一个10G大小的日志文件读取，即文件大于内存的大小，这么处理就有问题了，会造成MemoryError ... 也就是发生内存溢出。</p>\r\n\r\n<p>发生这种错误的原因在于，read()方法执行操作是一次性的都读入内存中，显然文件大于内存就会报错。</p>\r\n\r\n<p>解决方法：</p>\r\n\r\n<p>这里发现跟read()类似的还有其他的方法：read(参数)、readline()、readlines()</p>\r\n\r\n<p>(1)read(参数)：通过参数指定每次读取的大小长度,这样就避免了因为文件太大读取出问题。</p>\r\n\r\n<pre>\r\nwhile True:\r\n    block = f.read(1024)\r\n    if not block:\r\n        break</pre>\r\n\r\n<p>&nbsp;(2)readline()：每次读取一行</p>\r\n\r\n<pre>\r\nwhile True:\r\n    line = f.readline()\r\n    if not line:\r\n        break</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(3)readlines()：读取全部的行，构成一个list，通过list来对文件进行处理，但是这种方式依然会造成MemoyError</p>\r\n\r\n<pre>\r\nfor line in f.readlines():\r\n    ....</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>以上基本分析了python中读取文件的方法，但是总感觉不能达到python中所强调的优雅，后来发现了还有下面的解决方法：</p>\r\n\r\n<p>pythonic（我理解的是很python的python代码）的解决办法：</p>\r\n\r\n<pre>\r\nwith open(filename, &#39;r&#39;) as flie:\r\n    for line in file:\r\n        ....</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>对可迭代对象file进行迭代，这样会自动的使用buffered IO以及内存管理，这样就不必担心大文件问题了。</p>\r\n\r\n<p>后来，又发现了一个模块：linecache，这个模块也可以解决大文件读取的问题，并且可以指定读取哪一行，</p>\r\n\r\n<pre>\r\n# 输出第2行\r\ntext = linecache.getline(filename, 2)</pre>',1,'2018-05-03 08:33:00.000000',1,'RexDu',0,NULL),(17,'让 CPU 告诉你硬盘和网络到底有多慢','',0,'经常听到有人说磁盘很慢、网络很卡，这都是站在人类的感知维度去表述的，比如拷贝一个文件到硬盘需要几分钟到几十分钟，够我去吃个饭啦；而从网络下载一部电影，有时候需要几个小时，我都可以睡一觉了。','<h2>简介</h2>\r\n\r\n<p>经常听到有人说磁盘很慢、网络很卡，这都是站在人类的感知维度去表述的，比如拷贝一个文件到硬盘需要几分钟到几十分钟，够我去吃个饭啦；而从网络下载一部电影，有时候需要几个小时，我都可以睡一觉了。</p>\r\n\r\n<p>最为我们熟知的关于计算机不同组件速度差异的图表，是下面这种金字塔形式：越往上速度越快，容量越小，而价格越高。这张图只是给了我们一个直观地感觉，并没有对各个速度和性能做出量化的说明和解释。而实际上，不同层级之间的差异要比这张图大的多。这篇文章就让你站在 CPU 的角度看这个世界，说说到底它们有多慢。</p>\r\n\r\n<p><img alt=\"\" src=\"http://s7.computerhistory.org/is/image/CHM/500004956?$re-zoomed$\" /></p>\r\n\r\n<p>希望你看到看完这篇文章能明白两件事情：磁盘和网络真的很慢，性能优化是个复杂的系统性的活。</p>\r\n\r\n<p>注：所有的数据都是来自<a href=\"https://gist.github.com/hellerbarde/2843375\" rel=\"noopener\" target=\"_blank\">这个地址</a>。所有的数据会因为机器配置不同，或者硬件的更新而有出入，但是不影响我们直觉的感受。如果对这些数据比较感兴趣，<a href=\"https://people.eecs.berkeley.edu/~rcs/research/interactive_latency.html\" rel=\"noopener\" target=\"_blank\">这个网址</a>给出了不同年份一些指标的数值。</p>\r\n\r\n<h2>数据</h2>\r\n\r\n<ul>\r\n	<li>先来看看 CPU 的速度，就拿我的电脑来说，主频是 2.6G，也就是说每秒可以执行&nbsp;2.6*10^9&nbsp;个指令，每个指令只需要&nbsp;0.38ns（现在很多个人计算机的主频要比这个高，配置比较高的能达到 3.0G+）。我们把这个时间当做基本单位&nbsp;1s，因为&nbsp;1s&nbsp;大概是人类能感知的最小时间单位。</li>\r\n</ul>\r\n\r\n<p><img alt=\"\" src=\"http://photocdn.sohu.com/20141022/Img405364158.jpg\" /></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>一级缓存读取时间为&nbsp;0.5ns，换算成人类时间大约是&nbsp;1.3s，大约一次或者两次心跳的时间。这里能看出缓存的重要性，因为它的速度可以赶上 CPU，程序本身的 locality 特性加上指令层级上的优化，cache 访问的命中率很高，这最终能极大提高效率。</p>\r\n	</li>\r\n	<li>\r\n	<p>分支预测错误需要耗时&nbsp;5ns，换算成人类时间大约是&nbsp;13s，这个就有点久了，所以你会看到很多文章分析如何优化代码来降低分支预测的几率，比如<a href=\"https://stackoverflow.com/questions/11227809/why-is-it-faster-to-process-a-sorted-array-than-an-unsorted-array\" rel=\"noopener\" target=\"_blank\">这个得分非常高的 stackoverflow 问题</a>。</p>\r\n	</li>\r\n	<li>\r\n	<p>二级缓存时间就比较久了，大约在&nbsp;7ns，换算成人类时间大约是&nbsp;18.2s，可以看到的是如果一级缓存没有命中，然后去二级缓存读取数据，时间差了一个数量级。</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>小知识：</strong>为什么需要多层的 CPU 缓存呢？<a href=\"https://fgiesen.wordpress.com/2016/08/07/why-do-cpus-have-multiple-cache-levels/\" rel=\"noopener\" target=\"_blank\">这篇文章通过一个通俗易懂的例子给出了讲解</a>。</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>我们继续，互斥锁的加锁和解锁时间需要&nbsp;25ns，换算成人类时间大约是&nbsp;65s，首次达到了一分钟。并发编程中，我们经常听说锁是一个很耗时的东西，因为在微波炉里加热一个东西需要一分钟的话，你要在那傻傻地等蛮久了。</p>\r\n	</li>\r\n	<li>\r\n	<p>然后就到了内存，每次内存寻址需要&nbsp;100ns，换算成人类时间是&nbsp;260s，也就是4分多钟，如果读一些不需要太多思考的文章，这么久能读完2-3千字（这个快阅读的时代，很少人在手机上能静心多这么字了）。看起来还不算坏，不多要从内存中读取一段数据需要的时间会更多。到了内存之后，时间就变了一个量级，CPU 和内存之间的速度瓶颈被称为<a href=\"https://en.wikipedia.org/wiki/Von_Neumann_architecture#Von_Neumann_bottleneck\" rel=\"noopener\" target=\"_blank\">冯诺依曼瓶颈</a>。</p>\r\n	</li>\r\n	<li>\r\n	<p>一次 CPU 上下文切换（系统调用）需要大约&nbsp;1500ns，也就是&nbsp;1.5us（这个数字参考了<a href=\"http://blog.tsunanet.net/2010/11/how-long-does-it-take-to-make-context.html\" rel=\"noopener\" target=\"_blank\">这篇文章</a>，采用的是单核 CPU 线程平均时间），换算成人类时间大约是&nbsp;65分钟，嗯，也就是一个小时。我们也知道上下文切换是很耗时的行为，毕竟每次浪费一个小时，也很让人有罪恶感的。上下文切换更恐怖的事情在于，<strong>这段时间里 CPU 没有做任何有用的计算</strong>，只是切换了两个不同进程的寄存器和内存状态；而且这个过程<strong>还破坏了缓存，</strong>让后续的计算更加耗时。</p>\r\n	</li>\r\n	<li>\r\n	<p>在 1Gbps 的网络上传输 2K 的数据需要&nbsp;20us，换算成人类时间是&nbsp;14.4小时，这么久都能把《星球大战》六部曲看完了（甚至还加上吃饭撒尿的时间）！可以看到网络上非常少数据传输对于 CPU 来说，已经很漫长。而且这里的时间还是理论最大值，实际过程还要更慢一些。</p>\r\n	</li>\r\n	<li>\r\n	<p>SSD 随机读取耗时为&nbsp;150us，换算成人类时间大约是&nbsp;4.5天。换句话说，SSD 读点数据，CPU 都能休假，报团参加周边游了。虽然我们知道 SSD 要比机械硬盘快很多，但是这个速度对于 CPU 来说也是像乌龟一样。I/O 设备&nbsp;从硬盘开始速度开始变得漫长，这个时候我们就想起内存的好处了。尽量减少 IO 设备的读写，把最常用的数据放到内存中作为缓存是所有程序的通识。像&nbsp;memcached&nbsp;和&nbsp;redis&nbsp;这样的高速缓存系统近几年的异军突起，就是解决了这里的问题。</p>\r\n	</li>\r\n	<li>\r\n	<p>从内存中读取&nbsp;1MB&nbsp;的连续数据，耗时大约为&nbsp;250us，换算成人类时间是&nbsp;7.5天，这次假期升级到国庆七天国外游了。</p>\r\n	</li>\r\n	<li>\r\n	<p>同一个数据中心网络上跑一个来回需要&nbsp;0.5ms，换算成人类时间大约是&nbsp;15天，也就是半个月的时间。如果你的程序有段代码需要和数据中心的其他服务器交互，在这段时间里 CPU 都已经狂做了半个月的运算。减少不同服务组件的网络请求，是性能优化的一大课题。</p>\r\n	</li>\r\n	<li>\r\n	<p>从 SSD 读取 1MB 的顺序数据，大约需要&nbsp;1ms，换算成人类时间是&nbsp;1个月。也就是说 SSD 读一个普通的文件，如果要等你做完，CPU 一个月时间就荒废了。尽管如此，<strong>SSD</strong>&nbsp;已经很快啦，不信你看下面机械磁盘的表现。</p>\r\n	</li>\r\n	<li>\r\n	<p>磁盘寻址时间为&nbsp;10ms，换算成人类时间是&nbsp;10个月，刚好够人类创造一个新的生命了。如果 CPU 需要让磁盘泡杯咖啡，在它眼里，磁盘去生了个孩子，回来告诉它你让我泡的咖啡好了。机械硬盘使用&nbsp;RPM(Revolutions Per Minute/每分钟转速)&nbsp;来评估磁盘的性能：RPM 越大，平均寻址时间更短，磁盘性能越好。寻址只是把磁头移动到正确的磁道上，然后才能读取指定扇区的内容。换句话说，寻址虽然很浪费时间，但其实它并没有办任何的正事（读取磁盘内容）。</p>\r\n	</li>\r\n	<li>\r\n	<p>从磁盘读取 1MB 连续数据需要&nbsp;20ms，换算成人类时间是&nbsp;20个月。<strong>IO 设备是计算机系统的瓶颈</strong>，希望读到这里你能更深切地理解这句话！如果还不理解，不妨想想你在网上买的东西，快递送了将近两年，你的心情是怎么样的。</p>\r\n	</li>\r\n	<li>\r\n	<p>而从世界上不同城市网络上走一个来回，平均需要&nbsp;150ms（参考<a href=\"https://wondernetwork.com/pings/\" rel=\"noopener\" target=\"_blank\">世界各地 ping 报文的时间</a>），换算成人类时间是&nbsp;12.5年。不难理解，所有的程序和架构都会尽量避免不同城市甚至是跨国家的网络访问，<a href=\"https://en.wikipedia.org/wiki/Content_delivery_network\" rel=\"noopener\" target=\"_blank\">CDN</a>&nbsp;就是这个问题的一个解决方案：让用户和最接近自己的服务器交互，从而减少网络上报文的传输时间。</p>\r\n	</li>\r\n	<li>\r\n	<p>虚拟机重启一次大约要&nbsp;4s&nbsp;时间，换算成人类的时间是&nbsp;3百多年。对于此，我想到了乔布斯要死命<a href=\"http://stevejobsdailyquote.com/2014/03/26/boot-time/\" rel=\"noopener\" target=\"_blank\">优化 Mac 系统开机启动时间</a>的故事。如果机器能少重启而且每次启动能快一点，不仅能救人命，也能救 CPU 的命。</p>\r\n	</li>\r\n	<li>\r\n	<p>物理服务器重启一次需要&nbsp;5min，换算成人类时间是&nbsp;2万5千年，快赶上人类的文明史了。5 分钟人类都要等一会了，更别提 CPU 了，所以没事不要乱重启服务器啊，分分钟终结一个文明的节奏。</p>\r\n	</li>\r\n</ul>\r\n\r\n<h2>参考资料</h2>\r\n\r\n<ul>\r\n	<li><a href=\"https://www.akkadia.org/drepper/cpumemory.pdf\" rel=\"noopener\" target=\"_blank\">What Every Programmer Should Know About Memory</a></li>\r\n	<li><a href=\"http://duartes.org/gustavo/blog/post/getting-physical-with-memory/\" rel=\"noopener\" target=\"_blank\">Getting Physical With Memory</a></li>\r\n</ul>',1,'2018-08-20 08:34:00.000000',2,'RexDu',1,NULL),(18,'windows最大路径长度','',0,'windows最大路径长度','<h3>最大路径长度</h3>\r\n\r\n<p>在Windows API中，路径的最大长度为MAX_PATH，MAX_PATH被定义为260。一个路径的结构如下所示：</p>\r\n\r\n<p>|盘符|冒号|反斜杠|被反斜杠所划分的若干部分|NUL(&lsquo;\\0&rsquo;)|，例如：D:\\&lt;256 chars&gt;NUL.</p>\r\n\r\n<p><strong>&nbsp;</strong></p>\r\n\r\n<p><strong>Note</strong>：Windows API中的函数将&rdquo;/&rdquo;转换成&rdquo;\\&rdquo;，使之成为NT风格名字的一部分。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>许多API函数的Unicode版本允许最大长度大约为32000个字符的路径，这种路径的每个部分最长由255</strong><strong>个字符组成</strong>。(The Unicode versions of several functions permit a maximum path length of approximately 32,000 characters composed of components up to 255 characters in length)。要指定这种路径，需要使用&rdquo;\\\\?\\&rdquo;作为前缀。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>NOTE</strong>：最大的路径长度：32000字符是一个大概的数字，因为&rdquo;\\\\?\\&rdquo;前缀能够扩展为一个更长的字符串，并且这个扩展在总长度中也被计算。</p>\r\n\r\n<p>例如：&rdquo;\\\\?\\D:\\&lt;path&gt;&rdquo;。要指定这样一个UNC路径，使用&rdquo;\\\\?\\UNC\\&rdquo;前缀。例如：&rdquo;\\\\?\\UNC\\&lt;server&gt;\\&lt;share&gt;&rdquo;。这些前缀本身不作为路径的一部分。它们表示被传递给系统的路径应该做一些最小限度的变化，这意味着不能使用斜杠(/)来表示路径分隔符，并且不能使用一个点号(.)来代表当前路径。同时，带有&rdquo;\\\\?\\&rdquo;前缀的路径不能使用相对路径。相对路径被限制在MAX_PATH个字符。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>当使用API创建一个目录时，指定的路径不能太长导致不能附加一个8.3格式的文件名。也就是说目录名字不能超过MAX_PATH减去12。</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>shell和文件系统会有不同要求。这就使得我们能够使用API创建一个shell UI不能操纵的路径。</p>',4,'2018-12-08 08:36:00.000000',6,'RexDu',0,NULL),(19,'Linux中CPU亲和性(affinity)','',0,'超线程技术(Hyper-Threading)：就是利用特殊的硬件指令，把两个逻辑内核(CPU core)模拟成两个物理芯片','<h1>0、准备知识</h1>\r\n\r\n<p><strong>超线程技术(Hyper-Threading)</strong>：就是利用特殊的硬件指令，把两个逻辑内核(CPU core)模拟成两个物理芯片，</p>\r\n\r\n<p>　　　　让单个处理器都能使用线程级并行计算，进而兼容多线程操作系统和软件，减少了CPU的闲置时间，提高的CPU的运行效率。</p>\r\n\r\n<p>　　　　我们常听到的双核四线程/四核八线程指的就是支持超线程技术的CPU.</p>\r\n\r\n<p><strong>物理CPU</strong>:机器上安装的实际CPU, 比如说你的主板上安装了一个8核CPU,那么物理CPU个数就是1个,所以物理CPU个数就是主板上安装的CPU个数。</p>\r\n\r\n<p><strong>逻辑CPU</strong>:一般情况，我们认为一颗CPU可以有多核，加上intel的超线程技术(HT), 可以在逻辑上再分一倍数量的CPU core出来；</p>\r\n\r\n<pre>\r\n逻辑CPU数量 = 物理CPU数量 x CPU cores x 2(如果支持并开启HT) //前提是CPU的型号一致，如果不一致只能一个一个的加起来，不用直接乘以物理CPU数量\r\n//比如你的电脑安装了一块4核CPU，并且支持且开启了超线程（HT）技术，那么逻辑CPU数量 = 1 &times; 4 &times; 2 = 8</pre>\r\n\r\n<p>&nbsp;<strong>Linux下查看CPU相关信息</strong>, CPU的信息主要都在/proc/cupinfo中,</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n# 查看物理CPU个数\r\ncat /proc/cpuinfo|grep &quot;physical id&quot;|sort -u|wc -l\r\n\r\n# 查看每个物理CPU中core的个数(即核数)\r\ncat /proc/cpuinfo|grep &quot;cpu cores&quot;|uniq\r\n\r\n# 查看逻辑CPU的个数\r\ncat /proc/cpuinfo|grep &quot;processor&quot;|wc -l\r\n\r\n# 查看CPU的名称型号\r\ncat /proc/cpuinfo|grep &quot;name&quot;|cut -f2 -d:|uniq</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;<strong>Linux查看某个进程运行在哪个逻辑CPU上</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\nps -eo pid,args,psr\r\n#参数的含义：\r\npid  - 进程ID\r\nargs - 该进程执行时传入的命令行参数\r\npsr  - 分配给进程的逻辑CPU\r\n\r\n例子:\r\n[~]# ps -eo pid,args,psr | grep nginx\r\n9073 nginx: master process /usr/&nbsp;&nbsp; 1\r\n9074 nginx: worker process&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0\r\n9075 nginx: worker process&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1\r\n9076 nginx: worker process&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2\r\n9077 nginx: worker process&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3\r\n13857 grep nginx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>&nbsp;Linux查看线程的TID</strong></p>\r\n\r\n<p>TID就是Thread ID,他和POSIX中pthread_t表示的线程ID完全不是同一个东西.</p>\r\n\r\n<p>Linux中的POSIX线程库实现的线程其实也是一个轻量级进程(LWP),这个TID就是这个线程的真实PID.</p>\r\n\r\n<p>但是又不能通过getpid()函数获取，Linux中定义了gettid()这个接口，但是通常都是未实现的，所以需要使用下面的方式获取TID。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n//program\r\n#include &lt;sys/syscall.h&gt;  \r\npid_t tid;\r\ntid = syscall(__NR_gettid);// or syscall(SYS_gettid)  \r\n\r\n//command-line 3种方法(推荐第三种方法)\r\n（1）ps -efL | grep prog_name\r\n（2）ls /proc/pid/task            //文件夹名即TID\r\n（3）ps -To &#39;pid,lwp,psr,cmd&#39; -p PID</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h1>&nbsp;</h1>\r\n\r\n<h1>1、CPU亲和性(亲和力)</h1>\r\n\r\n<h2>1.1 基本概念</h2>\r\n\r\n<p>CPU affinity 是一种调度属性(scheduler property), 它可以将一个进程&quot;绑定&quot; 到一个或一组CPU上.</p>\r\n\r\n<p>在SMP(Symmetric Multi-Processing对称多处理)架构下，Linux调度器(scheduler)会根据CPU affinity的设置让指定的进程运行在&quot;绑定&quot;的CPU上,而不会在别的CPU上运行.&nbsp;</p>\r\n\r\n<p>Linux调度器同样支持自然CPU亲和性(natural CPU affinity): 调度器会试图保持进程在相同的CPU上运行,&nbsp;这意味着进程通常不会在处理器之间频繁迁移,进程迁移的频率小就意味着产生的负载小。</p>\r\n\r\n<p>因为程序的作者比调度器更了解程序,所以我们可以手动地为其分配CPU核，而不会过多地占用CPU0，或是让我们关键进程和一堆别的进程挤在一起,所有设置CPU亲和性可以使某些程序提高性能。</p>\r\n\r\n<h2>1.2 表示方法</h2>\r\n\r\n<p>CPU affinity 使用位掩码(bitmask)表示, 每一位都表示一个CPU, 置1表示&quot;绑定&quot;.</p>\r\n\r\n<p>最低位表示第一个逻辑CPU, 最高位表示最后一个逻辑CPU.</p>\r\n\r\n<p>CPU affinity典型的表示方法是使用16进制,具体如下.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n0x00000001\r\n    is processor #0\r\n\r\n0x00000003\r\n    is processors #0 and #1\r\n\r\n0xFFFFFFFF\r\n    is all processors (#0 through #31)</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h1>2、taskset命令</h1>\r\n\r\n<p>&nbsp;taskset命名用于获取或者设定CPU亲和性.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n# 命令行形式\r\ntaskset [options] mask command [arg]...\r\ntaskset [options] -p [mask] pid\r\n\r\n<strong>PARAMETER\r\n　</strong>　　　mask : cpu亲和性,当没有-c选项时, 其值前无论有没有0x标记都是16进制的,\r\n　　　　　　　　当有-c选项时,其值是十进制的.\r\n　　　　command : 命令或者可执行程序\r\n　　　　arg : command的参数\r\n　　　　pid : 进程ID,可以通过ps/top/pidof等命令获取\r\n\r\n\r\n<strong>OPTIONS\r\n　　　　</strong>-a, --all-tasks (旧版本中没有这个选项)\r\n　　　　　　　　这个选项涉及到了linux中TID的概念,他会将一个进程中所有的TID都执行一次CPU亲和性设置.\r\n　　　　　　　　TID就是Thread ID,他和POSIX中pthread_t表示的线程ID完全不是同一个东西.\r\n　　　　　　　　Linux中的POSIX线程库实现的线程其实也是一个进程(LWP),这个TID就是这个线程的真实PID.\r\n       -p, --pid\r\n              操作已存在的PID,而不是加载一个新的程序\r\n       -c, --cpu-list\r\n              声明CPU的亲和力使用数字表示而不是用位掩码表示. 例如 0,5,7,9-11.\r\n       -h, --help\r\n              display usage information and exit\r\n       -V, --version\r\n              output version information and exit</pre>\r\n\r\n<p>&nbsp;&nbsp;<strong>USAGE</strong></p>\r\n\r\n<p>　　　　1) 使用指定的CPU亲和性运行一个新程序</p>\r\n\r\n<p>　　　　　　<strong>taskset [-c] mask command [arg]...</strong></p>\r\n\r\n<p>　　　　　　　　举例:使用CPU0运行ls命令显示/etc/init.d下的所有内容&nbsp;</p>\r\n\r\n<p>　　　　　　　　　　<em>taskset -c 0 ls -al /etc/init.d/</em></p>\r\n\r\n<p>　　　　2) 显示已经运行的进程的CPU亲和性</p>\r\n\r\n<p>　　　　　　<strong>taskset -p pid</strong></p>\r\n\r\n<p>　　　　　　　　举例:查看init进程(PID=1)的CPU亲和性</p>\r\n\r\n<p>　　　　　　　　　　<em>taskset -p 1</em></p>\r\n\r\n<p>　　　　3) 改变已经运行进程的CPU亲和力</p>\r\n\r\n<p>　　　　 &nbsp; &nbsp;<strong>taskset -p[c] mask pid</strong></p>\r\n\r\n<p>　　　　　　　　举例:打开2个终端,在第一个终端运行top命令,第二个终端中</p>\r\n\r\n<p>　　　　　　　　　　首先运行:[~]#&nbsp;<em>ps -eo pid,args,psr | grep top</em>&nbsp;#获取top命令的pid和其所运行的CPU号</p>\r\n\r\n<p>　　　　　　　　　　其次运行:[~]#&nbsp;<em>taskset -cp</em>&nbsp;新的CPU号 pid &nbsp; &nbsp; &nbsp;&nbsp;#更改top命令运行的CPU号</p>\r\n\r\n<p>　　　　　　　　　　最后运行:[~]#&nbsp;<em>ps -eo pid,args,psr | grep top</em>&nbsp;#查看是否更改成功</p>\r\n\r\n<p><strong>&nbsp;&nbsp;PERMISSIONS</strong><br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; 一个用户要设定一个进程的CPU亲和性,如果目标进程是该用户的,则可以设置,如果是其他用户的,则会设置失败,提示&nbsp;Operation not permitted.当然root用户没有任何限制.</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; 任何用户都可以获取任意一个进程的CPU亲和性.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;taskset命令其实就是使用sched_getaffinity()和sched_setaffinity()接口实现的,相信看完了第3节你也能自己实现一个taskset命令.</p>\r\n\r\n<p>有兴趣的可以看一下其源代码:ftp://ftp.kernel.org/pub/linux/utils/util-linux/vX.YZ/util-linux-X.YZ-xxx.tar.gz &nbsp; /schedutils/taskset.c</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h1>3、编程API</h1>\r\n\r\n<p>下面是用用于设置和获取CPU亲和性相关的API.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n#define _GNU_SOURCE\r\n#include &lt;sched.h&gt;\r\n#include &lt;pthread.h&gt; //for pthread functions(last 4) 注意&lt;pthread.h&gt;包含&lt;sched.h&gt;\r\n\r\n/* MACRO */\r\n    /* The following macros are provided to operate on the CPU set set */\r\n        /* Clears set, so that it contains no CPUs */\r\n        void CPU_ZERO(cpu_set_t *set);\r\n        void CPU_ZERO_S(size_t setsize, cpu_set_t *set);\r\n        \r\n        /* Add CPU cpu to set */\r\n        void CPU_SET(int cpu, cpu_set_t *set);\r\n        void CPU_SET_S(int cpu, size_t setsize, cpu_set_t *set);\r\n        \r\n        /* Remove CPU cpu from set */\r\n        void CPU_CLR(int cpu, cpu_set_t *set);\r\n        void CPU_CLR_S(int cpu, size_t setsize, cpu_set_t *set);\r\n        \r\n        /* Test to see if CPU cpu is a member of set */\r\n        int CPU_ISSET(int cpu, cpu_set_t *set);\r\n        int CPU_ISSET_S(int cpu, size_t setsize, cpu_set_t *set);\r\n        \r\n        /* Return the number of CPUs in set */\r\n        void CPU_COUNT(cpu_set_t *set);\r\n        void CPU_COUNT_S(size_t setsize, cpu_set_t *set);\r\n    \r\n    /* The following macros perform logical operations on CPU sets */\r\n        /* Store the logical AND of the sets srcset1 and srcset2 in destset (which may be one of the source sets). */\r\n        void CPU_AND(cpu_set_t *destset, cpu_set_t *srcset1, cpu_set_t *srcset2);\r\n        void CPU_AND_S(size_t setsize, cpu_set_t *destset, cpu_set_t *srcset1, cpu_set_t *srcset2);\r\n        \r\n        /* Store the logical OR of the sets srcset1 and srcset2 in destset (which may be one of the source sets). */\r\n        void CPU_OR(cpu_set_t *destset, cpu_set_t *srcset1, cpu_set_t *srcset2);\r\n        void CPU_OR_S(size_t setsize, cpu_set_t *destset, cpu_set_t *srcset1, cpu_set_t *srcset2);\r\n        \r\n        /* Store  the logical XOR of the sets srcset1 and srcset2 in destset (which may be one of the source sets). */\r\n        void CPU_XOR(cpu_set_t *destset, cpu_set_t *srcset1, cpu_set_t *srcset2);\r\n        void CPU_XOR_S(size_t setsize, cpu_set_t *destset, cpu_set_t *srcset1, cpu_set_t *srcset2);\r\n        \r\n        /* Test whether two CPU set contain exactly the same CPUs. */\r\n        int CPU_EQUAL(cpu_set_t *set1, cpu_set_t *set2);\r\n        int CPU_EQUAL_S(size_t setsize, cpu_set_t *set1, cpu_set_t *set2);\r\n    \r\n    /* The following macros are used to allocate and deallocate CPU sets: */\r\n        /* Allocate a CPU set large enough to hold CPUs in the range 0 to num_cpus-1 */\r\n        cpu_set_t *CPU_ALLOC(int num_cpus);\r\n    \r\n        /* Return the size in bytes of the CPU set that would be needed to  hold  CPUs  in the  range 0 to num_cpus-1. \r\n           This macro provides the value that can be used for the setsize argument in the CPU_*_S() macros */\r\n        size_t CPU_ALLOC_SIZE(int num_cpus);\r\n        \r\n        /* Free a CPU set previously allocated by CPU_ALLOC(). */\r\n        void CPU_FREE(cpu_set_t *set);\r\n\r\n/* API */\r\n    /* Set the CPU affinity for a task */\r\n    int sched_setaffinity(pid_t pid, size_t cpusetsize, cpu_set_t *mask);\r\n    /* Get the CPU affinity for a task */\r\n    int sched_getaffinity(pid_t pid, size_t cpusetsize, cpu_set_t *mask);\r\n    \r\n    /* set CPU affinity attribute in thread attributes object */\r\n    int pthread_attr_setaffinity_np(pthread_attr_t *attr, size_t cpusetsize, const cpu_set_t *cpuset);\r\n    /* get CPU affinity attribute in thread attributes object */\r\n    int pthread_attr_getaffinity_np(const pthread_attr_t *attr, size_t cpusetsize, cpu_set_t *cpuset);\r\n    \r\n    /* set CPU affinity of a thread */\r\n    int pthread_setaffinity_np(pthread_t thread, size_t cpusetsize, const cpu_set_t *cpuset);\r\n    /* get CPU affinity of a thread */\r\n    int pthread_getaffinity_np(pthread_t thread, size_t cpusetsize, cpu_set_t *cpuset);</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>相关的宏通常都分为2种,一种是带_S后缀的,一种不是不带_S后缀的, 从声明上看带_S后缀的宏都多出一个参数&nbsp;<em>setsize.</em></p>\r\n\r\n<p>从功能上看他们的区别是带_S后缀的宏是用于操作动态申请的CPU set(s),所谓的动态申请其实就是使用宏&nbsp;<strong>CPU_ALLOC&nbsp;</strong>申请,</p>\r\n\r\n<p>参数setsize 可以是通过宏&nbsp;<strong>CPU_ALLOC_SIZE&nbsp;</strong>获得,两者的用法详见下面的例子.</p>\r\n\r\n<p>相关的API只有6个, 前2个是用来设置进程的CPU亲和性，需要注意的一点是,当这2个API的第一个参数pid为0时,表示使用调用进程的进程ID；</p>\r\n\r\n<p>后4个是用来设置线程的CPU亲和性。其实sched_setaffinity()也可以用来设置线程的CPU的亲和性，也就是taskset &ldquo;-a&rdquo;选项中提到的TID概念。</p>\r\n\r\n<h2>3.1 例子一:使用2种方式(带和不带_S后缀的宏)获取当前进程的CPU亲和性</h2>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n#define _GNU_SOURCE\r\n#include &lt;sched.h&gt;\r\n#include &lt;unistd.h&gt; /* sysconf */\r\n#include &lt;stdlib.h&gt; /* exit */\r\n#include &lt;stdio.h&gt;\r\n\r\nint main(void)\r\n{\r\n    int i, nrcpus;\r\n    cpu_set_t mask;\r\n    unsigned long bitmask = 0;\r\n    \r\n    CPU_ZERO(&amp;mask);\r\n    \r\n     /* Get the CPU affinity for a pid */\r\n    if (sched_getaffinity(0, sizeof(cpu_set_t), &amp;mask) == -1) \r\n    {   \r\n        perror(&quot;sched_getaffinity&quot;);\r\n        exit(EXIT_FAILURE);\r\n    }\r\n    \r\n       /* get logical cpu number */\r\n    nrcpus = sysconf(_SC_NPROCESSORS_CONF);\r\n    \r\n    for (i = 0; i &lt; nrcpus; i++)\r\n    {\r\n        if (CPU_ISSET(i, &amp;mask))\r\n        {\r\n            bitmask |= (unsigned long)0x01 &lt;&lt; i;\r\n            printf(&quot;processor #%d is set\\n&quot;, i); \r\n        }\r\n    }\r\n    printf(&quot;bitmask = %#lx\\n&quot;, bitmask);\r\n\r\n    exit(EXIT_SUCCESS);\r\n}\r\n/*----------------------------------------------------------------*/\r\n#define _GNU_SOURCE\r\n#include &lt;sched.h&gt;\r\n#include &lt;unistd.h&gt; /* sysconf */\r\n#include &lt;stdlib.h&gt; /* exit */\r\n#include &lt;stdio.h&gt;\r\n\r\nint main(void)\r\n{\r\n    int i, nrcpus;\r\n    cpu_set_t *pmask;\r\n    size_t cpusize;\r\n    unsigned long bitmask = 0;\r\n\r\n    /* get logical cpu number */\r\n    nrcpus = sysconf(_SC_NPROCESSORS_CONF);\r\n    \r\n    pmask = CPU_ALLOC(nrcpus);\r\n    cpusize = CPU_ALLOC_SIZE(nrcpus);\r\n    CPU_ZERO_S(cpusize, pmask);\r\n    \r\n    /* Get the CPU affinity for a pid */\r\n    if (sched_getaffinity(0, cpusize, pmask) == -1) \r\n    {\r\n        perror(&quot;sched_getaffinity&quot;);\r\n        CPU_FREE(pmask);\r\n        exit(EXIT_FAILURE);\r\n    }\r\n    for (i = 0; i &lt; nrcpus; i++)\r\n    {\r\n        if (CPU_ISSET_S(i, cpusize, pmask))\r\n        {\r\n             bitmask |= (unsigned long)0x01 &lt;&lt; i;\r\n            printf(&quot;processor #%d is set\\n&quot;, i); \r\n        }\r\n    }\r\n      printf(&quot;bitmask = %#lx\\n&quot;, bitmask);\r\n      \r\n    CPU_FREE(pmask);\r\n    exit(EXIT_SUCCESS);\r\n}</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;执行结果如下(4核CPU):</p>\r\n\r\n<p><img alt=\"\" id=\"code_img_closed_7a1202dd-73c7-4e7a-815a-d1f7702e432c\" src=\"https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" />&nbsp;执行结果</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>&nbsp;3.2 例子二:设置进程的CPU亲和性后再获取显示CPU亲和性</h2>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n#define _GNU_SOURCE\r\n#include &lt;sched.h&gt;\r\n#include &lt;unistd.h&gt; /* sysconf */\r\n#include &lt;stdlib.h&gt; /* exit */\r\n#include &lt;stdio.h&gt;\r\n\r\nint main(void)\r\n{\r\n    int i, nrcpus;\r\n    cpu_set_t mask;\r\n    unsigned long bitmask = 0;\r\n    \r\n    CPU_ZERO(&amp;mask);\r\n    \r\n    CPU_SET(0, &amp;mask); /* add CPU0 to cpu set */\r\n    CPU_SET(2, &amp;mask); /* add CPU2 to cpu set */\r\n\r\n      /* Set the CPU affinity for a pid */\r\n    if (sched_setaffinity(0, sizeof(cpu_set_t), &amp;mask) == -1) \r\n    {   \r\n        perror(&quot;sched_setaffinity&quot;);\r\n        exit(EXIT_FAILURE);\r\n    }\r\n    \r\n    CPU_ZERO(&amp;mask);\r\n    \r\n     /* Get the CPU affinity for a pid */\r\n    if (sched_getaffinity(0, sizeof(cpu_set_t), &amp;mask) == -1) \r\n    {   \r\n        perror(&quot;sched_getaffinity&quot;);\r\n        exit(EXIT_FAILURE);\r\n    }\r\n\r\n       /* get logical cpu number */\r\n    nrcpus = sysconf(_SC_NPROCESSORS_CONF);\r\n    \r\n    for (i = 0; i &lt; nrcpus; i++)\r\n    {\r\n        if (CPU_ISSET(i, &amp;mask))\r\n        {\r\n            bitmask |= (unsigned long)0x01 &lt;&lt; i;\r\n            printf(&quot;processor #%d is set\\n&quot;, i); \r\n        }\r\n    }\r\n    printf(&quot;bitmask = %#lx\\n&quot;, bitmask);\r\n\r\n    exit(EXIT_SUCCESS);\r\n}</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>&nbsp;3.3 例子三：设置线程的CPU属性后再获取显示CPU亲和性</h2>\r\n\r\n<p>这个例子来源于Linux的man page.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n#define _GNU_SOURCE\r\n#include &lt;pthread.h&gt; //不用再包含&lt;sched.h&gt;\r\n#include &lt;stdio.h&gt;\r\n#include &lt;stdlib.h&gt;\r\n#include &lt;errno.h&gt;\r\n\r\n#define handle_error_en(en, msg) \\\r\n        do { errno = en; perror(msg); exit(EXIT_FAILURE); } while (0)\r\n\r\nint\r\nmain(int argc, char *argv[])\r\n{\r\n    int s, j;\r\n    cpu_set_t cpuset;\r\n    pthread_t thread;\r\n    \r\n    thread = pthread_self();\r\n    \r\n    /* Set affinity mask to include CPUs 0 to 7 */\r\n    CPU_ZERO(&amp;cpuset);\r\n    for (j = 0; j &lt; 8; j++)\r\n        CPU_SET(j, &amp;cpuset);\r\n    \r\n    s = pthread_setaffinity_np(thread, sizeof(cpu_set_t), &amp;cpuset);\r\n    if (s != 0)\r\n    {\r\n        handle_error_en(s, &quot;pthread_setaffinity_np&quot;);\r\n    }\r\n    \r\n    /* Check the actual affinity mask assigned to the thread */\r\n    s = pthread_getaffinity_np(thread, sizeof(cpu_set_t), &amp;cpuset);\r\n    if (s != 0)\r\n    {\r\n        handle_error_en(s, &quot;pthread_getaffinity_np&quot;);\r\n    }\r\n    \r\n    printf(&quot;Set returned by pthread_getaffinity_np() contained:\\n&quot;);\r\n    for (j = 0; j &lt; CPU_SETSIZE; j++) //CPU_SETSIZE 是定义在&lt;sched.h&gt;中的宏，通常是1024\r\n    {\r\n        if (CPU_ISSET(j, &amp;cpuset))\r\n        {\r\n            printf(&quot;    CPU %d\\n&quot;, j);\r\n        }\r\n    }\r\n    exit(EXIT_SUCCESS);\r\n}</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>3.4 例子四：使用seched_setaffinity设置线程的CPU亲和性</h2>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n#define _GNU_SOURCE\r\n#include &lt;sched.h&gt;\r\n#include &lt;stdlib.h&gt;\r\n#include &lt;sys/syscall.h&gt; // syscall\r\n\r\nint main(void)\r\n{\r\n    pid_t tid;\r\n    int i, nrcpus;\r\n    cpu_set_t mask;\r\n    unsigned long bitmask = 0;\r\n    \r\n    CPU_ZERO(&amp;mask);\r\n    CPU_SET(0, &amp;mask); /* add CPU0 to cpu set */\r\n    CPU_SET(2, &amp;mask); /* add CPU2 to cpu set */\r\n\r\n    // get tid(线程的PID，线程是轻量级进程，所以其本质是一个进程)\r\n    tid = syscall(__NR_gettid); // or syscall(SYS_gettid);\r\n\r\n      /* Set the CPU affinity for a pid */\r\n    if (sched_setaffinity(tid, sizeof(cpu_set_t), &amp;mask) == -1) \r\n    {\r\n        perror(&quot;sched_setaffinity&quot;);\r\n        exit(EXIT_FAILURE);\r\n    }\r\n    \r\n    exit(EXIT_SUCCESS);\r\n}</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>---------------------------------------------------------------------------------------------------------------------</p>\r\n\r\n<p>参考文献:</p>\r\n\r\n<p>http://www.yboren.com/posts/44412.html?utm_source=tuicool</p>\r\n\r\n<p>http://www.ibm.com/developerworks/cn/linux/l-affinity.html</p>\r\n\r\n<p>http://saplingidea.iteye.com/blog/633616</p>\r\n\r\n<p>http://blog.csdn.net/ttyttytty12/article/details/11726569</p>\r\n\r\n<p>&nbsp;https://en.wikipedia.org/wiki/Processor_affinity</p>\r\n\r\n<p>http://blog.chinaunix.net/uid-23622436-id-3311579.html</p>\r\n\r\n<p>http://www.cnblogs.com/emanlee/p/3587571.html</p>\r\n\r\n<p>http://blog.chinaunix.net/uid-26651253-id-3342161.html</p>\r\n\r\n<p>http://blog.csdn.net/delphiwcdj/article/details/8476547</p>\r\n\r\n<p>http://www.man7.org/linux/man-pages/man3/pthread_setaffinity_np.3.html</p>\r\n\r\n<p>http://www.man7.org/linux/man-pages/man3/pthread_attr_setaffinity_np.3.html</p>\r\n\r\n<p>man CPU_SET taskset</p>\r\n\r\n<p>&nbsp;</p>',1,'2019-03-06 08:38:00.000000',1,'RexDu',1,NULL),(20,'linux 创建连接命令 ln -s 软链接','',0,'这是linux中一个非常重要命令，请大家一定要熟悉。它的功能是为某一个文件在另外一个位置建立一个同不的链接，这个命令最常用的参数是-s','<pre>\r\n具体用法是：ln -s 源文件 目标文件。</pre>\r\n\r\n<pre>\r\n当 我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在其它的 目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。例如：ln -s /bin/less /usr/local/bin/less\r\n-s 是代号（symbolic）的意思。\r\n这 里有两点要注意：第一，ln命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化；第二，ln的链接又软链接 和硬链接两种，软链接就是ln -s ** **,它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接ln ** **,没有参数-s, 它会在你选定的位置上生成一个和源文件大小相同的文件，无论是软链接还是硬链接，文件都保持同步变化。\r\n\r\n\r\n不论是硬连结或软链结都不会将原本的档案复制一份，只会占用非常少量的磁碟空间。\r\n　　-f : 链结时先将与 dist 同档名的档案删除\r\n　　-d : 允许系统管理者硬链结自己的目录\r\n　　-i : 在删除与 dist 同档名的档案时先进行询问\r\n　　-n : 在进行软连结时，将 dist 视为一般的档案\r\n　　-s : 进行软链结(symbolic link)\r\n　　-v : 在连结之前显示其档名\r\n　　-b : 将在链结时会被覆写或删除的档案进行备份\r\n　　-S SUFFIX : 将备份的档案都加上 SUFFIX 的字尾\r\n　　-V METHOD : 指定备份的方式\r\n　　--help : 显示辅助说明\r\n　　--version : 显示版本\r\n\r\n</pre>\r\n\r\n<p>【硬连接】<br />\r\n硬连接指通过索引节点来进行连接。在Linux的文件系统中，保存在磁盘分区中的文件不管是什么类型都给它分配一个编号，称为索引节点号(Inode Index)。在Linux中，多个文件名指向同一索引节点是存在的。一般这种连接就是硬连接。硬连接的作用是允许一个文件拥有多个有效路径名，这样用户就可以建立硬连接到重要文件，以防止&ldquo;误删&rdquo;的功能。其原因如上所述，因为对应该目录的索引节点有一个以上的连接。只删除一个连接并不影响索引节点本身和其它的连接，只有当最后一个连接被删除后，文件的数据块及目录的连接才会被释放。也就是说，文件真正删除的条件是与之相关的所有硬连接文件均被删除。</p>\r\n\r\n<p>【软连接】<br />\r\n另外一种连接称之为符号连接（Symbolic Link），也叫软连接。软链接文件有类似于Windows的快捷方式。它实际上是一个特殊的文件。在符号连接中，文件实际上是一个文本文件，其中包含的有另一文件的位置信息。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>2.通过实验加深理解<br />\r\n[oracle@Linux]$ vi test.log &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #创建一个测试文件f1<br />\r\n[oracle@Linux]$ ln test.log test1.log &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #创建f1的一个硬连接文件test1.log<br />\r\n[oracle@Linux]$ ln -s test.log test2.log&nbsp; &nbsp; &nbsp; &nbsp;#创建f1的一个符号连接文件test2.log<br />\r\n[oracle@Linux]$ ls -li &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # -i参数显示文件的inode节点信息</p>\r\n\r\n<p>两种链接的区别：&nbsp;&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;硬链接文件有两个限制<br />\r\n　　&nbsp;1)、不允许给目录创建硬链接；<br />\r\n　　&nbsp;2)、只有在同一文件系统中的文件之间才能创建链接，而且只有超级用户才有建立硬链接权限。<br />\r\n　　&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对硬链接文件进行读写和删除操作时候，结果和软链接相同。但如果我们删除硬链接文件的源文件，硬链接文件仍然存在，而且保留了愿有的内容。</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 这时，系统就&ldquo;忘记&rdquo;了它曾经是硬链接文件。而把他当成一个普通文件。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;那么我们就可以这样理解：硬连接指通过索引节点来进行的连接，其作用是允许一个文件拥有多个有效路径名，能够达到误删除的作用。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其原因是因为对应的文件的索引节点有一个以上的连接。只删除一个连接并不影响索引节点本身和其它</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;的连接，只有当最后一个连接被删除后，文件的数据块及目录的连接才会被释放。文件才会被真正删除。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注：保存在磁盘分区中的文件不管是什么类型都给它分配一个编号，<em>称为索引节点号(Inode Index即I节点)。&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</em></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;软链接没有硬链接以上的两个限制，因而现在更为广泛使用，它具有更大的灵活性，甚至可以跨越不同机器、不同网络对文件进行链接。但是软链接的缺点在于：因为链接文件包含有原文件的路径信息，所以当原文件从一个目录下移到其他目录中，再访问链接文件，系统就找不到了，而硬链接就没有这个缺陷，你想怎么移就怎么移；还有它要系统分配额外的空间用于建立新的索引节点和保存原文件的路径。</p>',2,'2019-09-04 08:41:00.000000',7,'RexDu',0,NULL),(21,'数据库设计三大范式','',0,'什么是范式：简言之就是，数据库设计对数据的存储性能，还有开发人员对数据的操作都有莫大的关系。所以建立科学的，规范的的数据库是需要满足一些  规范的来优化数据数据存储方式。在关系型数据库中这些规范就可以称为范式。','<h1>数据库设计范式</h1>\r\n\r\n<p>什么是范式：简言之就是，数据库设计对数据的存储性能，还有开发人员对数据的操作都有莫大的关系。所以建立科学的，规范的的数据库是需要满足一些</p>\r\n\r\n<p>规范的来优化数据数据存储方式。在关系型数据库中这些规范就可以称为范式。</p>\r\n\r\n<p>什么是三大范式：</p>\r\n\r\n<p>第一范式：当关系模式R的所有属性都不能在分解为更基本的数据单位时，称R是满足第一范式的，简记为1NF。满足第一范式是关系模式规范化的最低要</p>\r\n\r\n<p>求，否则，将有很多基本操作在这样的关系模式中实现不了。</p>\r\n\r\n<p>第二范式：如果关系模式R满足第一范式，并且R得所有非主属性都完全依赖于R的每一个候选关键属性，称R满足第二范式，简记为2NF。</p>\r\n\r\n<p>第三范式：设R是一个满足第一范式条件的关系模式，X是R的任意属性集，如果X非传递依赖于R的任意一个候选关键字，称R满足第三范式，简记为3NF.</p>\r\n\r\n<p><strong>注：</strong>关系实质上是一张二维表，其中每一行是一个元组，每一列是一个属性</p>\r\n\r\n<h1>理解三大范式</h1>\r\n\r\n<p><strong>第一范式</strong></p>\r\n\r\n<p>&nbsp; &nbsp;1、每一列属性都是不可再分的属性值，确保每一列的原子性</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp;2、两列的属性相近或相似或一样，尽量合并属性一样的列，确保不产生冗余数据。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://images0.cnblogs.com/i/398358/201404/152011383691247.jpg\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://images0.cnblogs.com/i/398358/201404/152014068226693.jpg\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>如果需求知道那个省那个市并按其分类，那么显然第一个表格是不容易满足需求的，也不符合第一范式。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://images0.cnblogs.com/i/398358/201404/152046415888868.jpg\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://images0.cnblogs.com/i/398358/201404/152048565105883.jpg\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>显然第一个表结构不但不能满足足够多物品的要求，还会在物品少时产生冗余。也是不符合第一范式的。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>第二范式</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>每一行的数据只能与其中一列相关，即一行数据只做一件事。只要数据列中出现数据重复，就要把表拆分开来。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://images0.cnblogs.com/i/398358/201404/152117476509108.jpg\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>一个人同时订几个房间，就会出来一个订单号多条数据，这样子联系人都是重复的，就会造成数据冗余。我们应该把他拆开来。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://images0.cnblogs.com/i/398358/201404/152122561501994.jpg\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://images0.cnblogs.com/i/398358/201404/152123046973516.jpg\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>这样便实现啦一条数据做一件事，不掺杂复杂的关系逻辑。同时对表数据的更新维护也更易操作。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>第三范式</strong></p>\r\n\r\n<p>&nbsp;数据不能存在传递关系，即没个属性都跟主键有直接关系而不是间接关系。像：a--&gt;b--&gt;c &nbsp;属性之间含有这样的关系，是不符合第三范式的。</p>\r\n\r\n<p>比如Student表（学号，姓名，年龄，性别，所在院校，院校地址，院校电话）</p>\r\n\r\n<p>这样一个表结构，就存在上述关系。 学号--&gt;&nbsp;所在院校 --&gt; (院校地址，院校电话)</p>\r\n\r\n<p>这样的表结构，我们应该拆开来，如下。</p>\r\n\r\n<p>（学号，姓名，年龄，性别，所在院校）--（所在院校，院校地址，院校电话）</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>最后：</strong></p>\r\n\r\n<p>三大范式只是一般设计数据库的基本理念，可以建立冗余较小、结构合理的数据库。如果有特殊情况，当然要特殊对待，数据库设计最重要的是看需求跟性能，需求&gt;性能&gt;表结构。所以不能一味的去追求范式建立数据库。</p>',1,'2019-04-11 08:42:00.000000',3,'RexDu',0,NULL),(22,'Django模板过滤器','article/2019/09/3838516c66c266a4fa56ed784d24c331.jpg',1,'模板过滤器  作用：对变量进行过滤。在真正渲染出来之前，过滤器会根据功能处理好变量，然后得出结果后再替换掉原来的变量展示出来。','<p>知识点：</p>\r\n\r\n<ol>\r\n	<li>基本概念</li>\r\n	<li>常用的过滤器</li>\r\n	<li>过滤器例子</li>\r\n	<li>关于自动转义</li>\r\n</ol>\r\n\r\n<p>模板过滤器</p>\r\n\r\n<p>作用：对变量进行过滤。在真正渲染出来之前，过滤器会根据功能处理好变量，然后得出结果后再替换掉原来的变量展示出来。</p>\r\n\r\n<p>语法：{{fruits|lower}}</p>\r\n\r\n<p>管道符号进行链式调用，比如实现一个功能，先把所有字符变成小写，把第一个字符转换成大写。</p>\r\n\r\n<p>语法：{{fruits|lower|capfirst}}</p>\r\n\r\n<p>使用参数:过滤器可以使用参数，在过滤器名称后面使用冒号&rdquo;:&rdquo;再加上参数，比如要把一个字符串中所有的空格去掉，则可以使用cut过滤器,</p>\r\n\r\n<p>语法如下: {{fruits|cut:&quot; &quot;}}</p>\r\n\r\n<p>注意：使用参数的时候，冒号和参数之间不能有任何空格，一定要紧挨着。</p>\r\n\r\n<p>过滤器参数,可以使用变量.</p>\r\n\r\n<p>字符串相加，数字相加，列表相加，如果失败，将会返回一个空字符串。</p>\r\n\r\n<p>Django常用的过滤器</p>\r\n\r\n<pre>\r\n1、 add ：字符串相加，数字相加，列表相加，如果失败，将会返回一个空字符串。\r\n2、default：提供一个默认值，在这个值被django认为是False的时候使用。比如：空字符串、None。区别于default_if_none，这个只有在变量为None的时候才使用默认值。\r\n3、first：返回列表中的第一个值。\r\n4、last：返回列表中的最后一个值。\r\n5、date：格式化日期和时间。\r\n6、time：格式化时间。\r\n7、join：跟python中的join一样的用法。\r\n8、length：返回字符串或者是数组的长度。\r\n9、length_is：字符串或者是数组的长度是否是指定的值。\r\n10、lower：把所有字符串都编程小写。\r\n11、truncatechars：根据后面给的参数，截断字符，如果超过了用&hellip;表示。\r\n12、truncatewords：同truncatechars，这个是以一个单词为单位进行截断。\r\n以上两个有xxx_html类型的，针对html，截断标签中的字符，而不会截断标签。\r\n13、capfirst：首字母大写。\r\n14、slice：切割列表。用法跟python中的切片操作是一样的，区间是前闭合后开放。\r\n15、striptags：去掉所有的html标签。\r\n16、safe：关闭变量的自动转义\r\n17、floatformat：浮点数格式化。\r\n</pre>\r\n\r\n<p>date和time过滤器格式</p>\r\n\r\n<pre>\r\nY：四位数的年。如：1999\r\ny：两位数的年。如：99\r\nm：两位数的月。如：01，09\r\nn：一位数的月。如：1，9，12\r\nd：两位数的日。如：01,09,31\r\nj：一位数的日。如：1,9,31\r\ng：12小时制的一位数的小时。如：1，9，12\r\nG：24小时制的一位数小时。如：0，8，23\r\nh：12小时制的两位数的小时。如：01，09，12\r\nH：24小时制的两位数的小时。如：01,13,24\r\ni：分钟。从00-59\r\ns：秒。从00-59\r\n</pre>\r\n\r\n<p>过滤器例子：</p>\r\n\r\n<p>新建一个名为movie的APP.</p>\r\n\r\n<pre>\r\n{# movie/templates/movie/home.html #}\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html lang=&quot;en&quot;&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\r\n    &lt;title&gt;home&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    这是没做处理的变量：{{ test }}&lt;br&gt;\r\n    这是设置了默认值的变量：{{ xx|default:&#39;xxxxxx&#39; }}&lt;br&gt;\r\n    这是设置了只有为None时才使用默认值的变量：{{ xx|default_if_none:&#39;xxxxxx&#39; }}&lt;br&gt;\r\n    这是变为小写后的变量：{{ test|lower }}&lt;br&gt;\r\n    这是先变成小写再将首字母大写后的变量：{{ test|lower|capfirst}}&lt;br&gt;\r\n    这是两个数字变量相加：{{ num1|add:num2 }}&lt;br&gt;\r\n    这是两个字符串变量相加：{{ test|add:xx }}&lt;br&gt;\r\n    这是列表变量的第一个元素：{{ list|first }}&lt;br&gt;\r\n    这是列表变量的最后一个元素：{{ list|last }}&lt;br&gt;\r\n    这是默认的data日期时间格式：{{ now|date }}&lt;br&gt;\r\n    这是默认的time时间格式：{{ now|time }}&lt;br&gt;\r\n    这是data过滤器的年月日24小时制时间格式：{{ now|date:&#39;Y/m/d/H:i:s &#39; }}&lt;br&gt;\r\n    这是time过滤器的年月日12小时制时间格式：{{ now|time:&#39;h:i:s &#39; }}&lt;br&gt;\r\n    这是字符串的join方法：{{ ls|join:&#39;xxx&#39; }}&lt;br&gt;\r\n    这是字符串的长度方法：{{ test|length }}&lt;br&gt;\r\n    这是列表的长度是否长度为4：{{ list|length_is:4 }}&lt;br&gt;\r\n    这是字符串只显示4个字符，其余省略(占3位)：{{ test|truncatechars:7 }}&lt;br&gt;\r\n    这是字符串只显示2个单词，其余省略(不占位)：{{ test|truncatewords:2 }}&lt;br&gt;\r\n    这是字符串切片：{{ test|slice:&#39;1:4&#39; }}&lt;br&gt;\r\n    这是列表切片：{{ list|slice:&#39;:2&#39; }}&lt;br&gt;\r\n    这是含html标签的字符串：{{ html }}&lt;br&gt;\r\n    这是去掉字符串中的html标签：{{ html|striptags }}&lt;br&gt;\r\n    这是关掉自动转义，使字符串中html标签生效：{{ html|safe }}&lt;br&gt;\r\n    这是没做处理的小数：{{ float }}&lt;br&gt;\r\n    这是保留了一位小数：{{ float|floatformat }}&lt;br&gt;\r\n    这是保留了两位位小数：{{ float|floatformat:&#39;2&#39; }}&lt;br&gt;  \r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n\r\n# movie/views.py\r\nfrom django.shortcuts import render\r\nfrom datetime import datetime\r\n\r\nls = [&#39;x&#39;,&#39;y&#39;,&#39;z&#39;]\r\ndef hello(request):\r\n    test = &#39;THIS IS A LIST!&#39;\r\n    return render(request,&#39;movie/home.html&#39;,\r\n                  context={&#39;test&#39;:test,\r\n                           &#39;xx&#39;:&#39;&#39;,\r\n                           &#39;num1&#39;:1,\r\n                           &#39;num2&#39;:2,\r\n                           &#39;list&#39;:ls,\r\n                           &#39;now&#39;:datetime.now,\r\n                           &#39;html&#39;:&#39;&lt;h1&gt;hello django!!!&lt;/h1&gt;&#39;,\r\n                           &#39;float&#39;:3.1415926,\r\n                           })\r\n</pre>\r\n\r\n<p>关于自动转义</p>\r\n\r\n<pre>\r\n什么是自动转义？\r\n自动转义是将变量的一些特殊字符，比如左箭头（&lt;）、右箭头（&gt;）转义成html代码，这样做的目的是为了处理一些不安全的变量。\r\n&lt;：转义成&amp;lt;\r\n&gt;：转义成&amp;gt;\r\n&lsquo;：转义成&amp;#39;\r\n&ldquo;：转义成&amp;quot;\r\n&amp;：转义成&amp;amp;</pre>',1,'2019-09-07 00:56:00.000000',4,'RexDu',2,NULL),(23,'vim常用命令总结 （转)','',0,'vim常用命令','<p>&nbsp;<strong><img alt=\"\" src=\"http://img.blog.csdn.net/20160712110935064?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" /></strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://images2015.cnblogs.com/blog/175824/201611/175824-20161123224659425-328736487.png\" /></strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>在命令状态下对当前行用== （连按=两次）, 或对多行用n==（n是自然数）表示自动缩进从当前行起的下面n行。你可以试试把代码缩进任意打乱再用n==排版，相当于一般IDE里的code format。使用gg=G可对整篇代码进行排版。</h3>\r\n\r\n<p><strong>&nbsp;</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>vim 选择文本，删除，复制，粘贴 &nbsp;</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>文本的选择，对于编辑器来说，是很基本的东西，也经常被用到，总结如下：<br />\r\n<br />\r\nv &nbsp; &nbsp;从光标当前位置开始，光标所经过的地方会被选中，再按一下v结束。&nbsp;<br />\r\n<br />\r\nV &nbsp; &nbsp;从光标当前行开始，光标经过的行都会被选中，再按一下Ｖ结束。&nbsp;<br />\r\n<br />\r\nCtrl + v &nbsp;&nbsp;从光标当前位置开始，选中光标起点和终点所构成的矩形区域，再按一下Ｃtrl + v结束。&nbsp;<br />\r\n<br />\r\nggVG&nbsp;选中全部的文本，&nbsp;其中gg为跳到行首，V选中整行，G末尾</p>\r\n\r\n<p><br />\r\n选中后就可以用编辑命令对其进行编辑，如&nbsp;<br />\r\nd &nbsp;&nbsp;删除&nbsp;<br />\r\n<br />\r\ny &nbsp;&nbsp;复制 （默认是复制到&quot;寄存器）&nbsp;<br />\r\n<br />\r\np &nbsp;粘贴 （默认从&quot;寄存器取出内容粘贴）&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&quot;+y &nbsp; &nbsp;复制到系统剪贴板(也就是vim的+寄存器）&nbsp;<br />\r\n<br />\r\n&quot;+p &nbsp;&nbsp;从系统剪贴板粘贴&nbsp;</p>\r\n\r\n<p>=============================================================</p>\r\n\r\n<p><strong>vim命令总结</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>1.删除字符<br />\r\n&nbsp;&nbsp;要删除一个字符，只需要将光标移到该字符上按下&quot;x&quot;。<br />\r\n<br />\r\n2.删除一行<br />\r\n&nbsp;&nbsp;删除一整行内容使用&quot;dd&quot;命令。删除后下面的行会移上来填补空缺。<br />\r\n<br />\r\n3.删除换行符<br />\r\n&nbsp;&nbsp;在Vim中你可以把两行合并为一行，也就是说两行之间的换行符被删除了：命令是&quot;J&quot;。<br />\r\n<br />\r\n4.撤销<br />\r\n&nbsp;&nbsp;如果你误删了过多的内容。显然你可以再输入一遍，但是命令&quot;u&quot;&nbsp;更简便，它可以撤消上一次的操作。<br />\r\n<br />\r\n5.重做<br />\r\n&nbsp;&nbsp;如果你撤消了多次，你还可以用CTRL-R(重做)来反转撤消的动作。换句话说，它是对撤消的撤消。撤消命令还有另一种形式，&quot;U&quot;命令，它一次撤消对一行的全部操作。第二次使用该命令则会撤消前一个&quot;U&quot;的操作。用&quot;u&quot;和CTRL-R你可以找回任何一个操作状态。<br />\r\n<br />\r\n6.追加<br />\r\n&nbsp; &quot;i&quot;命令可以在当前光标之前插入文本。<br />\r\n&nbsp; &quot;a&quot;命令可以在当前光标之后插入文本。<br />\r\n&nbsp; &quot;o&quot;命令可以在当前行的下面另起一行，并使当前模式转为Insert模式。<br />\r\n&nbsp; &quot;O&quot;命令(注意是大写的字母O)将在当前行的上面另起一行。<br />\r\n<br />\r\n7.使用命令计数<br />\r\n&nbsp;&nbsp;假设你要向上移动9行。这可以用&quot;kkkkkkkkk&quot;或&quot;9k&quot;来完成。事实上，很多命令都可以接受一个数字作为重复执行同一命令的次数。比如刚才的例子，要在行尾追加三个感叹号，当时用的命令是&quot;a!!!&quot;。另一个办法是用&quot;3a!&quot;命令。3说明该命令将被重复执行3次。同样，删除3个字符可以用&quot;3x&quot;。指定的数字要紧挨在它所要修饰的命令前面。<br />\r\n<br />\r\n8.退出<br />\r\n&nbsp;&nbsp;要退出Vim，用命令&quot;ZZ&quot;。该命令保存当前文件并退出Vim。<br />\r\n<br />\r\n9.放弃编辑<br />\r\n&nbsp;&nbsp;丢弃所有的修改并退出，用命令&quot;:q!&quot;。用&quot;:e!&quot;命令放弃所有修改并重新载入该文件的原始内容。<br />\r\n<br />\r\n10.以Word为单位的移动<br />\r\n&nbsp;&nbsp;使用&quot;w&quot;命令可以将光标向前移动一个word的首字符上；比如&quot;3w&quot;将光标向前移动3个words。&quot;b&quot;命令则将光标向后移动到前一个word的首字符上。<br />\r\n&nbsp; &quot;e&quot;命令会将光标移动到下一个word的最后一个字符。命令&quot;ge&quot;，它将光标移动到前一个word的最后一个字符上。、<br />\r\n<br />\r\n11.移动到行首或行尾<br />\r\n&nbsp; &quot;$&quot;命令将光标移动到当前行行尾。如果你的键盘上有一个键，它的作用也一样。&quot;^&quot;命令将光标移动到当前行的第一个非空白字符上。&quot;0&quot;命令则总是把光标移动到当前行的第一个字符上。键也是如此。&quot;$&quot;命令还可接受一个计数，如&quot;1$&quot;会将光标移动到当前行行尾，&quot;2$&quot;则会移动到下一行的行尾，如此类推。&quot;0&quot;命令却不能接受类似这样的计数，命令&quot;^&quot;前加上一个计数也没有任何效果。<br />\r\n<br />\r\n12.移动到指定字符上<br />\r\n&nbsp;&nbsp;命令&quot;fx&quot;在当前行上查找下一个字符x（向右方向），可以带一个命令计数&quot;F&quot;命令向左方向搜索。&quot;tx&quot;命令形同&quot;fx&quot;命令，只不过它不是把光标停留在被搜索字符上，而是在它之前的一个字符上。提示：&quot;t&quot;意为&quot;To&quot;。该命令的反方向版是&quot;Tx&quot;。这4个命令都可以用&quot;;&quot;来重复。以&quot;,&quot;也是重复同样的命令，但是方向与原命令的方向相反。<br />\r\n<br />\r\n13.以匹配一个括号为目的移动<br />\r\n&nbsp;&nbsp;用命令&quot;%&quot;跳转到与当前光标下的括号相匹配的那一个括号上去。如果当前光标在&quot;(&quot;上，它就向前跳转到与它匹配的&quot;)&quot;上，如果当前在&quot;)&quot;上，它就向后自动跳转到匹配的&quot;(&quot;上去.<br />\r\n<br />\r\n14.移动到指定行<br />\r\n&nbsp;&nbsp;用&quot;G&quot;命令指定一个命令计数，这个命令就会把光标定位到由命令计数指定的行上。比如&quot;33G&quot;就会把光标置于第33行上。没有指定命令计数作为参数的话, &quot;G&quot;会把光标定位到最后一行上。&quot;gg&quot;命令是跳转到第一行的快捷的方法。<br />\r\n&nbsp;&nbsp;另一个移动到某行的方法是在命令&quot;%&quot;之前指定一个命令计数比如&quot;50%&quot;将会把光标定位在文件的中间. &quot;90%&quot;跳到接近文件尾的地方。<br />\r\n&nbsp;&nbsp;命令&quot;H&quot;,&quot;M&quot;,&quot;L&quot;,分别将光标跳转到第一行，中间行，结尾行部分。<br />\r\n<br />\r\n15.告诉你当前的位置<br />\r\n&nbsp;&nbsp;使用CTRL-G命令。&quot;set number&quot;在每行的前面显示一个行号。相反关闭行号用命令&quot;:set nonumber&quot;。&quot;:set ruler&quot;在Vim窗口的右下角显示当前光标位置。<br />\r\n<br />\r\n16.滚屏<br />\r\n&nbsp; CTRL-U显示文本的窗口向上滚动了半屏。CTRL-D命令将窗口向下移动半屏。一次滚动一行可以使用CTRL-E(向上滚动)和CTRL-Y(向下滚动)。要向前滚动一整屏使用命令CTRL-F。另外CTRL-B是它的反向版。&quot;zz&quot;命令会把当前行置为屏幕正中央，&quot;zt&quot;命令会把当前行置于屏幕顶端，&quot;zb&quot;则把当前行置于屏幕底端.<br />\r\n<br />\r\n17.简单搜索<br />\r\n&nbsp; &quot;/string&quot;命令可用于搜索一个字符串。要查找上次查找的字符串的下一个位置,使用&quot;n&quot;命令。如果你知道你要找的确切位置是目标字符串的第几次出现，还可以在&quot;n&quot;之前放置一个命令计数。&quot;3n&quot;会去查找目标字符串的第3次出现。<br />\r\n&nbsp; &quot;?&quot;命令与&quot;/&quot;的工作相同，只是搜索方向相反.&quot;N&quot;命令会重复前一次查找，但是与最初用&quot;/&quot;或&quot;?&quot;指定的搜索方向相反。<br />\r\n&nbsp;&nbsp;如果查找内容忽略大小写，则用命令&quot;set ignorecase&quot;,&nbsp;返回精确匹配用命令&quot;set noignorecase&quot;&nbsp;。<br />\r\n<br />\r\n18.在文本中查找下一个word<br />\r\n&nbsp;&nbsp;把光标定位于这个word上然后按下&quot;*&quot;键。Vim将会取当前光标所在的word并将它作用目标字符串进行搜索。&quot;#&quot;命令是&quot;*&quot;的反向版。还可以在这两个命令前加一个命令计数:&quot;3*&quot;查找当前光标下的word的第三次出现。<br />\r\n<br />\r\n19.查找整个word<br />\r\n&nbsp;&nbsp;如果你用&quot;/the&quot;来查找Vim也会匹配到&quot;there&quot;。要查找作为独立单词的&quot;the&quot;使用如下命令：&quot;/the\\&gt;&quot;。&quot;\\&gt;&quot;是一个特殊的记法，它只匹配一个word的结束处。近似地，&quot;\\&lt;&quot;匹配到一个word的开始处。这样查找作为一个word的&quot;the&quot;就可以用:&quot;/\\&quot;。<br />\r\n<br />\r\n20.高亮显示搜索结果<br />\r\n&nbsp;&nbsp;开启这一功能用&quot;:set hlsearch&quot;，关闭这一功能：&quot;:set nohlsearch&quot;。如果只是想去掉当前的高亮显示，可以使用下面的命令：&quot;:nohlsearch&quot;(可以简写为noh)。<br />\r\n<br />\r\n21.匹配一行的开头与结尾<br />\r\n&nbsp;&nbsp; ^&nbsp;字符匹配一行的开头。$字符匹配一行的末尾。<br />\r\n&nbsp;&nbsp;&nbsp;所以&quot;/was$&quot;只匹配位于一行末尾的单词was，所以&quot;/^was&quot;只匹配位于一行开始的单词was。<br />\r\n<br />\r\n22.匹配任何的单字符<br />\r\n&nbsp; .这个字符可以匹配到任何字符。比如&quot;c.m&quot;可以匹配任何前一个字符是c，后一个字符是m的情况，不管中间的字符是什么。<br />\r\n<br />\r\n23.匹配特殊字符<br />\r\n&nbsp;&nbsp;放一个反斜杠在特殊字符前面。如果你查找&quot;ter。&quot;，用命令&quot;/ter\\。&quot;<br />\r\n<br />\r\n24.使用标记<br />\r\n&nbsp;&nbsp;当你用&quot;G&quot;命令从一个地方跳转到另一个地方时，Vim会记得你起跳的位置。这个位置在Vim中是一个标记。使用命令&quot; `` &quot;可以使你跳回到刚才的出发点。<br />\r\n&nbsp; ``命令可以在两点之间来回跳转。CTRL-O命令是跳转到你更早些时间停置光标的位置(提示:O意为older). CTRL-I则是跳回到后来停置光标的更新的位置(提示：I在键盘上位于O前面)。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;注:使用CTRL-I&nbsp;与按下键一样。<br />\r\n<br />\r\n25.具名标记<br />\r\n&nbsp;&nbsp;&nbsp;命令&quot;ma&quot;将当前光标下的位置名之为标记&quot;a&quot;。从a到z一共可以使用26个自定义的标记。要跳转到一个你定义过的标记，使用命令&quot; `marks &quot;marks就是定义的标记的名字。命令&quot; &#39;a &quot;使你跳转到a所在行的行首，&quot; `a &quot;会精确定位a所在的位置。命令：&quot;:marks&quot;用来查看标记的列表。<br />\r\n&nbsp;&nbsp;命令delm！删除所有标记。<br />\r\n<br />\r\n26.操作符命令和位移<br />\r\n&nbsp; &quot;dw&quot;命令可以删除一个word，&quot;d4w&quot;命令是删除4个word，依此类推。类似有&quot;d2e&quot;、&quot;d$&quot;。此类命令有一个固定的模式：操作符命令+位移命令。首先键入一个操作符命令。比如&quot;d&quot;是一个删除操作符。接下来是一个位移命。比如&quot;w&quot;。这样任何移动光标命令所及之处，都是命令的作用范围。<br />\r\n<br />\r\n27.改变文本<br />\r\n&nbsp;&nbsp;操作符命令是&quot;c&quot;，改变命令。它的行为与&quot;d&quot;命令类似，不过在命令执行后会进入Insert模式。比如&quot;cw&quot;改变一个word。或者，更准确地说，它删除一个word并让你置身于Insert模式。<br />\r\n&nbsp; &quot;cc&quot;命令可以改变整行。不过仍保持原来的缩进。<br />\r\n&nbsp; &quot;c$&quot;改变当前光标到行尾的内容。<br />\r\n&nbsp;&nbsp;快捷命令：x&nbsp;代表dl(删除当前光标下的字符)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X&nbsp;代表dh(删除当前光标左边的字符)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D&nbsp;代表d$(删除到行尾的内容)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C&nbsp;代表c$(修改到行尾的内容)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s&nbsp;代表cl(修改一个字符)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S&nbsp;代表cc(修改一整行)<br />\r\n&nbsp;&nbsp;命令&quot;3dw&quot;和&quot;d3w&quot;都是删除3个word。第一个命令&quot;3dw&quot;可以看作是删除一个word的操作执行3次；第二个命令&quot;d3w&quot;是一次删除3个word。这是其中不明显的差异。事实上你可以在两处都放上命令记数，比如，&quot;3d2w&quot;是删除两个word，重复执行3次，总共是6个word。<br />\r\n<br />\r\n28.替换单个字符<br />\r\n&nbsp; &quot;r&quot;命令不是一个操作符命令。它等待你键入下一个字符用以替换当前光标下的那个字符。&quot;r&quot;命令前辍以一个命令记数是将多个字符都替换为即将输入的那个字符。要把一个字符替换为一个换行符使用&quot;r&quot;。它会删除一个字符并插入一个换行符。在此处使用命令记数只会删除指定个数的字符：&quot;4r&quot;将把4个字符替换为一个换行符。<br />\r\n<br />\r\n29.重复改动<br />\r\n&nbsp; &quot;.&quot;命令会重复上一次做出的改动。&quot;.&quot;命令会重复你做出的所有修改，除了&quot;u&quot;命令CTRL-R和以冒号开头的命令。&quot;.&quot;需要在Normal模式下执行，它重复的是命令，而不是被改动的内容，<br />\r\n<br />\r\n30.Visual模式<br />\r\n&nbsp;&nbsp;按&quot;v&quot;可以进入Visual模式。移动光标以覆盖你想操纵的文本范围。同时被选中的文本会以高亮显示。最后键入操作符命令。<br />\r\n<br />\r\n31.移动文本<br />\r\n&nbsp;&nbsp;以&quot;d&quot;或&quot;x&quot;这样的命令删除文本时，被删除的内容还是被保存了起来。你还可以用p命令把它取回来。&quot;P&quot;命令是把被去回的内容放在光标之前，&quot;p&quot;则是放在光标之后。对于以&quot;dd&quot;删除的整行内容，&quot;P&quot;会把它置于当前行的上一行。&quot;p&quot;则是至于当前行的后一行。也可以对命令&quot;p&quot;和&quot;P&quot;命令使用命令记数。它的效果是同样的内容被取回指定的次数。这样一来&quot;dd&quot;之后的&quot;3p&quot;就可以把被删除行的3&nbsp;份副本放到当前位置。<br />\r\n&nbsp;&nbsp;命令&quot;xp&quot;将光标所在的字符与后一个字符交换。<br />\r\n<br />\r\n<strong>32.</strong><strong>复制文本（VIM编辑器内复制）</strong><br />\r\n&nbsp; &quot;y&quot;操作符命令会把文本复制到一个寄存器3中。然后可以用&quot;p&quot;命令把它取回。因为&quot;y&quot;是一个操作符命令，所以你可以用&quot;yw&quot;来复制一个word.&nbsp;同样可以使用命令记数。如下例中用&quot;y2w&quot;命令复制两个word，&quot;yy&quot;命令复制一整行，&quot;Y&quot;也是复制整行的内容，复制当前光标至行尾的命令是&quot;y$&quot;。<br />\r\n<br />\r\n33.文本对象<br />\r\n&nbsp; &quot;diw&quot;&nbsp;删除当前光标所在的word(不包括空白字符) &quot;daw&quot;&nbsp;删除当前光标所在的word(包括空白字符)<br />\r\n<br />\r\n34.快捷命令<br />\r\n&nbsp; x&nbsp;删除当前光标下的字符(&quot;dl&quot;的快捷命令)<br />\r\n&nbsp; X&nbsp;删除当前光标之前的字符(&quot;dh&quot;的快捷命令)<br />\r\n&nbsp; D&nbsp;删除自当前光标至行尾的内容(&quot;d$&quot;的快捷命令)<br />\r\n&nbsp; dw&nbsp;删除自当前光标至下一个word的开头<br />\r\n&nbsp; db&nbsp;删除自当前光标至前一个word的开始<br />\r\n&nbsp; diw&nbsp;删除当前光标所在的word(不包括空白字符)<br />\r\n&nbsp; daw&nbsp;删除当前光标所在的word(包括空白字符)<br />\r\n&nbsp; dG&nbsp;删除当前行至文件尾的内容<br />\r\n&nbsp; dgg&nbsp;删除当前行至文件头的内容<br />\r\n&nbsp;&nbsp;如果你用&quot;c&quot;命令代替&quot;d&quot;这些命令就都变成更改命令。使用&quot;y&quot;就是yank命令，如此类推。<br />\r\n<br />\r\n35.编辑另一个文件<br />\r\n&nbsp;&nbsp;用命令&quot;:edit foo.txt&quot;，也可简写为&quot;:e foo.txt&quot;。<br />\r\n<br />\r\n36.文件列表<br />\r\n&nbsp;&nbsp;可以在启动Vim时就指定要编辑多个文件，用命令&quot;vim one.c two.c three.c&quot;。Vim将在启动后只显示第一个文件，完成该文件的编辑后，可以用令：&quot;:next&quot;或&quot;:n&quot;要保存工作成果并继续下一个文件的编辑，命令：&quot;:wnext&quot;或&quot;:wn&quot;可以合并这一过程。<br />\r\n<br />\r\n37.显示当前正在编辑的文件<br />\r\n&nbsp;&nbsp;用命令&quot;:args&quot;。<br />\r\n<br />\r\n38.移动到另一个文件<br />\r\n&nbsp;&nbsp;用命令&quot;:previous&quot; &quot;:prev&quot;回到上一个文件,合并保存步骤则是&quot;:wprevious&quot; &quot;:wprev&quot;。要移到最后一个文件&quot;:last&quot;,到第一个&quot;:first&quot;.不过没有&quot;:wlast&quot;或者&quot;:wfirst&quot;这样的命令。可以在&quot;:next&quot;和&quot;:previous&quot;命令前面使用一个命令计数。<br />\r\n<br />\r\n39.编辑另一个文件列表<br />\r\n&nbsp;&nbsp;不用重新启动Vim，就可以重新定义一个文件列表。命令&quot;:args five.c six.c seven.h&quot;定义了要编辑的三个文件。<br />\r\n<br />\r\n39.自动存盘<br />\r\n&nbsp;&nbsp;命令&quot;:set autowrite&quot;,&quot;set aw&quot;。自动把内容写回文件:&nbsp;如果文件被修改过，在每个:next、:rewind、:last、:first、:previous、:stop、:suspend、:tag、:!、:make、CTRL-]&nbsp;和&nbsp;CTRL-^命令时进行。<br />\r\n&nbsp;&nbsp;命令&quot;:set autowriteall&quot;,&quot;set awa&quot;。和&nbsp;&#39;autowrite&#39;&nbsp;类似，但也适用于&quot;:edit&quot;、&quot;:enew&quot;、&quot;:quit&quot;、&quot;:qall&quot;、&quot;:exit&quot;、&quot;:xit&quot;、&quot;:recover&quot;&nbsp;和关闭&nbsp;Vim&nbsp;窗口。置位本选项也意味着&nbsp;Vim&nbsp;的行为就像打开&nbsp;&#39;autowrite&#39;&nbsp;一样。<br />\r\n<br />\r\n40.切换到另一文件<br />\r\n&nbsp;&nbsp;要在两个文件间快速切换，使用CTRL-^。<br />\r\n<br />\r\n41.文件标记<br />\r\n&nbsp;&nbsp;以大写字母命名的标记。它们是全局标记，它们可以用在任何文件中。比如，正在编辑&quot;fab1.<a href=\"http://lib.csdn.net/base/javaee\" target=\"_blank\" title=\"Java EE知识库\">Java</a>&quot;,用命令&quot;50%mF&quot;在文件的中间设置一个名为F的标记。然后在&quot;fab2.java&quot;文件中，用命令&quot;GnB&quot;在最后一行设置名为B的标记。在可以用&quot;F&quot;命令跳转到文件&quot;fab1.java&quot;的半中间。或者编辑另一个文件，&quot;&#39;B&quot;命令会再把你带回文件&quot;fab2.java&quot;的最后一行。<br />\r\n&nbsp;&nbsp;要知道某个标记所代表的位置是什么，可以将该标记的名字作为&quot;marks&quot;命令的参数&quot;:marks M&quot;或者连续跟上几个参数&quot;:marks MJK&quot;<br />\r\n&nbsp;&nbsp;可以用CTRL-O和CTRL-I可以跳转到较早的位置和靠后的某位置。<br />\r\n<br />\r\n42.查看文件<br />\r\n&nbsp;&nbsp;仅是查看文件，不向文件写入内容，可以用只读形式编辑文件。用命令：<br />\r\nvim -R file。如果是想强制性地避免对文件进行修改，可以用命令：<br />\r\nvim -M file。<br />\r\n<br />\r\n43.更改文件名<br />\r\n&nbsp;&nbsp;将现有文件存成新的文件，用命令&quot;:sav(eas) move.c&quot;。如果想改变当前正在编辑的文件名，但不想保存该文件，就可以用命令：&quot;:f(ile) move.c&quot;。<br />\r\n<br />\r\n44.分割一个窗口<br />\r\n&nbsp;&nbsp;打开一个新窗口最简单的办法就是使用命令：&quot;:split&quot;。CTRL-W&nbsp;命令可以切换当前活动窗口。<br />\r\n<br />\r\n45.关闭窗口<br />\r\n&nbsp;&nbsp;用命令：&quot;close&quot;.可以关闭当前窗口。实际上,任何退出文件编辑的命令&quot;:quit&quot;和&quot;ZZ&quot;都会关闭窗口，但是用&quot;:close&quot;可以阻止你关闭最后一个Vim，以免以意外地整个关闭了Vim。<br />\r\n<br />\r\n46.关闭除当前窗口外的所有其他窗口<br />\r\n&nbsp;&nbsp;用命令：&quot;:only&quot;,关闭除当前窗口外的所有其它窗口。如果这些窗口中有被修改过的，你会得到一个错误信息，同时那个窗口会被留下来。<br />\r\n<br />\r\n47.为另一个文件分隔出一个窗口<br />\r\n&nbsp;&nbsp;命令&quot;:split two.c&quot;可以打开第二个窗口同时在新打开的窗口中开始编辑作为<br />\r\n参数的文件。如果要打开一个新窗口并开始编辑一个空的缓冲区，使用命令:&quot;:new&quot;。<br />\r\n<br />\r\n48.垂直分割<br />\r\n&nbsp;&nbsp;用命令&quot;:vsplit或：:vsplit two.c&quot;。同样有一个对应的&quot;:vnew&quot;命令，用于垂直分隔窗口并在其中打开一个新的空缓冲区。<br />\r\n<br />\r\n49.切换窗口<br />\r\n&nbsp; CTRL-W h&nbsp;到左边的窗口<br />\r\n&nbsp; CTRL-W j&nbsp;到下面的窗口<br />\r\n&nbsp; CTRL-W k&nbsp;到上面的窗口<br />\r\n&nbsp; CTRL-W l&nbsp;到右边的窗口<br />\r\n&nbsp; CTRL-W t&nbsp;到顶部窗口<br />\r\n&nbsp; CTRL-W b&nbsp;到底部窗口<br />\r\n<br />\r\n50.针对所有窗口操作的命令<br />\r\n&nbsp; &quot;:qall&quot;放弃所有操作并退出，&quot;:wall&quot;保存所有，&quot;:wqall&quot;保存所有并退出。<br />\r\n<br />\r\n51.为每一个文件打开一个窗口<br />\r\n&nbsp;&nbsp;使用&quot;-o&quot;选项可以让Vim为每一个文件打开一个窗口：<br />\r\n&quot;vim -o one.txt two.txt three.txt&quot;。<br />\r\n<br />\r\n52.使用vimdiff查看不同<br />\r\n&nbsp; &quot;vimdiff main.c~ main.c&quot;,另一种进入diff模式的办法可以在Vim运行中操作。编辑文件&quot;main.c&quot;，然后打开另一个分隔窗口显示其不同:<br />\r\n&nbsp; &quot;:edit main.c&quot;<br />\r\n&nbsp; &quot;:vertical diffpatch main.c.diff&quot;。<br />\r\n53.页签<br />\r\n&nbsp;&nbsp;&nbsp;命令&quot;:tabe(dit) thatfile&quot;在一个窗口中打开&quot;thatfile&quot;，该窗口占据着整个的Vim显示区域。命令&quot;:tab split/new&quot;结果是新建了一个拥有一个窗口的页签。以用&quot;gt&quot;命令在不同的页签间切换。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>本文转自：</strong>&nbsp;<a href=\"http://fableking.iteye.com/blog/1141518\" target=\"_blank\">http://fableking.iteye.com/blog/1141518</a></p>\r\n\r\n<p>---------------------------------------------------------------------------------------------------------</p>\r\n\r\n<p>这是我总结的一些基本用法,可能对初用者会有帮助,独乐乐不如众乐乐,是吧!<br />\r\n<br />\r\n说明：以下黑色为vi和vim均有的一般功能，而红色为Vim（Vi Improved）所特有功能。Vim一般的Unix和<a href=\"http://lib.csdn.net/base/linux\" target=\"_blank\" title=\"Linux知识库\">Linux</a>下均有安装。<br />\r\n 三种状态<br />\r\nCommand： 任何输入都会作为编辑命令，而不会出现在屏幕上，任何输入都引起立即反映<br />\r\nInsert：&nbsp; 任何输入的数据都置于编辑寄存器，按ESC，可跳回command方式<br />\r\nEscape：&nbsp; 以&ldquo;：&rdquo;或者&ldquo;/&rdquo;为前导的指令，出现在屏幕的最下一行，任何输入都被当成特别指令。<br />\r\n 离开vi<br />\r\n:q!&nbsp;&nbsp;&nbsp; 离开vi，并放弃刚在缓冲区内编辑的内容。<br />\r\n:wq&nbsp;&nbsp; 将缓冲区内的资料写入磁盘中，并离开vi。<br />\r\n:x&nbsp;&nbsp;&nbsp; 同wq。<br />\r\n（注意&mdash;&mdash; :X 是文件加密，一定要与:x存盘退出相区别）<br />\r\n 进入输入模式<br />\r\na (append)&nbsp; 由游标之后加入资料。<br />\r\nA&nbsp;&nbsp;&nbsp; 由该行之末加入资料。<br />\r\ni (insert)&nbsp;&nbsp; 由游标之前加入资料。<br />\r\nI&nbsp;&nbsp;&nbsp; 由该行之首加入资料。<br />\r\no (open)&nbsp;&nbsp; 新增一行於该行之下供输入资料之用。<br />\r\nO&nbsp;&nbsp;&nbsp; 新增一行於该行之上供输入资料之用。<br />\r\n 删除与修改<br />\r\nx&nbsp;&nbsp;&nbsp; 删除游标所在该字元。<br />\r\nX&nbsp;&nbsp;&nbsp; 删除游标所在之前一字元。<br />\r\nr&nbsp;&nbsp;&nbsp; 用接於此指令之后的字元取代(replace)游标所在字元。如：ra将游标所在字元以 a 取代之。<br />\r\nR&nbsp;&nbsp;&nbsp; 进入取代状态，直到《ESC》为止。<br />\r\ns&nbsp;&nbsp;&nbsp; 删除游标所在之字元，并进入输入模式直到《ESC》。<br />\r\nS&nbsp;&nbsp;&nbsp; 删除游标所在之该行资料，并进入输入模式直到《ESC》。<br />\r\n 光标的移动<br />\r\nm&lt;a-z&gt;&nbsp; 设置书签&lt;a-z&gt;<br />\r\n&lsquo;&lt;a-z&gt;&nbsp; 移至书签&lt;a-z&gt;处<br />\r\n0&nbsp;&nbsp;&nbsp; 移至该行之首<br />\r\n$&nbsp;&nbsp;&nbsp; 移至该行之末。<br />\r\ne&nbsp;&nbsp; 移动到下个字的最後一个字母<br />\r\nw&nbsp;&nbsp;&nbsp; 移动到下个字的第一个字母。<br />\r\nb&nbsp;&nbsp;&nbsp; 移动到上个字的第一个字母。<br />\r\n^&nbsp;&nbsp;&nbsp; 移至该行的第一个字元处。<br />\r\nH&nbsp;&nbsp;&nbsp; 移至视窗的第一行。<br />\r\nM&nbsp;&nbsp;&nbsp; 移至视窗的中间那行。<br />\r\nL&nbsp;&nbsp;&nbsp; 移至视窗的最后一行。<br />\r\nG&nbsp;&nbsp;&nbsp; 移至该文件的最后一行。<br />\r\n+&nbsp;&nbsp;&nbsp; 移至下一列的第一个字元处。<br />\r\n- 移至上一列的第一个字元处。<br />\r\n:n&nbsp;&nbsp;&nbsp; 移至该文件的第 n 列。<br />\r\nn+&nbsp;&nbsp;&nbsp; 移至游标所在位置之后的第 n 列。<br />\r\nn-&nbsp;&nbsp;&nbsp; 移至游标所在位置之前的第 n 列。<br />\r\n&lt;Ctrl&gt;&lt;g&gt;&nbsp; 显示该行之行号、文件名称、文件中最末行之行号、游标所在行号占总行号之百分比。<br />\r\n<br />\r\n（Vim） 光标移动基本用法小解：<br />\r\n(这只要组合上边的功能就可以明白了，不用再一一讲解了吧！)<br />\r\nge&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp; w&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e<br />\r\n&larr;&nbsp;&nbsp;&nbsp; &larr;&nbsp;&nbsp;&nbsp; ---&rarr;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&rarr;<br />\r\nThis is-a&nbsp; line,&nbsp; with special/separated/words (and some more).<br />\r\n&larr;-&nbsp; &larr;--&nbsp;&nbsp;&nbsp; -----------------&rarr;&nbsp;&nbsp;&nbsp;&nbsp; ---&rarr;<br />\r\nGE&nbsp;&nbsp; B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; W&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; E<br />\r\n<br />\r\n 视窗的移动<br />\r\n&lt;Ctrl&gt;&lt;f&gt;&nbsp; 视窗往下卷一页。<br />\r\n&lt;Ctrl&gt;&lt;b&gt;&nbsp; 视窗往上卷一页。<br />\r\n&lt;Ctrl&gt;&lt;d&gt;&nbsp; 视窗往下卷半页。<br />\r\n&lt;Ctrl&gt;&lt;u&gt;&nbsp; 视窗往上卷半页。<br />\r\n&lt;Ctrl&gt;&lt;e&gt;&nbsp; 视窗往下卷一行。<br />\r\n&lt;Ctrl&gt;&lt;y&gt;&nbsp; 视窗往上卷一行。<br />\r\n 剪切、复制、删除<br />\r\nOperator + Scope = command<br />\r\n Operator<br />\r\nd&nbsp;&nbsp;&nbsp; 剪切<br />\r\ny&nbsp;&nbsp;&nbsp; 复制。<br />\r\np&nbsp;&nbsp;&nbsp; 粘帖，与 d 和 y 配和使用。可将最后d或y的资料放置於游标所在位置之行列下。<br />\r\nc&nbsp;&nbsp;&nbsp; 修改，类似delete与insert的组和。删除一个字组、句子等之资料，并插入新建资料。<br />\r\n Scope<br />\r\ne&nbsp;&nbsp;&nbsp; 由游标所在位置至该字串的最后一个字元。<br />\r\nw&nbsp;&nbsp;&nbsp; 由游标所在位置至下一个字串的第一个字元。<br />\r\nb&nbsp;&nbsp;&nbsp; 由游标所在位置至前一个字串的第一个字元。<br />\r\n$&nbsp;&nbsp;&nbsp; 由游标所在位置至该行的最后一个字元。<br />\r\n0&nbsp;&nbsp;&nbsp; 由游标所在位置至该行的第一个字元。<br />\r\n 整行动作<br />\r\ndd&nbsp;&nbsp;&nbsp; 删除整行。<br />\r\nD&nbsp;&nbsp;&nbsp; 以行为单位，删除游标后之所有字元。<br />\r\ncc&nbsp;&nbsp;&nbsp; 修改整行的内容。<br />\r\nyy&nbsp;&nbsp; 使游标所在该行复制到记忆体缓冲区。<br />\r\n 取消前一动作(Undo)<br />\r\nu&nbsp;&nbsp;&nbsp; 恢复最后一个指令之前的结果。<br />\r\nU&nbsp;&nbsp;&nbsp; 恢复游标该行之所有改变。<br />\r\n(vim) u&nbsp;&nbsp; 可以多次撤消指令，一次撤消一个操作，直至本次操作开始为止。<br />\r\n(vim) Ctrl+r 可以恢复撤消前内容，按多次可恢复多次。<br />\r\n 查找与替换<br />\r\n/字串&nbsp;&nbsp; 往游标之后寻找该字串。<br />\r\n?字串&nbsp;&nbsp; 往游标之前寻找该字串。<br />\r\nn&nbsp;&nbsp;&nbsp; 往下继续寻找下一个相同的字串。<br />\r\nN&nbsp;&nbsp;&nbsp; 往上继续寻找下一个相同的字串。<br />\r\n%&nbsp;&nbsp; 查找&ldquo;(&rdquo;，&ldquo;)&rdquo;，&ldquo;{&rdquo;，&ldquo;}&rdquo;的配对符。<br />\r\ns&nbsp;&nbsp; 搜寻某行列范围。<br />\r\ng&nbsp;&nbsp; 搜寻整个编辑缓冲区的资料。<br />\r\n:1,$s/old/new/g 将文件中所有的『old』改成『new』。<br />\r\n:10,20s/^/ /&nbsp; 将第10行至第20行资料的最前面插入5个空白。<br />\r\n(vim)&nbsp;<br />\r\n/字符串&nbsp;&nbsp; 后边输入查询内容可保存至缓冲区中，可用&uarr;&darr;进行以往内容选择。<br />\r\n另外：将光标移动在选定单词下方按*，则可以选中此单词作为查询字符，可以避免输入一长串字符的麻烦。<br />\r\n (vim) 大小写替换<br />\r\n首先用按v开启选择功能，然后用&uarr;&darr;&larr;&rarr;键来选定所要替换的字符，若是小写变大写，则按U;反之按u;<br />\r\n如果是选择单词，则可以在按v后，按w，最后按U/u,这样就可以将字符随意的改变大小写了，而不用删除后重新敲入。<br />\r\n<br />\r\n 资料的连接<br />\r\nJ&nbsp;&nbsp;&nbsp; 句子的连接。将游标所在之下一行连接至游标该行的后面。<br />\r\n 环境的设定<br />\r\n:set all&nbsp; 可设置的环境变量列表<br />\r\n:set&nbsp;&nbsp; 环境变量的当前值<br />\r\n:set nu&nbsp;&nbsp; 设定资料的行号。<br />\r\n:set nonu&nbsp; 取消行号设定。<br />\r\n:set ai&nbsp;&nbsp; 自动内缩。<br />\r\n:set noai&nbsp;&nbsp; 取消自动内缩。<br />\r\n(vim)&nbsp;<br />\r\n:set ruler&nbsp; 会在屏幕右下角显示当前光标所处位置，并随光移动而改变，占用屏幕空间较小，使用也比较方便，推荐使用。<br />\r\n:set hlsearch 在使用查找功能时，会高亮显示所有匹配的内容。<br />\r\n:set nohlsearch&nbsp; 关闭此功能。<br />\r\n:set incsearch&nbsp; 使Vim在输入字符串的过程中，光标就可定位显示匹配点。<br />\r\n:set nowrapscan 关闭查找自动回环功能，即查找到文件结尾处，结束查找；默认状态是自动回环<br />\r\n<br />\r\n ex指令<br />\r\n 读写资料<br />\r\n:10,20w test&nbsp; 将第10行至第20行的资料写入test文件。<br />\r\n:10,20w&gt;&gt;test 将第10行至第20行的资料加在test文件之后。<br />\r\n:r test&nbsp;&nbsp; 将test文件的资料读入编辑缓冲区的最后。<br />\r\n:e [filename] 编辑新的文件。<br />\r\n:e! [filename] 放弃当前修改的文件，编辑新的文件。<br />\r\n:sh&nbsp;&nbsp; 进入shell环境，使用exit退出，回到编辑器中。<br />\r\n<br />\r\n:!cmd&nbsp; 运行命令cmd后，返回到编辑器中。<br />\r\n 删除、复制及搬移<br />\r\n:10,20d&nbsp;&nbsp; 删除第10行至第20行的资料。<br />\r\n:10d&nbsp;&nbsp; 删除第10行的资料。<br />\r\n:%d&nbsp;&nbsp; 删除整个编辑缓冲区。<br />\r\n:10,20co30&nbsp; 将第10行至第20行的资料复制至第30行之后。<br />\r\n:10,20mo30&nbsp; 将第10行至第20行的资料搬移至第30行之后。</p>',3,'2019-09-09 08:28:00.000000',0,'RexDu',0,NULL),(24,'磁盘阵列RAID原理、种类及性能优缺点对比','',0,'磁盘阵列（Redundant Arrays of Independent Disks，RAID）','<p>1. 存储的数据一定分片；</p>\r\n\r\n<p>2. 分基于软件的软RAID（如mdadm）和基于硬件的硬RAID（如RAID卡）；</p>\r\n\r\n<p>3. RAID卡如同网卡一样有集成板载的也有独立的(PCI-e)，一般独立RAID卡性能相对较好，淘宝一搜便可看到他们的原形；</p>\r\n\r\n<p>4. 现在基本上服务器都原生硬件支持几种常用的RAID;</p>\r\n\r\n<p>5. 当然还有更加高大上的专用于存储的磁盘阵列柜产品，有专用存储技术，规格有如12/24/48盘一柜等，盘可选机械/固态，3.5/2.5寸等。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td colspan=\"10\" style=\"vertical-align:top\">\r\n			<p>&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"vertical-align:top\">\r\n			<p><strong>级别</strong></p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p><strong>特征</strong></p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p><strong>原理</strong></p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p><strong>单元</strong></p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p><strong>冗余</strong></p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p><strong>性能</strong></p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p><strong>利用率</strong></p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p><strong>最多坏</strong></p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p><strong>用途</strong></p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p><strong>缺陷</strong></p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"vertical-align:top\">\r\n			<p>RAID0</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>条带</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>分片分散存入2块硬盘</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>2</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>否</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>读写速度2倍</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>100%</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>0/2</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>SWAP/TMP</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>不冗余，数据难恢复</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"vertical-align:top\">\r\n			<p>RAID1</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>镜像</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>相同数据存入2块硬盘</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>2</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>是</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>写速度不变</p>\r\n\r\n			<p>读速度2倍</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>50%</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>1/2</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>数据备份</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>读写速度没加，利用率低</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"vertical-align:top\">\r\n			<p>RAID4</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>校验</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>分片分散存入2块硬盘</p>\r\n\r\n			<p>校验码存入第3块硬盘</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>3</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>是</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>读写速度2倍</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>2/3=66%</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>1/3</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>用的很少</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>1. 坏盘时另外2块需要重新计算还原坏盘数据</p>\r\n\r\n			<p>2. 校验码盘压力大成为瓶颈</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"vertical-align:top\">\r\n			<p>RAID5</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>校验</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>分片和校验码混合存储</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>3</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>是</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>读写速度2倍</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>2/3=66%</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>1/3</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>用的不多</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>坏盘时另外2块需要重新计算还原坏盘数据</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"vertical-align:top\">\r\n			<p>RAID6</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>校验</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>分片盘校验码盘分别2个</p>\r\n\r\n			<p>数据分片校验码计算2次</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>4</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>是</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>读写速度2倍</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>2/4</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>2/4</p>\r\n\r\n			<p>1&isin;2</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>用的很少</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>&ldquo;部队中有一半是搞后勤的，感觉还是不太爽。&rdquo;</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"vertical-align:top\">\r\n			<p>RAID10</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>1+0</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>2块硬盘1组先做RAID1</p>\r\n\r\n			<p>多组RAID1再做RAID0</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>4</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>是</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>读写速度N倍</p>\r\n\r\n			<p>N为组数</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>2/4</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>2/4</p>\r\n\r\n			<p>1&isin;2</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>用的最多</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>-</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"vertical-align:top\">\r\n			<p>RAID50</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>5+0</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>3块硬盘1组先做RAID5</p>\r\n\r\n			<p>多组再做RAID0</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>6</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>是</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>读写数读2N倍</p>\r\n\r\n			<p>N为组数</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>4/6</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>2/6</p>\r\n\r\n			<p>1&isin;3</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>土豪用的</p>\r\n			</td>\r\n			<td style=\"vertical-align:top\">\r\n			<p>&ldquo;好是好，就是贵！&rdquo;</p>\r\n\r\n			<p>&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;近来想建立一个私有云系统，涉及到安装使用一台网络存储服务器。对于服务器中硬盘的连接，选用哪种RAID模式能准确满足需求收集了资料，简单整理后记录如下：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;<strong>一、RAID模式优缺点的简要介绍</strong></p>\r\n\r\n<p><strong>&nbsp;&nbsp;&nbsp;</strong>&nbsp;目前被运用较多的RAID模式其优缺点大致是这样的：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;1、RAID0模式</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;优点：在RAID 0状态下，存储数据被分割成两部分，分别存储在两块硬盘上，此时移动硬盘的理论存储速度是单块硬盘的2倍，实际容量等于两块硬盘中较小一块硬盘的容量的2倍。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;缺点：任何一块硬盘发生故障，整个RAID上的数据将不可恢复。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;备注：存储高清电影比较适合。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;2、RAID1模式</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;优点：此模式下，两块硬盘互为镜像。当一个硬盘受损时，换上一块全新硬盘(大于或等于原硬盘容量)替代原硬盘即可自动恢复资料和继续使用，移动硬盘的实际容量等于较小一块硬盘的容量，存储速度与单块硬盘相同。RAID 1的优势在于任何一块硬盘出现故障是，所存储的数据都不会丢失。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;缺点：该模式可使用的硬盘实际容量比较小，仅仅为两颗硬盘中最小硬盘的容量。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;备注：非常重要的资料，如数据库，个人资料，是万无一失的存储方案。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;3、RAID 0+1模式</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;RAID 0+1是磁盘分段及镜像的结合，采用2组RAID0的磁盘阵列互为镜像，它们之间又成为一个RAID1的阵列。硬盘使用率只有50%，但是提供最佳的速度及可靠度。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;4、RAID 3模式</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;RAID3是把数据分成多个&ldquo;块&rdquo;，按照一定的容错算法，存放在N+1个硬盘上，实际数据占用的有效空间为N个硬盘的空间总和，而第N+1个硬盘存储的数据是校验容错信息，当这N+1个硬盘中的其中一个硬盘出现故障时，从其它N个硬盘中的数据也可以恢复原始数据。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;5、RAID 5模式</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;RAID5不对存储的数据进行备份，而是把数据和相对应的奇偶校验信息存储到组成RAID5的各个磁盘上，并且奇偶校验信息和相对应的数据分别存储于不同的磁盘上。当RAID5的一个磁盘数据发生损坏后，利用剩下的数据和相应的奇偶校验信息去恢复被损坏的数据。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;6、RAID 10模式</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;RAID10最少需要4块硬盘才能完成。把2块硬盘组成一个RAID1，然后两组RAID1组成一个RAID0。虽然RAID10方案造成了50%的磁盘浪费，但是它提供了200%的速度和单磁盘损坏的数据安全性。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;<strong>二、另外三种硬件快速硬件设置模式简介</strong></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;在收集资料时看到有的硬件设备提供快速磁盘模式设置，也很方便大家的使用，具体情况如下：</p>\r\n\r\n<p><em>&nbsp;&nbsp;&nbsp;</em>&nbsp;1、Clone模式</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;克隆模式，磁盘全部数据一样，以最小硬盘的为准。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;2、Large模式</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;硬盘容量简单相加，将几个硬盘变成一个硬盘，容量为几个硬盘容量之和，此模式下可以获得最大的硬盘空间。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;3、Normal模式</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;硬盘分别处于正常、独立的状态，可以分别独立的写入或读取资料，能使用的实际容量分别为4个硬盘的容量。如果其中一个硬盘受损，其他几个硬盘不会受影响。</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>三、RAID使用简明注意事项</strong></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;★使用前请先备份硬盘的资料，一旦进行RAID设定或是变更RAID模式，将会清除硬盘里的所有资料，以及无法恢复；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;★建立RAID时，建议使用相同品牌、型号和容量的硬盘，以确保性能和稳定；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;★请勿随意更换或取出硬盘，如果取出了硬盘，请记下硬盘放入两个仓位的顺序不得更改，以及请勿只插入某一块硬盘使用，以避免造成资料损坏或丢失；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;★如果旧硬盘曾经在RAID模式下使用，请先进清除硬盘RAID信息，让硬盘回复至出厂状态，以免RAID建立失败；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;★RAID0模式下，其中一个硬盘损坏时，其它硬盘所有资料都将丢失；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;★RAID1模式下，如果某一块硬盘受损，可以用一块大于或等于受损硬盘容量的新硬盘替换坏硬盘然后开机即可自动恢复和修复资料以及RAID模式。此过程需要一定时间，请耐心等待</p>\r\n\r\n<p><strong>&nbsp;&nbsp;&nbsp;&nbsp;四、细数RAID模式</strong></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;1、概念</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;磁盘阵列（Redundant Arrays of Inexpensive Disks，RAID），有&ldquo;价格便宜且多余的磁盘阵列&rdquo;之意。原理是利用数组方式来作磁盘组，配合数据分散排列的设计，提升数据的安全性。磁盘阵列是由很多便宜、容量较小、稳定性较高、速度较慢磁盘，组合成一个大型的磁盘组，利用个别磁盘提供数据所产生加成效果提升整个磁盘系统效能。同时利用这项技术，将数据切割成许多区段，分别存放在各个硬盘上。磁盘阵列还能利用同位检查（Parity Check）的观念，在数组中任一颗硬盘故障时，仍可读出数据，在数据重构时，将数据经计算后重新置入新硬盘中。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;2、规范</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;RAID技术主要包含RAID 0～RAID 50等数个规范，它们的侧重点各不相同，常见的规范有如下几种：</p>\r\n\r\n<p><a href=\"http://baike.baidu.com/albums/63423/63423/0/0.html#0$ac4bd11373f08202e80699994bfbfbedaa641bfb\" target=\"_blank\" title=\"查看图片\">&nbsp;&nbsp;</a><a href=\"http://baike.baidu.com/albums/63423/63423/0/0.html#0$ac4bd11373f08202e80699994bfbfbedaa641bfb\" target=\"_blank\"><img alt=\"\" src=\"http://s7.sinaimg.cn/middle/77d09b17tcb46240a4d16&amp;690\" title=\"\" /></a></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　<strong><a href=\"http://baike.baidu.com/view/591967.htm\" target=\"_blank\">RAID 0</a></strong>：RAID 0连续以位或字节为单位分割数据，并行读/写于多个磁盘上，因此具有很高的数据传输率，但它没有<a href=\"http://baike.baidu.com/view/575274.htm\" target=\"_blank\">数据冗余</a>，因此并不能算是真正的RAID结构。RAID 0只是单纯地提高性能，并没有为数据的可靠性提供保证，而且其中的一个磁盘失效将影响到所有数据。因此，RAID 0不能应用于<a href=\"http://baike.baidu.com/view/2308446.htm\" target=\"_blank\">数据安全</a>性要求高的场合。</p>\r\n\r\n<p><a href=\"http://baike.baidu.com/albums/63423/63423/0/0.html#0$71cf3bc79f3df8dc54bd8737cd11728b46102897\" target=\"_blank\" title=\"查看图片\">&nbsp;&nbsp;</a><a href=\"http://baike.baidu.com/albums/63423/63423/0/0.html#0$71cf3bc79f3df8dc54bd8737cd11728b46102897\" target=\"_blank\"><img alt=\"\" src=\"http://s13.sinaimg.cn/bmiddle/77d09b17tcb462596999c&amp;690\" title=\"\" /></a></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　<strong><a href=\"http://baike.baidu.com/view/591973.htm\" target=\"_blank\">RAID 1</a></strong>：它是通过磁盘数据镜像实现数据冗余，在成对的独立磁盘上产生互为备份的数据。当原始数据繁忙时，可直接从镜像拷贝中读取数据，因此RAID 1可以提高读取性能。RAID 1是磁盘阵列中单位成本最高的，但提供了很高的数据安全性和可用性。当一个磁盘失效时，系统可以自动切换到镜像磁盘上读写，而不需要重组失效的数据。</p>\r\n\r\n<p><a href=\"http://baike.baidu.com/albums/63423/63423/0/0.html#0$08f790529822720e904074447bcb0a46f31fab86\" target=\"_blank\" title=\"查看图片\">&nbsp;&nbsp;</a><a href=\"http://baike.baidu.com/albums/63423/63423/0/0.html#0$08f790529822720e904074447bcb0a46f31fab86\" target=\"_blank\"><img alt=\"\" src=\"http://s13.sinaimg.cn/bmiddle/77d09b17tcb4626483a6c&amp;690\" title=\"\" /></a></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　<strong><a href=\"http://baike.baidu.com/view/120903.htm\" target=\"_blank\">RAID 0+1</a></strong>: 也被称为RAID 10标准，实际是将RAID 0和RAID 1标准结合的产物，在连续地以位或字节为单位分割数据并且并行读/写多个磁盘的同时，为每一块磁盘作<a href=\"http://baike.baidu.com/view/494449.htm\" target=\"_blank\">磁盘镜像</a>进行冗余。它的优点是同时拥有RAID 0的超凡速度和RAID 1的数据高可靠性，但是CPU占用率同样也更高，而且磁盘的利用率比较低。</p>\r\n\r\n<p>　　<strong><a href=\"http://baike.baidu.com/view/103897.htm\" target=\"_blank\">RAID 2</a></strong>：将数据条块化地分布于不同的硬盘上，条块单位为位或字节，并使用称为&ldquo;加重平均<a href=\"http://baike.baidu.com/view/126214.htm\" target=\"_blank\">纠错码</a>（<a href=\"http://baike.baidu.com/view/80370.htm\" target=\"_blank\">海明码</a>）&rdquo;的编码技术来提供错误检查及恢复。这种编码技术需要多个磁盘存放检查及恢复信息，使得RAID 2技术实施更复杂，因此在商业环境中很少使用。</p>\r\n\r\n<p>　　<strong><a href=\"http://baike.baidu.com/view/645828.htm\" target=\"_blank\">RAID 3</a></strong>：它同RAID 2非常类似，都是将数据条块化分布于不同的硬盘上，区别在于RAID 3使用简单的奇<a href=\"http://baike.baidu.com/view/93328.htm\" target=\"_blank\">偶校验</a>，并用单块磁盘存放奇偶校验信息。如果一块磁盘失效，奇偶盘及其他数据盘可以重</p>\r\n\r\n<p><a href=\"http://baike.baidu.com/albums/63423/63423/0/0.html#0$b812c8fcc3cec3fd72d5afd3d688d43f869427a8\" target=\"_blank\" title=\"查看图片\">&nbsp;&nbsp;</a><a href=\"http://baike.baidu.com/albums/63423/63423/0/0.html#0$b812c8fcc3cec3fd72d5afd3d688d43f869427a8\" target=\"_blank\"><img alt=\"\" src=\"http://s3.sinaimg.cn/bmiddle/77d09b17tcb4627004de2&amp;690\" title=\"\" /></a></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>新产生数据；如果奇偶盘失效则不影响数据使用。RAID 3对于大量的连续数据可提供很好的传输率，但对于随机数据来说，奇偶盘会成为写操作的瓶颈。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　<strong><a href=\"http://baike.baidu.com/view/120905.htm\" target=\"_blank\">RAID 4</a></strong>：RAID 4同样也将数据条块化并分布于不同的磁盘上，但条块单位为块或记录。RAID 4使用一块磁盘作为<a href=\"http://baike.baidu.com/view/444171.htm\" target=\"_blank\">奇偶校验</a>盘，每次写操作都需要访问奇偶盘，这时奇偶校验盘会成为写操作的瓶颈，因此RAID 4在商业环境中也很少使用。</p>\r\n\r\n<p><a href=\"http://baike.baidu.com/albums/63423/63423/0/0.html#0$5243fbf2b211931372c2690e65380cd790238d8f\" target=\"_blank\" title=\"查看图片\">&nbsp;&nbsp;</a><a href=\"http://baike.baidu.com/albums/63423/63423/0/0.html#0$5243fbf2b211931372c2690e65380cd790238d8f\" target=\"_blank\"><img alt=\"\" src=\"http://s5.sinaimg.cn/bmiddle/77d09b17tcb4627bd8db4&amp;690\" title=\"\" /></a></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　<strong><a href=\"http://baike.baidu.com/view/645826.htm\" target=\"_blank\">RAID 5</a></strong>：RAID 5不单独指定的奇偶盘，而是在所有磁盘上交叉地存取数据及奇偶校验信息。在RAID 5上，读/写指针可同时对阵列设备进行操作，提供了更高的数据流量。RAID 5更适合于小<a href=\"http://baike.baidu.com/view/702806.htm\" target=\"_blank\">数据块</a>和随机读写的数据。RAID 3与RAID 5相比，最主要的区别在于RAID 3每进行一次数据传输就需涉及到所有的阵列盘；而对于RAID 5来说，大部分数据传输只对一块磁盘操作，并可进行并行操作。在RAID 5中有&ldquo;写损失&rdquo;，即每一次写操作将产生四个实际的读/写操作，其中两次读旧的数据及奇偶信息，两次写新的数据及奇偶信息。</p>\r\n\r\n<p>　　<strong><a href=\"http://baike.baidu.com/view/1652299.htm\" target=\"_blank\">RAID 6</a></strong>：与RAID 5相比，RAID 6增加了第二个独立的奇偶校验信息块。两个独立的奇偶系统使用不同的算法，数据的可靠性非常高，即使两块磁盘同时失效也不会影响数据的使用。但RAID 6需要分配给奇偶校验信息更大的磁盘空间，相对于RAID 5有更大的&ldquo;写损失&rdquo;，因此&ldquo;写性能&rdquo;非常差。较差的性能和复杂的实施方式使得RAID 6很少得到实际应用。</p>\r\n\r\n<p>　　<strong><a href=\"http://baike.baidu.com/view/1652304.htm\" target=\"_blank\">RAID 7</a></strong>：这是一种新的RAID标准，其自身带有智能化实时<a href=\"http://baike.baidu.com/view/880.htm\" target=\"_blank\">操作系统</a>和用于存储管理的软件工具，可完全独立于<a href=\"http://baike.baidu.com/view/23880.htm\" target=\"_blank\">主机</a>运行，不占用主机CPU资源。RAID 7可以看作是一种存储计算机（Storage Computer），它与其他RAID标准有明显区别。除了以上的各种标准（如表1），我们可以如RAID 0+1那样结合多种RAID规范来构筑所需的RAID阵列，例如RAID 5+3（RAID 53）就是一种应用较为广泛的阵列形式。用户一般可以通过灵活配置磁盘阵列来获得更加符合其要求的磁盘存储系统。</p>\r\n\r\n<p>　　<strong>RAID 5E</strong>(RAID 5 Enhencement): RAID 5E是在RAID 5级别基础上的改进，与RAID 5类似，数据的校验信息均匀分布在各硬盘上，但是，在每个硬盘上都保留了一部分未使用的空间，这部分空间没有进行条带化，最多允许两块物理硬盘出现故障。看起来，RAID 5E和RAID 5加一块热备盘好象差不多，其实由于RAID 5E是把数据分布在所有的硬盘上，性能会比RAID5 加一块热备盘要好。当一块硬盘出现故障时，有故障硬盘上的数据会被压缩到其它硬盘上未使用的空间，逻辑盘保持RAID 5级别。</p>\r\n\r\n<p>　　<strong>RAID 5EE</strong>: 与RAID 5E相比，RAID 5EE的数据分布更有效率，每个硬盘的一部分空间被用作分布的热备盘，它们是阵列的一部分，当阵列中一个物理硬盘出现故障时，数据重建的速度会更快。</p>\r\n\r\n<p>　　<strong><a href=\"http://baike.baidu.com/view/4339743.htm\" target=\"_blank\">RAID 50</a></strong>：RAID50是RAID5与RAID0的结合。此配置在RAID5的子磁盘组的每个磁盘上进行包括奇偶信息在内的数据的剥离。每个RAID5子磁盘组要求三个硬盘。RAID50具备更高的容错能力，因为它允许某个组内有一个磁盘出现故障，而不会造成数据丢失。而且因为奇偶位分部于RAID5子磁盘组上，故重建速度有很大提高。优势：更高的容错能力，具备更快数据读取速率的潜力。需要注意的是：磁盘故障会影响<a href=\"http://baike.baidu.com/view/4316.htm\" target=\"_blank\">吞吐量</a>。故障后重建信息的时间比镜像配置情况下要长。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;3、优点</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;提高传输速率。RAID通过在多个磁盘上同时存储和读取数据来大幅提高<a href=\"http://baike.baidu.com/view/51839.htm\" target=\"_blank\">存储系统</a>的数据<a href=\"http://baike.baidu.com/view/4316.htm\" target=\"_blank\">吞吐量</a>（Throughput）。在RAID中，可以让很多磁盘<a href=\"http://baike.baidu.com/view/15529.htm\" target=\"_blank\">驱动器</a>同时传输数据，而这些磁盘驱动器在逻辑上又是一个磁盘驱动器，所以使用RAID可以达到单个磁盘驱动器几倍、几十倍甚至上百倍的速率。这也是RAID最初想要解决的问题。因为当时CPU的速度增长很快，而<a href=\"http://baike.baidu.com/view/325542.htm\" target=\"_blank\">磁盘驱动器</a>的<a href=\"http://baike.baidu.com/view/434019.htm\" target=\"_blank\">数据传输速率</a>无法大幅提高，所以需要有一种方案解决二者之间的矛盾。RAID最后成功了。</p>\r\n\r\n<p>　　通过<a href=\"http://baike.baidu.com/view/5705563.htm\" target=\"_blank\">数据校验</a>提供容错功能。普通磁盘驱动器无法提供容错功能，如果不包括写在磁盘上的CRC（循环<a href=\"http://baike.baidu.com/view/3338755.htm\" target=\"_blank\">冗余校验</a>）码的话。RAID容错是建立在每个磁盘驱动器的硬件容错功能之上的，所以它提供更高的安全性。在很多RAID模式中都有较为完备的相互校验/恢复的措施，甚至是直接相互的<a href=\"http://baike.baidu.com/view/974265.htm\" target=\"_blank\">镜像备份</a>，从而大大提高了RAID系统的容错度，提高了系统的稳定<a href=\"http://baike.baidu.com/view/104445.htm\" target=\"_blank\">冗余</a>性。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;4、实现</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;磁盘阵列有两种方式可以实现，那就是&ldquo;软件阵列&rdquo;与&ldquo;硬件阵列&rdquo;。</p>\r\n\r\n<p>　　<strong>软件阵列</strong>是指通过<a href=\"http://baike.baidu.com/view/948.htm\" target=\"_blank\">网络操作系统</a>自身提供的<a href=\"http://baike.baidu.com/view/1251132.htm\" target=\"_blank\">磁盘管理</a>功能将连接的普通SCSI卡上的多块硬盘配置成逻辑盘，组成阵列。软件阵列可以提供<a href=\"http://baike.baidu.com/view/575274.htm\" target=\"_blank\">数据冗余</a>功能，但是磁盘子系统的性能会有所降低，有的降低幅度还比较大，达30%左右。</p>\r\n\r\n<p>　　<strong>硬件阵列</strong>是使用专门的<a href=\"http://baike.baidu.com/view/253177.htm\" target=\"_blank\">磁盘阵列卡</a>来实现的。硬件阵列能够提供在线扩容、动态修改阵列级别、自动数据恢复、<a href=\"http://baike.baidu.com/view/15529.htm\" target=\"_blank\">驱动器</a>漫游、超高速缓冲等功能。它能提供性能、数据保护、可靠性、可用性和可管理性的解决方案。<a href=\"http://baike.baidu.com/view/1036248.htm\" target=\"_blank\">阵列卡</a>专用的处理单元来进行操作，它的性能要远远高于常规非<a href=\"http://baike.baidu.com/view/2239565.htm\" target=\"_blank\">阵列硬盘</a>，并且更安全更稳定。</p>\r\n\r\n<p>　　磁盘阵列其实也分为软阵列 (Software Raid)和硬阵列 (Hardware Raid) 两种. 软阵列即通过软件程序并由计算机的 CPU提供运行能力所成. 由于软件程式不是一个完整系统故只能提供最基本的 RAID容错功能. 其他如<a href=\"http://baike.baidu.com/view/120850.htm\" target=\"_blank\">热备用</a>硬盘的设置, 远程管理等功能均一一欠奉. 硬阵列是由独立操作的硬件提供整个磁盘阵列的控制和计算功能. 不依靠系统的CPU资源.</p>\r\n\r\n<p>　　由于硬阵列是一个完整的系统, 所有需要的功能均可以做进去. 所以硬阵列所提供的功能和性能均比软阵列好. 而且, 如果你想把系统也做到磁盘阵列中, 硬阵列是唯一的选择. 故我们可以看市场上 RAID 5 级的磁盘阵列均为硬阵列. 软 阵列只适用于 Raid 0 和 Raid 1. 对于我们做镜像用的镜像塔, 肯定不会用 Raid 0或 Raid 1。作为高性能的<a href=\"http://baike.baidu.com/view/51839.htm\" target=\"_blank\">存储系统</a>，已经得到了越来越广泛的应用。RAID的级别从RAID概念的提出到现在，已经发展了六个级别，其级别分别是0、1、2、3、4、5等。但是最常用的是0、1、3、5四个级别。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;<strong>五、个人用户该选那种RAID模式</strong></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;首先要分析清楚，我们需要存储的文件有什么样的属性。这其中需要大量存储的和占用存储量大的文件是两回事儿。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;从使用角度粗略分，个人需要存储的文件大致有文本文件、照片录像、影音文件、应用程序等。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;1、文本文件：大量长期存放，阶段性更新，但其占用空间小，安全性要求个别较高，大部分一般；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;2、照片录像：大量长期存放，永久性记录，占用空间大，安全性要求高，一旦损失很难弥补；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;3、影音文件：一部分大量长期存放，一部分大量短期存放，阶段性更新，占用空间大，安全性要求一般，即便损失了，也可以再从网络上下载恢复；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;4、应用程序：这其中包括一些软件和硬件的驱动等，对于软件，目前基本可以从网络上获得，驱动程序有时需要预先备份，安装设备时随时可用，属于量少但要长期存放的，阶段性更新，安全性要求一般。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;看看自己需要对哪种类型的文件进行存储，再选择自己需要的RAID模式即可。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;本人的照片和私人录影资料较多，平时喜欢收集APE等无损格式的音乐文件，对于个人来说这都是至宝，不可有所损失，再有就是一些硬件的驱动程序，相对比较重要，另外会编辑少量的个人文件，阶段性比较重要，最后是影片，看完也就删除了，不太重要。而照片录像和无损音乐占用的空间又是巨大的，安全性要求又很高，权衡后，在节约资金确保安全的前提下，准备购置五块大容量硬盘，组成NAS存储服务器，选择RAID5模式。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;顺便说，购置五快硬盘的原因还有一个，就是我使用的是老机箱改造NAS服务器，市面上有3转5的硬盘笼子可以简单将原有的3个光驱位变成5块硬盘的存储位，考虑到家用存储8T的容量已经足够了，10T基本上可以无忧了，所以选择了5块硬盘，每块2T容量。当然组成RAOD5后会少于10T，那也足够了！</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;NAS的好处很多，这里就不在赘述，有兴趣的朋友建议深入了解。它既可以完成集中存储还可以完成诸如自动BT下载，网络打印机，苹果媒体服务器等众多私有云功能，是很好的家庭网络应用解决方案。</p>',2,'2019-09-09 08:30:00.000000',0,'RexDu',0,NULL),(25,'利用nc和tar拷贝两台linux主机之间大量的小文件','',0,'利用nc和tar拷贝两台linux主机之间大量的小文件','<p>本文链接：https://blog.csdn.net/qq_26614295/article/details/79238687<br />\r\n如题，我用rsync试过在两台linux主机之间对拷数据，今天试一下用nc+tar的方式对拷数据，具体操作如下：</p>\r\n\r\n<p>环境：两台linux主机，分别是服务端(192.168.10.43)和客户端(192.168.10.44)</p>\r\n\r\n<p>1下载nc，分别在两台linux主机安装，这里我的linux系统是Centos 6.4的，用yum安装自带的nc会传输文件的时候会出问题，所以这里推荐下载旧版的nc，由于我的系统是64位的，我给出的也是64位的nc的下载链接，大家可以照着去网上找</p>\r\n\r\n<p>https://pan.baidu.com/s/1pM11VZl41s5</p>\r\n\r\n<p>安装：rpm -iUv nc-1.84-22.el6.x86_64.rpm</p>\r\n\r\n<p>2找一个没有占用的端口，我这里是7788端口，现在客户端开启监听</p>\r\n\r\n<p>mkdir /barCode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//创建一个用于接收大量小文件的目录</p>\r\n\r\n<p>nc -l 7788 |tar -C /barCode/ -zxvf -&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//开启监听，接收到小文件之后解压归档到barCode目录</p>\r\n\r\n<p>3在服务端开始压缩并且向客户端发送文件</p>\r\n\r\n<p>tar -zcPvf - /barCode/barCode/|nc 192.168.10.44 7788&nbsp;&nbsp;&nbsp;&nbsp;//大量的小文件在/barCode/barCode 这个目录下</p>',2,'2019-09-09 08:31:00.000000',1,'RexDu',0,NULL),(26,'查看windows操作系统的默认编码','',0,'在Windows平台下，进入DOS窗口，输入：chcp 可以得到操作系统的代码页信息，你可以从控制面板的语言选项中查看代码页对应的详细的字符集信息。','<p>例如：</p>\r\n\r\n<p>我的活动代码页为：936，它对于的编码格式为GBK。</p>\r\n\r\n<p><img alt=\"\" src=\"https://blog.csdn.net/zp357252539/article/details/79084480\" /><img alt=\"\" src=\"https://img-blog.csdn.net/20180117135936239?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvenAzNTcyNTI1Mzk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" /></p>\r\n\r\n<p>代码页是<a href=\"http://baike.baidu.com/view/51987.htm\" rel=\"nofollow\">字符集</a><a href=\"http://baike.baidu.com/view/237708.htm\" rel=\"nofollow\">编码</a>的别名，也有人称&quot;内码表&quot;。早期，代码页是<a href=\"http://baike.baidu.com/view/1937.htm\" rel=\"nofollow\">IBM</a>称呼电脑<a href=\"http://baike.baidu.com/view/361.htm\" rel=\"nofollow\">BIOS</a>本身支持的字符集编码的名称。当时通用的操作系统都是<a href=\"http://baike.baidu.com/view/5483485.htm\" rel=\"nofollow\">命令行界面</a>系统，这些操作系统直接使用BIOS供应的VGA功能来显示字符，操作系统的编码支持也就依靠BIOS的编码。现在这BIOS代码页被称为OEM代码页。<a href=\"http://baike.baidu.com/view/42121.htm\" rel=\"nofollow\">图形</a>操作系统解决了此问题，图形操作系统使用自己字符呈现引擎可以支持很多不同的字符集编码。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　早期IBM和<a href=\"http://baike.baidu.com/view/2353.htm\" rel=\"nofollow\">微软</a>内部使用特别数字来标记这些编码，其实大多的这些编码已经有自己的名称了。虽然图形操作系统可以支持很多编码，很多微软程序还使用这些数字来点名某编码。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n下表列出了所有支持的代码页及其国家(地区)或者语言： \r\n代码页       国家(地区)或语言 \r\n437          美国 \r\n708          阿拉伯文(ASMO 708)\r\n720          阿拉伯文(DOS)\r\n850          多语言(拉丁文 I) \r\n852          中欧(DOS) - 斯拉夫语(拉丁文 II) \r\n855          西里尔文(俄语) \r\n857          土耳其语 \r\n860          葡萄牙语 \r\n861          冰岛语 \r\n862          希伯来文(DOS)\r\n863          加拿大 - 法语 \r\n865          日耳曼语 \r\n866          俄语 - 西里尔文(DOS) \r\n869          现代希腊语\r\n874          泰文(Windows)\r\n932          日文(Shift-JIS)\r\n936          中国 - 简体中文(GB2312)\r\n949          韩文\r\n950          繁体中文(Big5)\r\n1200         Unicode        \r\n1201         Unicode (Big-Endian)\r\n1250         中欧(Windows)\r\n1251         西里尔文(Windows)\r\n1252         西欧(Windows)\r\n1253         希腊文(Windows)\r\n1254         土耳其文(Windows)\r\n1255         希伯来文(Windows)\r\n1256         阿拉伯文(Windows)\r\n1257         波罗的海文(Windows)\r\n1258         越南文(Windows)\r\n20866        西里尔文(KOI8-R)\r\n21866        西里尔文(KOI8-U)\r\n28592        中欧(ISO)\r\n28593        拉丁文 3 (ISO)\r\n28594        波罗的海文(ISO)\r\n28595        西里尔文(ISO)\r\n28596        阿拉伯文(ISO)\r\n28597        希腊文(ISO)\r\n28598        希伯来文(ISO-Visual)\r\n38598        希伯来文(ISO-Logical)\r\n50000        用户定义的\r\n50001        自动选择\r\n50220        日文(JIS)\r\n50221        日文(JIS-允许一个字节的片假名)\r\n50222        日文(JIS-允许一个字节的片假名 - SO/SI)\r\n50225        韩文(ISO)\r\n50932        日文(自动选择)\r\n50949        韩文(自动选择)\r\n51932        日文(EUC)\r\n51949        韩文(EUC)\r\n52936        简体中文(HZ)\r\n65000        Unicode (UTF-7)\r\n65001        Unicode (UTF-8)</pre>',4,'2019-09-09 08:33:00.000000',0,'RexDu',0,NULL),(27,'史上最全win10下Linux子系统的安装及优化方案','',0,'相信大家都会对Linux系统有一定程度的需求，但是目前所有Linux发行版的桌面环境实在是不太友好，并不能完全满足我们所有的学习和娱乐。于是我们会想到安装Windows+Linux双系统，或者在Windows下用虚拟机安装Linux。即便这样，两个系统间切换来切换去还是特别麻烦。今天给大家带来一个完美的解决方案，安装Linux子系统。让你在win10下像使用软件一样的使用Linux。','<p>先上一张最终效果图。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-03b89ade9a1db6dc.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" /></p>\r\n\r\n<p>效果图</p>\r\n\r\n<h2>子系统的安装</h2>\r\n\r\n<p>安装子系统很简单。安装前先要做下准备。首先，打开win10开发人员模式，在设置--&gt;更新和安全--&gt;针对开发人员，中勾选开发人员模式。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-6af29dfda4544307.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" /></p>\r\n\r\n<p>1</p>\r\n\r\n<p>然后在控制面板中勾选添加Linux子系统。依次进入控制面板--&gt;程序--&gt;启用或关闭windows功能，勾选适用于windows的linux的子系统，点击确定。之后重启电脑。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-b1f8fa3b7136ae89.png?imageMogr2/auto-orient/strip|imageView2/2/w/425/format/webp\" /></p>\r\n\r\n<p>2</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-9376e1900c331697.png?imageMogr2/auto-orient/strip|imageView2/2/w/414/format/webp\" /></p>\r\n\r\n<p>3</p>\r\n\r\n<p>重启后就可以安装Linux子系统了。可以有两种方法安装，第一种是在Microsoft store里面直接搜索Ubuntu进行安装。（Ubuntu是Linux的发行版之一）</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>4</p>\r\n\r\n<p>第二种是在win10 命令行内进行安装。win+R打开cmd，进入Windows下的命令行。命令行下输入命令bash回车，它会问你是否安装，输入y继续。（bash是Linux下的一个命令行）</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-538e1ea44a6a1022.png?imageMogr2/auto-orient/strip|imageView2/2/w/614/format/webp\" /></p>\r\n\r\n<p>5</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-47d0f264c76de08a.png?imageMogr2/auto-orient/strip|imageView2/2/w/985/format/webp\" /></p>\r\n\r\n<p>6</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>使用时，直接在cmd中输入bash即可进入Linux子系统。<br />\r\n也可以直接打开在Microsoft store中下载的Ubuntu进入子系统。<br />\r\n初次进入Linux子系统需要设置Linux的用户名及密码。<br />\r\n之后就可以愉快地玩耍了</p>\r\n\r\n<h2>子系统的优化</h2>\r\n\r\n<h3>更换apt源。</h3>\r\n\r\n<p>因为Linux子系统的apt源使用的是官方源，需要连接到国外的服务器。所以安装一些软件时下载会很慢，我们可以改用国内的镜像apt源。<br />\r\n国内的镜像源主要有：<br />\r\n阿里源</p>\r\n\r\n<pre>\r\ndeb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse \r\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse\r\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse\r\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse\r\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\r\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse\r\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse\r\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse\r\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse\r\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\r\n</pre>\r\n\r\n<p>科大源</p>\r\n\r\n<pre>\r\ndeb https://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse\r\ndeb https://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\r\ndeb https://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\r\ndeb https://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\r\n</pre>\r\n\r\n<p>网易源</p>\r\n\r\n<pre>\r\ndeb http://mirrors.163.com/ubuntu/ wily main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ wily-security main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ wily-updates main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ wily-proposed main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ wily-backports main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ wily main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ wily-security main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ wily-updates main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ wily-proposed main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ wily-backports main restricted universe multiverse\r\n</pre>\r\n\r\n<p>可以直接使用vim对 /etc/apt/sources.list文件进行修改。<br />\r\n先进行一下备份。</p>\r\n\r\n<pre>\r\nsudo cp /etc/apt/sources.list /etc/apt/sources.list.bak\r\n</pre>\r\n\r\n<p>然后</p>\r\n\r\n<pre>\r\nsudo vim  /etc/apt/sources.list\r\n</pre>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-1103926a710b8426.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" /></p>\r\n\r\n<p>7</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>选择一个源添加到文件最前面或直接替换掉原文件。<br />\r\n保存后运行</p>\r\n\r\n<pre>\r\nsudo apt-get update\r\n</pre>\r\n\r\n<h3>Linux子系统运行图形界面程序。</h3>\r\n\r\n<p>首先在win10中安装开源软件xming，可以直接在官网上下载到。<br />\r\n再在子系统下安装x11-apps</p>\r\n\r\n<pre>\r\nsudo apt-get install x11-apps \r\n</pre>\r\n\r\n<p>运行图形界面程序时，在程序名前面加上DISPLAY=:0 即可。比如打开Linux下的一个程序编辑器geany。</p>\r\n\r\n<pre>\r\nDISPLAY=:0 geany\r\n</pre>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-75e9eff06dfd89ae.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" /></p>\r\n\r\n<p>8</p>\r\n\r\n<h3>终端的美化</h3>\r\n\r\n<p>win10下实在太丑了，而且功能很少，很不好用。推荐大家一个开源软件cmder，可以完美解决这一问题。这个软件同样可以在官网上下载到，而且是免安装的哦。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-19a1be74068fdaaf.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" /></p>\r\n\r\n<p>9</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>选择下载那个mini版的，完整版与mini版的功能是一样的，只是完整版中多了bash。因为我们已经安装了bash所以直接用mini版的就可以了。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-4d8eb70ff4992746.png?imageMogr2/auto-orient/strip|imageView2/2/w/1062/format/webp\" /></p>\r\n\r\n<p>10</p>\r\n\r\n<p>上图是cmder的主界面，是不是好看多了。<br />\r\n打开cmder直接进入的是cmd，我们可以在设置中更改它的startup方式，选择command line ，填入bash -cur_console:p。<br />\r\n保存设置，下次打开时就直接进入Linux子系统了。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-0410d11368a45deb.png?imageMogr2/auto-orient/strip|imageView2/2/w/889/format/webp\" /></p>\r\n\r\n<p>11</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>我们还可以在colors选项中选择自己喜欢的主题，在transparency中更改主界面的透明度。<br />\r\n而且cmder还有分屏功能，下图是我美化的最终结果。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-6bcd744ba49f0653.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" /></p>\r\n\r\n<p>12</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>最后，送给大家一个cmder的小绝招。<br />\r\n我们可以将cmder添加进win10的环境变量中，这样我们就可以像在Linux系统中那样，在任意文件目录下直接右键打开cmder并进入当前路径了。<br />\r\n比如在桌面点击右键，选择cmder here，这样打开cmder就可以直接进入桌面的路径了。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-3f49f5829ea48d8d.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\" /></p>\r\n\r\n<p>13</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-2f844a663eb4dc40.png?imageMogr2/auto-orient/strip|imageView2/2/w/1062/format/webp\" /></p>\r\n\r\n<p>14</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>设置环境变量的具体方法是，依次进入控制面板--&gt;系统和安全--&gt;系统，选择高级系统设置。</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-fe8bc04114dcace0.png?imageMogr2/auto-orient/strip|imageView2/2/w/629/format/webp\" /></p>\r\n\r\n<p>15</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>点击环境变量。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-fb7aeaa36a1f37ce.png?imageMogr2/auto-orient/strip|imageView2/2/w/794/format/webp\" /></p>\r\n\r\n<p>16</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>编辑系统环境变量Path。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://upload-images.jianshu.io/upload_images/11697950-b582e3a6a3f6ea60.png?imageMogr2/auto-orient/strip|imageView2/2/w/677/format/webp\" /></p>\r\n\r\n<p>17</p>\r\n\r\n<p>把cmder路径添加进来，保存之后就可以用win+R的方式打开cmder了。</p>\r\n\r\n<p>接下来，以管理员方式打开cmd，输入命令Cmder.exe /REGISTER ALL。之后就可以直接在右键中打开cmde了。</p>',4,'2019-09-09 08:35:00.000000',0,'RexDu',0,NULL),(28,'python单进程CPU是否会超过100%？','',0,'python单进程CPU是否会超过100%？','<p>来源：https://www.douban.com/note/663292778/</p>\r\n\r\n<p>答案是有可能的。</p>\r\n\r\n<p>python单进程多个子线程随机读文件的情况下，</p>\r\n\r\n<p>每个线程都在抢占GIL锁，</p>\r\n\r\n<p>每个线程抢占后又大都在等待IO，</p>\r\n\r\n<p>导致时间片极短，</p>\r\n\r\n<p>系统频繁的调度切换，</p>\r\n\r\n<p>所以CPU sys use比较高，</p>\r\n\r\n<p>算在python进程上top里CPU显示就超过100%了。</p>\r\n\r\n<p>但只看CPU user use，还是不会超过100%的。</p>\r\n\r\n<p>综上，在IO密集型的任务里，会出现超过100%的情况。但是计算密集型则一般不会。</p>',1,'2019-09-09 15:45:00.000000',0,'RexDu',0,NULL),(29,'你真的了解 Cookie 和 Session 吗?','',0,'面试的时候，曾经问过很多朋友这个问题： Cookie 和 Session 有什么区别呢？大部分的面试者应该都可以说上一两句，比如：什么是 Cookie？什么是 Session？两者的区别等。  但如果再往深入探讨的话，就慢慢有一些朋友不太了解了，谈起原理时就很少有朋友全部回答准确。今天和大家一起深入聊聊有关 Cookie 和 Session 的话题 。','<h2>第一层楼</h2>\r\n\r\n<p>什么是 Cookie 和 Session ?初级程序员高频面试题。</p>\r\n\r\n<p><strong>什么是 Cookie</strong></p>\r\n\r\n<p>HTTP Cookie（也叫 Web Cookie或浏览器 Cookie）是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。通常，它用于告知服务端两个请求是否来自同一浏览器，如保持用户的登录状态。Cookie 使基于无状态的 HTTP 协议记录稳定的状态信息成为了可能。</p>\r\n\r\n<p>Cookie 主要用于以下三个方面：</p>\r\n\r\n<ul>\r\n	<li>会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）</li>\r\n	<li>个性化设置（如用户自定义设置、主题等）</li>\r\n	<li>浏览器行为跟踪（如跟踪分析用户行为等）</li>\r\n</ul>\r\n\r\n<p><strong>什么是 Session</strong></p>\r\n\r\n<p>Session 代表着服务器和客户端一次会话的过程。Session 对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的 Web 页之间跳转时，存储在 Session 对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。当客户端关闭会话，或者 Session 超时失效时会话结束。</p>\r\n\r\n<h2>第二层楼</h2>\r\n\r\n<p>Cookie 和 Session 有什么不同？</p>\r\n\r\n<ul>\r\n	<li>作用范围不同，Cookie 保存在客户端（浏览器），Session 保存在服务器端。</li>\r\n	<li>存取方式的不同，Cookie 只能保存 ASCII，Session 可以存任意数据类型，一般情况下我们可以在 Session 中保持一些常用变量信息，比如说 UserId 等。</li>\r\n	<li>有效期不同，Cookie 可设置为长时间保持，比如我们经常使用的默认登录功能，Session 一般失效时间较短，客户端关闭或者 Session 超时都会失效。</li>\r\n	<li>隐私策略不同，Cookie 存储在客户端，比较容易遭到不法获取，早期有人将用户的登录名和密码存储在 Cookie 中导致信息被窃取；Session 存储在服务端，安全性相对 Cookie 要好一些。</li>\r\n	<li>存储大小不同， 单个 Cookie 保存的数据不能超过 4K，Session 可存储数据远高于 Cookie。</li>\r\n</ul>\r\n\r\n<p>前两层楼内容，绝大部分同学都可以准确回答</p>\r\n\r\n<h2>第三层楼</h2>\r\n\r\n<p>为什么需要 Cookie 和 Session，他们有什么关联？</p>\r\n\r\n<p>说起来为什么需要 Cookie ，这就需要从浏览器开始说起，我们都知道浏览器是没有状态的(HTTP 协议无状态)，这意味着浏览器并不知道是张三还是李四在和服务端打交道。这个时候就需要有一个机制来告诉服务端，本次操作用户是否登录，是哪个用户在执行的操作，那这套机制的实现就需要 Cookie 和 Session 的配合。</p>\r\n\r\n<p>那么 Cookie 和 Session 是如何配合的呢？我画了一张图大家可以先了解下。</p>\r\n\r\n<p><img src=\"http://www.itmind.net/assets/images/2019/it/Cookie-Session.png\" /></p>\r\n\r\n<p>用户第一次请求服务器的时候，服务器根据用户提交的相关信息，创建创建对应的 Session ，请求返回时将此 Session 的唯一标识信息 SessionID 返回给浏览器，浏览器接收到服务器返回的 SessionID 信息后，会将此信息存入到 Cookie 中，同时 Cookie 记录此 SessionID 属于哪个域名。</p>\r\n\r\n<p>当用户第二次访问服务器的时候，请求会自动判断此域名下是否存在 Cookie 信息，如果存在自动将 Cookie 信息也发送给服务端，服务端会从 Cookie 中获取 SessionID，再根据 SessionID 查找对应的 Session 信息，如果没有找到说明用户没有登录或者登录失效，如果找到 Session 证明用户已经登录可执行后面操作。</p>\r\n\r\n<p>根据以上流程可知，SessionID 是连接 Cookie 和 Session 的一道桥梁，大部分系统也是根据此原理来验证用户登录状态。</p>\r\n\r\n<p>三层楼的内容，大部分同学可以讲清楚。</p>\r\n\r\n<h2>第四层楼</h2>\r\n\r\n<p>既然服务端是根据 Cookie 中的信息判断用户是否登录，那么如果浏览器中禁止了 Cookie，如何保障整个机制的正常运转。</p>\r\n\r\n<p>第一种方案，每次请求中都携带一个 SessionID 的参数，也可以 Post 的方式提交，也可以在请求的地址后面拼接&nbsp;xxx?SessionID=123456...。</p>\r\n\r\n<p>第二种方案，Token 机制。Token 机制多用于 App 客户端和服务器交互的模式，也可以用于 Web 端做用户状态管理。</p>\r\n\r\n<p>Token 的意思是&ldquo;令牌&rdquo;，是服务端生成的一串字符串，作为客户端进行请求的一个标识。Token 机制和 Cookie 和 Session 的使用机制比较类似。</p>\r\n\r\n<p>当用户第一次登录后，服务器根据提交的用户信息生成一个 Token，响应时将 Token 返回给客户端，以后客户端只需带上这个 Token 前来请求数据即可，无需再次登录验证。</p>\r\n\r\n<p>四层楼的内容，一部分同学可以讲清楚。</p>\r\n\r\n<h2>第五层楼</h2>\r\n\r\n<p>如何考虑分布式 Session 问题？</p>\r\n\r\n<p>在互联网公司为了可以支撑更大的流量，后端往往需要多台服务器共同来支撑前端用户请求，那如果用户在 A 服务器登录了，第二次请求跑到服务 B 就会出现登录失效问题。</p>\r\n\r\n<p>分布式 Session 一般会有以下几种解决方案：</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Nginx ip_hash 策略，服务端使用 Nginx 代理，每个请求按访问 IP 的 hash 分配，这样来自同一 IP 固定访问一个后台服务器，避免了在服务器 A 创建 Session，第二次分发到服务器 B 的现象。</p>\r\n	</li>\r\n	<li>\r\n	<p>Session 复制，任何一个服务器上的 Session 发生改变（增删改），该节点会把这个 Session 的所有内容序列化，然后广播给所有其它节点。</p>\r\n	</li>\r\n	<li>\r\n	<p>共享 Session，服务端无状态话，将用户的 Session 等信息使用缓存中间件来统一管理，保障分发到每一个服务器的响应结果都一致。</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>建议采用第三种方案。</p>\r\n\r\n<h2>第六层楼</h2>\r\n\r\n<p>如何解决跨域请求？Jsonp 跨域的原理是什么？</p>\r\n\r\n<p>说起跨域请求，必须要了解浏览器的同源策略，同源策略/SOP（Same origin policy）是一种约定，由 Netscape 公司 1995年引入浏览器，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，浏览器很容易受到 XSS、CSFR 等攻击。所谓同源是指&quot;协议+域名+端口&quot;三者相同，即便两个不同的域名指向同一个 ip 地址，也非同源。</p>\r\n\r\n<p>解决跨域请求的常用方法是：</p>\r\n\r\n<ul>\r\n	<li>通过代理来避免，比如使用 Nginx 在后端转发请求，避免了前端出现跨域的问题。</li>\r\n	<li>通过 Jsonp 跨域</li>\r\n	<li>其它跨域解决方案</li>\r\n</ul>\r\n\r\n<p>重点谈一下 Jsonp 跨域原理。浏览器的同源策略把跨域请求都禁止了，但是页面中的&nbsp;&lt;script&gt;&lt;img&gt;&lt;iframe&gt;标签是例外，不受同源策略限制。Jsonp 就是利用&nbsp;&lt;script&gt;&nbsp;标签跨域特性进行跨域数据访问。</p>\r\n\r\n<p>JSONP 的理念就是，与服务端约定好一个回调函数名，服务端接收到请求后，将返回一段 Javascript，在这段 Javascript 代码中调用了约定好的回调函数，并且将数据作为参数进行传递。当网页接收到这段 Javascript 代码后，就会执行这个回调函数，这时数据已经成功传输到客户端了。</p>\r\n\r\n<p>JSONP 的缺点是：它只支持 GET 请求，而不支持 POST 请求等其他类型的 HTTP 请求。</p>\r\n\r\n<p>以上就是有关 Cookie 和 Session 常见的面试点，不知道有多少同学可以在面试中准确回答所有问题。</p>',3,'2019-09-09 16:53:00.000000',1,'RexDu',0,NULL),(30,'使用MobaXterm开启centos的远程桌面(个人笔记)','',1,'自己新人一个，在学习在系统centos安装Oracle11的时候，由于模拟环境系统是最小化安装，问题在安装Oracle的时候需要调出图形化界面（静默安装，我不会）。查了好多资料整理如下，算是自己的笔记吧。','<p>一、原理</p>\r\n\r\n<p>X Window System 常被简称为X11或X，其功能包括窗口的绘制、移动，以及与鼠标、键盘等输入设备的交互。相信很多新手都知道startx这个命令，没有X11的话就只能对着黑乎乎的屏幕敲命令了。<br />\r\n它采用C/S模型：一个X server 和多个应用程序（client）通信。server接收client的请求绘制窗口，并将来自鼠标、键盘等设备的输入传递给client。<br />\r\nX server和client可以位于同一计算机上，就类似于平时使用的Windows操作系统；当X server和client不在同一计算机时，使用本地的X server 进行绘制、交互，就变成了远程桌面。<br />\r\n举个例子：前者是你在披萨店点了一份披萨，店员在你旁边帮你做好拿给你（这家店相当于同一台计算机）；后者是你在网上叫了一份披萨，店员接单后到你家帮你做了一份披萨（注意：VNC是使用店里厨房，做好给你送过来；X转发是使用你家厨房做披萨）<br />\r\n不理解也没关系，会用能达到目的就好了。<br />\r\n常用X Server有免费的<a href=\"http://www.straightrunning.com/XmingNotes/\" rel=\"nofollow\">Xming</a>、收费的<a href=\"http://www.netsarang.com/\" rel=\"nofollow\">Xmanager</a>（非常棒的Xshell终端软件也是他家出的，家庭教育用户免费使用） 等；上述需要手动配置，然而有了MobaXterm，一切都变得超级简单！</p>\r\n\r\n<p>1. X 协议</p>\r\n\r\n<p><img alt=\"\" src=\"http://www.ipaomi.com/wp-content/uploads/2017/11/x_server_client.gif\" style=\"height:164px; width:462px\" /></p>\r\n\r\n<p>Linux 本身是没有图形化界面的，所谓的图形化界面系统只不过中 Linux 下的应用程序。这一点和 Windows 不一样。Windows 从 Windows 95 开始，图形界面就直接在系统内核中实现了，是操作系统不可或缺的一部分。Linux 的图形化界面，底层都是基于 X 协议。</p>\r\n\r\n<p>X 协议由 X server 和 X client 组成：</p>\r\n\r\n<ul>\r\n	<li>X server 管理主机上与显示相关的硬件设置（如显卡、硬盘、鼠标等），它负责屏幕画面的绘制与显示，以及将输入设置（如键盘、鼠标）的动作告知 X client。</li>\r\n	<li>X client (即 X 应用程序) 则主要负责事件的处理（即程序的逻辑）。</li>\r\n</ul>\r\n\r\n<p>举个例子，如果用户点击了鼠标左键，因为鼠标归 X server 管理，于是 X server 就捕捉到了鼠标点击这个动作，然后它将这个动作告诉 X client，因为 X client 负责程序逻辑，于是 X client 就根据程序预先设定的逻辑（例如画一个圆），告诉 X server 说：&ldquo;请在鼠标点击的位置，画一个圆&rdquo;。最后，X server 就响应 X client 的请求，在鼠标点击的位置，绘制并显示出一个圆。</p>\r\n\r\n<p>2. X11 Forwarding</p>\r\n\r\n<p><img alt=\"\" src=\"http://www.ipaomi.com/wp-content/uploads/2017/11/x_server_client_remote.gif\" style=\"height:161px; width:409px\" /></p>\r\n\r\n<p>这么绕，有啥意义呢？当然有！</p>\r\n\r\n<p>许多时候 X server 和 X client 在同一台主机上，这看起来没什么。但是， X server 和 X client 完全可以运行在不同的机器上，只要彼此通过 X 协议通信即可。于是，我们就可以做一些&ldquo;神奇&rdquo;的事情，比如像本文开头谈到的，在本地显示 (X server)，运行在服务器上的 GUI 程序 (X client)。这样的操作可以通过 SSH X11 Forwarding (转发) 来实现。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>X11 中的 X 指的就是 X 协议，11 指的是采用 X 协议的第 11 个版本。</p>\r\n\r\n<p>3. MobaXterm</p>\r\n\r\n<p><img alt=\"\" src=\"http://www.ipaomi.com/wp-content/uploads/2017/11/MobaXterm_logo.jpg\" style=\"height:142px; width:354px\" /></p>\r\n\r\n<p>那 MobaXterm 又是什么鬼？MobaXterm 是一款开源、免费的、全功能终端软件。它与 PuTTY 类似，但却比 PuTTY 要强大得多，其中一个很实用的功能就是 MobaXterm 自带 X Server。这样我们就不用劳神地去想怎么在 Windows 上启动 X server 了。</p>\r\n\r\n<p>小结一下，整个实现逻辑就是：</p>\r\n\r\n<p>本地机器采用 MobaXterm (自带 X server) 连接远程服务器。然后，在服务器上运行 GUI 程序 (即 X client)，通过 SSH X11 Forwarding，转发到本地 (Windows 机器上)。</p>\r\n\r\n<p>二、实战</p>\r\n\r\n<p>1. 服务器端</p>\r\n\r\n<p>安装 X11 Forwarding 相关软件</p>\r\n\r\n<pre>\r\n1 sudo yum install xorg-x11-xauth xorg-x11-fonts-* xorg-x11-font-utils xorg-x11-fonts-Type1 xclock</pre>\r\n\r\n<p>启用 X11 Forwarding</p>\r\n\r\n<pre>\r\n1 sudo vim /etc/ssh/sshd_config</pre>\r\n\r\n<p>将 X11Forwarding 和 X11UseLocalhost 前面的 # 去掉，并将 X11Forwarding 设置为 yes，X11UseLocalhost 设置为 no(这个修改我有疑惑的，不明白为啥修改)</p>\r\n\r\n<p>1 #AllowAgentForwarding yes 2 #AllowTcpForwarding yes 3 #GatewayPorts no 4 X11Forwarding yes 5 #X11DisplayOffset 10 6 X11UseLocalhost no</p>\r\n\r\n<p>重启 sshd 服务</p>\r\n\r\n<pre>\r\n1 sudo systemctl restart sshd.service</pre>\r\n\r\n<p>2. 本地 (Windows 端)</p>\r\n\r\n<p>下载并安装 MobaXterm</p>\r\n\r\n<p>远程连接服务器</p>\r\n\r\n<p><img alt=\"\" src=\"http://www.ipaomi.com/wp-content/uploads/2017/11/MobaXterm_X11_Forwarding.png\" style=\"height:266px; width:832px\" /></p>\r\n\r\n<p>注意到 X11-forwarding 和 DISPLAY 这两项都打上了绿色的勾，代表设置成功了。</p>\r\n\r\n<p>3. 验证</p>\r\n\r\n<p>在服务器端运行一个 GUI 程序，如</p>\r\n\r\n<pre>\r\n1 xclock</pre>\r\n\r\n<p>这时候，你在本地 (Windows 端)，就可以看到相应的图形化界面（窗口）</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"http://www.ipaomi.com/wp-content/uploads/2017/11/xclock.png\" style=\"height:195px; width:167px\" /></p>\r\n\r\n<p>【原文链接】<a href=\"http://www.ipaomi.com/2017/11/09/%E8%BF%9C%E7%A8%8B%E6%98%BE%E7%A4%BA%E6%93%8D%E4%BD%9C-%E6%9C%8D%E5%8A%A1%E5%99%A8-gui-%E7%A8%8B%E5%BA%8F%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2-%E5%9F%BA%E4%BA%8E-x11-forwarding-centos/\" rel=\"nofollow\">http://www.ipaomi.com/2017/11/09/远程显示操作-服务器-gui-程序图形化界面-基于-x11-forwarding-centos/</a></p>',3,'2019-09-10 10:39:00.000000',9,'RexDu',6,'http://img2.imgtn.bdimg.com/it/u=3976365452,3683195683&fm=214&gp=0.jpg'),(32,'为何广告竟然如此懂你？这锅不该Cookies来背','',1,'这可能是一个每年都被提起，却一直不过时的话题，而且时不时就被推上风口浪尖。','<p><strong>现如今的互联网广告，除了不厌其烦的骚扰之外，还能够非常&rdquo;巧合&ldquo;地直击你的痛点，让人细思极恐。前一秒还在看电商看iPhone X，下一个网页就弹窗给你推荐iPhone X的购买链接，这就是广告精准投放。</strong></p>\r\n\r\n<p>前段时间，江苏消保委对于百度的公益诉讼引起了很多人的关注，虽然事件已经平息，但对于其中涉及到的案例同样引发了许多人的共鸣&mdash;&mdash;网页推送的广告总是与自己经常查看的内容紧密相关，就好像它知道你要的是什么。</p>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/1516592112711.jpg\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"850515898_7833609918344597685.jpg\" src=\"https://image.3001.net/images/20180122/1516592112711.jpg!small\" style=\"width:690px\" /></a></p>\r\n\r\n<p>当然，这其中牵涉的范围还是比较广泛的，例如手机权限获取、隐私泄漏等敏感内容，但这一次，笔者主要想说的就是关于网页广告的精准投放。对于FreeBufer这些内容，还算很基础，更多的是普通用户并不了解。</p>\r\n\r\n<h2>大数据的精准广告投放</h2>\r\n\r\n<p>而在这里面，应该还可以分为两种：一种是单个应用或者网站的广告兴趣投放；另外一种则是跨区域广告投放，最简单的例子就是在网上商城查看的商品，却在第三方网页广告推荐给你。</p>\r\n\r\n<p>总的来说，第一种其实是比较能接受的，在各大企业都在宣传&rdquo;大数据&ldquo;概念，利用用户浏览习惯判断用户兴趣爱好以及消费能力，个性化推荐内容或者商品，这种事比较能够理解和接受的。</p>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/15165958072158.jpg\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"123.jpg\" src=\"https://image.3001.net/images/20180122/15165958072158.jpg!small\" style=\"width:690px\" /></a></p>\r\n\r\n<p>正如在某宝，看看我的搜索记录、购买清单以及日常流量记录，然后在首页推荐和&ldquo;你可能喜欢&rdquo;一栏，基本都覆盖我的搜索相关或者已购买的类别。包括今日头条、百度搜索以及具备个性化推荐能力的资讯APP都存在类似的情况。</p>\r\n\r\n<p>这种用户可能会主动使用，所暴露的习惯行为被相应的内容提供方获取以进行人群画像，大多数人可以接受，一定程度上说还能够提升使用体验。</p>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/15165958525857.jpg\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"隐私.jpg\" src=\"https://image.3001.net/images/20180122/15165958525857.jpg!small\" style=\"width:690px\" /></a></p>\r\n\r\n<p>但是笔者接下来要说的第二类就不同了，比如说，你在某东搜索iPhone X在其他第三方网页或者APP出现相应的广告，这就有点让人恐慌了。除了某东之外，我不确定到底还有多少人获取了该数据，不了解的才是最让人恐慌的。</p>\r\n\r\n<p>这一类中，最常见的就是在使用浏览器上网时遇到的状况。例如在某个电商网站浏览某款商品之后，当你随后在浏览到其他的第三方网站时，出现的广告页就精准的推荐了你刚刚浏览过的商品购买链接，而这一切，离不开广告联盟和浏览器Cookies。</p>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/15165927086728.jpg\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"1.jpg\" src=\"https://image.3001.net/images/20180122/15165927086728.jpg!small\" style=\"width:690px\" /></a></p>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/15165927088251.jpg\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"2.jpg\" src=\"https://image.3001.net/images/20180122/15165927088251.jpg!small\" style=\"width:690px\" /></a></p>\r\n\r\n<p>我们可以先复现这种情况，事先我清除掉浏览器的Cookies，网页上的电商广告推荐的品类我几乎没看过，而当我在该电商网站查看iPhone X之后，立即刷新原来的广告页，则出现了iPhone X的购买链接推荐，一旦我再次清除浏览器Cookies，同样的广告页就不会那么&ldquo;贴心&rdquo;了。</p>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/15165930889753.jpg\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"maxresdefault.jpg\" src=\"https://image.3001.net/images/20180122/15165930889753.jpg!small\" style=\"width:690px\" /></a></p>\r\n\r\n<p>当然，我并非针对谁，只是这种广告投放渠道现在太普遍了，例如百度联盟、京东联盟、淘宝联盟以及谷歌广告等等，都能够利用浏览器Cookies实现个性化推荐。</p>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/15165931947268.png\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"6.png\" src=\"https://image.3001.net/images/20180122/15165931947268.png!small\" style=\"width:690px\" /></a></p>\r\n\r\n<p>而让笔者印象最深刻的就是，基本上每次我翻墙访问国外网站的时候，页面上出现的谷歌广告基本都是推广VPN、SS账号，倒还确实&ldquo;懂我&rdquo;呢，不过这可能并不需要Cookies，哈哈~</p>\r\n\r\n<h2>什么是Cookies？</h2>\r\n\r\n<p>&nbsp;那么Cookies究竟是个什么样的东西呢？维基百科中解释为，某些网站为了辨别用户身份而存储在用户本地终端的数据（通常经过加密）。</p>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/15165933818276.jpg\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"1111.jpg\" src=\"https://image.3001.net/images/20180122/15165933818276.jpg!small\" style=\"width:690px\" /></a><br />\r\nCookies详细图解（点击查看大图）</p>\r\n\r\n<p>因为HTTP协议是无状态的，用户所访问的服务器没办法记录用户的上一步操作。结合实际，用户访问网站的时候服务器是无法记住用户的，而Cookies相当于为用户分配一个身份令牌，下次再进入就知道是你了。浏览器记住密码的功能，相信很多人用过，大抵都是这样实现。</p>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/15165932119294.png\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"U6349P2DT20130318193508.png\" src=\"https://image.3001.net/images/20180122/15165932119294.png!small\" style=\"width:560px\" /></a></p>\r\n\r\n<p>而提到Cookies就绕不开Session的概念，一般被称为&ldquo;会话控制&rdquo;，不同于Cookies，用户第一次访问服务器，会生成一个Session ID来标识用户并保存信息（Cookies保存在用户客户端，而Session保存在服务器），相当于是客户端的身份证，具备唯一性，再次访问的时候服务器就能知到你是谁了。</p>\r\n\r\n<p>而Session的运行需要依赖Session ID，而Session ID则是存在Cookies中，而一般Session和Cookies是不能够跨域使用的，也就是说Cookies具备用户识别功能，也就为联盟广告精准投放提供了条件。</p>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/15165931383026.png\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"7.png\" src=\"https://image.3001.net/images/20180122/15165931383026.png!small\" style=\"width:425px\" /></a></p>\r\n\r\n<p>关于Cookies和Session的关系，还有更加细致的区分，这里暂时不再深究，有兴趣的可以参考：<a href=\"https://www.cnblogs.com/yigeqi/p/6274602.html\" rel=\"nofollow\" target=\"_blank\">关于浏览器缓存，cookie , session</a>。</p>\r\n\r\n<p>而之前提到的百度联盟、京东联盟等广告服务平台，即可利用Cookies在合作的站点投放符合用户习惯的广告内容，站长会在相应的广告平台申请获取一段代码嵌入网站，能够读取用户访问该平台服务内容产生的Cookies内容，广告联盟以此判断用户喜好以及浏览记录来选择合适的广告投放。</p>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/15165923205520.png\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"8.png\" src=\"https://image.3001.net/images/20180122/15165923205520.png!small\" style=\"width:690px\" /></a></p>\r\n\r\n<p>当然，百度联盟也只能访问用户在使用百度旗下服务内容时产生的Cookies，淘宝联盟服务并不能访问用户浏览京东网站产生的Cookies，基本上访问一个站点都会产生相应的Cookies，当你在网上商城浏览商品，Cookies就会记录下你的特殊身份ID以及其他的浏览信息。</p>\r\n\r\n<blockquote>\r\n<p>广告联盟和Cookies造就了如今的精准广告投放。</p>\r\n</blockquote>\r\n\r\n<p>此外，包括Google广告在内的广告联盟，不仅仅能够做到网页端的精准投放，还支持APP端的广告，毕竟手机APP也会产生缓存，基本能够实现同样的效果。</p>\r\n\r\n<h2>Cookies引发广告商和浏览器厂商的博弈战</h2>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/15165922926850.png\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"微信截图_20180119180719.png\" src=\"https://image.3001.net/images/20180122/15165922926850.png!small\" style=\"width:690px\" /></a></p>\r\n\r\n<p>正由于Cookies能够实现这种用户追踪的特性，也找来了许多争议。基本分为两派，一方为广告提供商，认为Cookies的存在可以提升用户体验和营销效果；而浏览器厂商则站在保护用户隐私的角度，提供了DNT（反追踪）服务，通过这项功能能够检测跨站跟踪、Cookies跟踪等行为。</p>\r\n\r\n<p>但在大多数浏览器中，只是提供了DNT的服务，但默认是关闭的，用户需要根据自己的需要选择打开。</p>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/15165922487720.jpg\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"chrome_pixel_1.jpg\" src=\"https://image.3001.net/images/20180122/15165922487720.jpg!small\" style=\"width:690px\" /></a></p>\r\n\r\n<p>在2013年的315晚会上，央视曝光了品友互动、易传媒、悠易、爱维易动、传漾公司等公司通过在别的网站加代码方式套取用户 Cookie 信息，均号称能够获取数以亿计用户的Cookies数据用于广告营销。而谷歌也多次因为Cookies广告问题遭受巨额罚款。</p>\r\n\r\n<h2>Cookies本无罪</h2>\r\n\r\n<blockquote>\r\n<p>需要注意的是，Cookies能记录的基本是你或者说你在使用的浏览器在网站上看了什么视频、商品或者其他对判断你的喜好有帮助的内容，一般不会造成严重的密码泄露，如果有，那很可能是你遭遇钓鱼网站或者恶意病毒了，</p>\r\n</blockquote>\r\n\r\n<p>但这么多年过去了，Cookies在互联网影响广告领域的地位似乎并没有受到影响。当然用户甚至是某些机构组织可以彻底禁用Cookies，但由此手上的不只是广告商，用户也将失去一些上网体验中的个性化服务。</p>\r\n\r\n<p>站在广告主的角度来看， 精准互联网广告的投放已经是必然的趋势，如果Cookies被彻底禁用了。网站将通过其他方式来留下一些用户的浏览痕迹，或许将涉及更多用户的敏感信息，至少Cookies还是匿名的。</p>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/15165986569361.jpg\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"Cookies-1440x600.jpg\" src=\"https://image.3001.net/images/20180122/15165986569361.jpg!small\" style=\"width:690px\" /></a></p>\r\n\r\n<p>一些开发者还找到一些Cookies替代方案，例如Brownie、P3P等，但都并没有推广开就就无疾而终，主流浏览器中仅仅IE浏览器支持P3P。</p>\r\n\r\n<p><strong>&ldquo;安全和使用体验总是相互对立的&rdquo;，</strong>说到底，Cookies本身是没有问题的，至于其涉及的隐私问题，我们都能够通过技术改进，但没办法解决的确实Cookies之外的东西，正如&ldquo;No Patch For Stupid&rdquo;经典名句，Cookies涉及的隐私问题依然是利用者的底线与道德准则。</p>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/15165990091760.png\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"微信截图_20180122132955.png\" src=\"https://image.3001.net/images/20180122/15165990091760.png!small\" style=\"width:690px\" /></a><br />\r\n浏览器清理Cookies</p>\r\n\r\n<p>另外，以上我们说的大多数是针对HTTP Cookies，还有一种Flash Cookies，两者用途基本一致，HTTP Cookies不能跨浏览器使用，但Flash Cookies却能够在电脑中所有浏览器中随意读取，同时能够容纳更多的信息。更麻烦的是，浏览器中可以清除HTTP Cookies，但Flash却没提供清除Cookies的入口。</p>\r\n\r\n<p><a href=\"https://image.3001.net/images/20180122/15165922293972.png\" onclick=\"return hs.expand(this);\" target=\"_blank\"><img alt=\"微信截图_20180122112022.png\" src=\"https://image.3001.net/images/20180122/15165922293972.png!small\" style=\"width:690px\" /></a></p>\r\n\r\n<p>不过，普通用户也可以直接使用第三方垃圾清理工具来清理。</p>\r\n\r\n<h2>结语</h2>\r\n\r\n<p>到这里，我希望我说的这一堆能够让更多人理解到&ldquo;为什么广告能这么贴心？&rdquo;。Cookies并没有那么可怕，但也不能完全忽略其存在，毕竟还是有很多黑客利用恶意软件能够捕捉到用户的私密信息，同时这几年，Cookies也一直在发展，甚至还有更加敏感的&ldquo;超级Cookies&rdquo;。</p>\r\n\r\n<p>在日常使用PC或者智能设备，定期清理Cookies或许是一个不错的习惯， 当然还有就是，浏览器的隐私模式并不只是给用户浏览成人网站专设的，初衷依然是让Cookies无法追踪用户身份。</p>\r\n\r\n<p>归根结底，Cookies所记录的信息大多数情况下并不涉及严密的个人隐私信息，否则早就被禁用了，而这些可被利用的信息，在广告上看来价值连城，在用户个人看来，有些人可能并不在意，甚至还会当成一种个性化服务的优化。而精准投放的互联网广告，终究是广告商利用Cookies的程度不一，而Cookies表示并不背锅。</p>\r\n\r\n<h2>参考资料</h2>\r\n\r\n<p>1.<a href=\"https://www.jianshu.com/p/71a5c36392f6\" rel=\"nofollow\" target=\"_blank\">Http cookies的用法</a></p>\r\n\r\n<p>2.<a href=\"http://harttle.land/2015/08/10/cookie-session.html\" rel=\"nofollow\" target=\"_blank\">Cookie/Session的机制与安全</a></p>\r\n\r\n<p>3.<a href=\"https://www.jianshu.com/p/abc52bee3898\" rel=\"nofollow\" target=\"_blank\">从广告的精准投放了解cookie跨域</a></p>\r\n\r\n<p>4.<a href=\"http://www.chinaz.com/recorder/cookie-or-bigdata.shtml\" rel=\"nofollow\" target=\"_blank\">当个人隐私遭遇大数据和Cookie</a></p>\r\n\r\n<p>5.<a href=\"http://security.zhiding.cn/security_zone/2013/0319/2149142.shtml\" rel=\"nofollow\" target=\"_blank\">你的隐私安全吗：Cookie到底是什么？</a></p>\r\n\r\n<p>6.<a href=\"http://security.zhiding.cn/security_zone/2013/0319/2149141.shtml\" rel=\"nofollow\" target=\"_blank\">禁用 Cookie 后的网络广告发展</a></p>\r\n\r\n<p>7.<a href=\"https://zh.wikipedia.org/wiki/Cookie\" rel=\"nofollow\" target=\"_blank\">Cookie&mdash;&mdash;维基百科</a></p>\r\n\r\n<p><strong>*本文作者：Andy，转载请注明来自FreeBuf.COM</strong></p>',3,'2019-09-10 17:12:00.000000',10,'RexDu',5,'https://image.3001.net/images/20180122/1516592112711.jpg!small'),(33,'MySQL数据库基础备份','',1,'数据库很重要，没有备份，只能跑路。所以还是做好备份吧！','<p>前言</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>数据库很重要，没有备份，只能跑路。所以还是做好备份吧！</p>\r\n\r\n<p><img src=\"https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=934929450,1177035459&amp;fm=173&amp;app=25&amp;f=JPEG?w=640&amp;h=640&amp;s=32DF256463FFBBCE5E7100870100C081\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysqldump备份</p>\r\n\r\n<p><img src=\"https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=63179589,2229917185&amp;fm=173&amp;app=25&amp;f=JPEG?w=640&amp;h=259&amp;s=8800F11089207D1151D980DA020090B1\" /></p>\r\n\r\n<p>1、备份命令</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>格式：mysqldump -h主机名 -P端口 -u用户名 -p密码 --database 数据库名 &gt; 文件名.sql</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>例如： mysqldump -h 192.168.1.100 -p 3306 -uroot -ppassword --database cmdb &gt; /data/backup/cmdb.sql</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>2、备份压缩</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>导出的数据有可能比较大，不好备份到远程，这时候就需要进行压缩</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>格式：mysqldump -h主机名 -P端口 -u用户名 -p密码 --database 数据库名 | gzip &gt; 文件名.sql.gz</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>例如： mysqldump -h192.168.1.100 -p 3306 -uroot -ppassword --database cmdb | gzip &gt; /data/backup/cmdb.sql.gz</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>3、备份同个库多个表</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>格式：mysqldump -h主机名 -P端口 -u用户名 -p密码 --database 数据库名 表1 表2 .... &gt; 文件名.sql</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>例如 mysqldump -h192.168.1.100 -p3306 -uroot -ppassword cmdb t1 t2 &gt; /data/backup/cmdb_t1_t2.sql</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>4、同时备份多个库</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>格式：mysqldump -h主机名 -P端口 -u用户名 -p密码 --databases 数据库名1 数据库名2 数据库名3 &gt; 文件名.sql</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>例如：mysqldump -h192.168.1.100 -uroot -ppassword --databases cmdb bbs blog &gt; /data/backup/mutil_db.sql</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>5、备份实例上所有的数据库</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>格式：mysqldump -h主机名 -P端口 -u用户名 -p密码 --all-databases &gt; 文件名.sql</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>例如：mysqldump -h192.168.1.100 -p3306 -uroot -ppassword --all-databases &gt; /data/backup/all_db.sql</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>6、备份数据出带删除数据库或者表的sql备份</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>格式：mysqldump -h主机名 -P端口 -u用户名 -p密码 --add-drop-table --add-drop-database 数据库名 &gt; 文件名.sql</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>例如：mysqldump -uroot -ppassword --add-drop-table --add-drop-database cmdb &gt; /data/backup/all_db.sql</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>7、备份数据库结构，不备份数据</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>格式：mysqldump -h主机名 -P端口 -u用户名 -p密码 --no-data 数据库名1 数据库名2 数据库名3 &gt; 文件名.sql</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>例如：mysqldump --no-data &ndash;databases db1 db2 cmdb &gt; /data/backup/structure.sql</p>\r\n\r\n<p><img src=\"https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=3559105743,2661448241&amp;fm=173&amp;app=25&amp;f=JPEG?w=640&amp;h=640&amp;s=7EE3B9566AB35DA772975297030030AF\" /></p>',3,'2019-09-11 09:41:00.000000',15,'RexDu',4,'https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=63179589,2229917185&fm=173&app=25&f=JPEG?w=640&h=259&s=8800F11089207D1151D980DA020090B1');
/*!40000 ALTER TABLE `home_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `home_article_tags`
--

DROP TABLE IF EXISTS `home_article_tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `home_article_tags` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `home_article_tags_article_id_tag_id_d41c09f0_uniq` (`article_id`,`tag_id`),
  KEY `home_article_tags_tag_id_5aaef4e5_fk_home_tag_id` (`tag_id`),
  CONSTRAINT `home_article_tags_article_id_8c6abd85_fk_home_article_id` FOREIGN KEY (`article_id`) REFERENCES `home_article` (`id`),
  CONSTRAINT `home_article_tags_tag_id_5aaef4e5_fk_home_tag_id` FOREIGN KEY (`tag_id`) REFERENCES `home_tag` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `home_article_tags`
--

LOCK TABLES `home_article_tags` WRITE;
/*!40000 ALTER TABLE `home_article_tags` DISABLE KEYS */;
INSERT INTO `home_article_tags` VALUES (14,5,2),(3,11,1),(4,12,2),(2,13,1),(5,14,3),(15,15,2),(16,15,3),(11,18,4),(1,20,1),(6,23,3),(7,24,1),(8,25,1),(9,26,4),(10,27,4),(12,28,2),(13,29,5),(17,30,3),(19,32,5),(20,33,6);
/*!40000 ALTER TABLE `home_article_tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `home_category`
--

DROP TABLE IF EXISTS `home_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `home_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `index` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `home_category`
--

LOCK TABLES `home_category` WRITE;
/*!40000 ALTER TABLE `home_category` DISABLE KEYS */;
INSERT INTO `home_category` VALUES (1,'python',1),(2,'linux',2),(3,'other',999),(4,'windows',3);
/*!40000 ALTER TABLE `home_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `home_comment`
--

DROP TABLE IF EXISTS `home_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `home_comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` longtext NOT NULL,
  `date_publish` datetime(6) NOT NULL,
  `user` varchar(100) NOT NULL,
  `article_id` int(11) DEFAULT NULL,
  `pid_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `home_comment_article_id_130f9732_fk_home_article_id` (`article_id`),
  KEY `home_comment_pid_id_349973a4_fk_home_comment_id` (`pid_id`),
  CONSTRAINT `home_comment_article_id_130f9732_fk_home_article_id` FOREIGN KEY (`article_id`) REFERENCES `home_article` (`id`),
  CONSTRAINT `home_comment_pid_id_349973a4_fk_home_comment_id` FOREIGN KEY (`pid_id`) REFERENCES `home_comment` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `home_comment`
--

LOCK TABLES `home_comment` WRITE;
/*!40000 ALTER TABLE `home_comment` DISABLE KEYS */;
INSERT INTO `home_comment` VALUES (1,'<p><img alt=\"\" src=\"/media/article/2019/09/07/0c6703db7792b0276b14f4920bf3d1d6.gif\" style=\"height:494px; width:658px\" /></p>\r\n','2019-09-07 01:31:20.716984','171.83.9.242',11,NULL),(2,'<p>66666666666666</p>\r\n\r\n<p><img alt=\"\" src=\"/media/article/2019/09/07/a82d72c6f8c69cddac7523471a6addc9.gif\" style=\"height:500px; width:500px\" /></p>\r\n','2019-09-07 01:32:10.298091','171.83.9.242',22,NULL),(3,'<pre>\r\nif read_and_praise.is_praise:\r\n    read_and_praise.is_praise = False\r\n    article.praise_nums -= 1</pre>\r\n','2019-09-07 01:33:38.225152','171.83.9.242',12,NULL),(4,'<p>非常有用！！！！！！！！！！！</p>\r\n','2019-09-07 01:35:59.740003','171.83.9.242',13,NULL),(5,'<p><img alt=\"\" src=\"/media/article/2019/09/07/af9a96b18e46b103f9e9052f3436808a.jpg\" style=\"height:720px; width:1080px\" /></p>\r\n','2019-09-07 17:07:39.770584','171.83.9.242',22,NULL),(6,'<p>666</p>\r\n','2019-09-07 20:26:59.713267','61.151.178.172',20,NULL);
/*!40000 ALTER TABLE `home_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `home_readandpraise`
--

DROP TABLE IF EXISTS `home_readandpraise`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `home_readandpraise` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `ip` varchar(20) NOT NULL,
  `article_id` int(11) NOT NULL,
  `category` int(11) NOT NULL,
  `add_time` datetime(6) NOT NULL,
  `read_nums` int(11) NOT NULL,
  `is_praise` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=57 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `home_readandpraise`
--

LOCK TABLES `home_readandpraise` WRITE;
/*!40000 ALTER TABLE `home_readandpraise` DISABLE KEYS */;
INSERT INTO `home_readandpraise` VALUES (1,'116.66.184.189',6,1,'2019-09-05 15:28:58.490165',10,1),(2,'116.66.184.189',19,1,'2019-09-05 15:35:14.294318',3,1),(3,'116.66.184.189',7,1,'2019-09-05 15:36:27.144718',6,1),(4,'116.66.184.189',14,1,'2019-09-05 16:22:10.532535',1,0),(5,'116.66.184.189',8,1,'2019-09-05 16:22:16.648077',1,0),(6,'116.66.184.189',20,1,'2019-09-05 16:22:23.850114',2,0),(7,'116.66.184.189',13,1,'2019-09-05 16:22:27.368056',2,0),(8,'116.66.184.189',11,1,'2019-09-05 16:22:30.454446',1,0),(9,'171.83.9.242',12,1,'2019-09-05 22:42:09.416799',3,1),(10,'171.83.9.242',6,1,'2019-09-05 22:42:25.519653',2,1),(11,'171.83.9.242',5,1,'2019-09-05 22:42:34.327167',2,1),(12,'171.83.9.242',4,1,'2019-09-05 22:42:40.677923',1,1),(13,'47.101.190.183',1,1,'2019-09-06 11:40:38.143952',1,0),(14,'47.101.201.216',1,1,'2019-09-06 13:00:05.868397',1,0),(15,'47.101.201.216',11,1,'2019-09-06 13:00:05.888231',1,0),(16,'47.101.195.83',1,1,'2019-09-06 16:12:45.123158',1,0),(17,'101.226.225.85',1,1,'2019-09-06 20:44:04.257171',1,0),(18,'101.89.19.197',1,1,'2019-09-06 20:45:08.377088',1,0),(19,'171.83.9.242',11,1,'2019-09-07 01:30:43.935674',2,1),(20,'171.83.9.242',22,1,'2019-09-07 01:31:35.262075',8,1),(21,'171.83.9.242',13,1,'2019-09-07 01:35:41.505373',4,1),(22,'47.101.190.36',1,1,'2019-09-07 04:43:42.794436',1,0),(23,'47.101.200.12',1,1,'2019-09-07 05:33:56.005970',1,0),(24,'47.101.200.12',11,1,'2019-09-07 05:33:56.484021',1,0),(25,'106.15.185.72',1,1,'2019-09-07 11:10:40.027188',1,0),(26,'171.83.9.242',18,1,'2019-09-07 17:44:06.228187',1,0),(27,'61.151.178.172',22,1,'2019-09-07 20:24:31.103190',1,1),(28,'61.151.178.172',20,1,'2019-09-07 20:25:11.532319',3,0),(29,'101.89.19.149',22,1,'2019-09-07 20:25:35.515400',1,0),(30,'101.89.19.149',20,1,'2019-09-07 20:26:13.864378',1,0),(31,'101.91.60.106',20,1,'2019-09-07 20:28:03.500913',1,0),(32,'47.98.100.85',1,1,'2019-09-08 12:37:56.487225',1,0),(33,'47.98.100.85',11,1,'2019-09-08 12:37:56.959543',1,0),(34,'47.101.200.71',1,1,'2019-09-08 14:10:57.215279',1,0),(35,'47.101.199.194',1,1,'2019-09-08 16:21:50.113505',1,0),(36,'116.66.184.190',17,1,'2019-09-09 08:26:31.352383',1,1),(37,'116.66.184.190',15,1,'2019-09-09 10:39:21.525268',2,1),(38,'116.66.184.190',18,1,'2019-09-09 15:55:34.402115',1,0),(39,'106.15.189.219',1,1,'2019-09-09 18:47:12.543541',1,0),(40,'158.69.27.222',25,1,'2019-09-09 21:46:08.498611',1,0),(41,'158.69.27.222',21,1,'2019-09-09 21:46:30.710849',1,0),(42,'158.69.27.222',22,1,'2019-09-09 21:46:31.752180',1,0),(43,'158.69.27.222',7,1,'2019-09-09 21:46:39.128317',1,0),(44,'158.69.27.222',29,1,'2019-09-09 21:46:43.436553',1,0),(45,'158.69.27.222',16,1,'2019-09-09 21:46:44.834803',1,0),(46,'158.69.27.222',20,1,'2019-09-09 21:46:48.219400',1,0),(47,'158.69.27.222',10,1,'2019-09-09 21:46:49.326790',1,0),(48,'171.83.9.242',1,1,'2019-09-09 22:19:15.936704',1,1),(49,'61.151.178.172',4,1,'2019-09-09 22:56:57.483771',1,0),(50,'61.129.6.159',4,1,'2019-09-09 22:58:00.160077',1,0),(51,'116.66.184.190',1,1,'2019-09-10 08:55:51.168603',1,0),(52,'116.66.184.190',4,1,'2019-09-10 09:58:07.741012',1,1),(53,'116.66.184.190',5,1,'2019-09-10 10:17:29.258130',2,0),(54,'116.66.184.190',30,1,'2019-09-10 11:14:34.906697',1,1),(55,'47.101.200.37',1,1,'2019-09-10 17:07:42.355785',1,0),(56,'101.132.134.40',1,1,'2019-09-11 10:36:59.043789',1,0);
/*!40000 ALTER TABLE `home_readandpraise` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `home_tag`
--

DROP TABLE IF EXISTS `home_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `home_tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `home_tag`
--

LOCK TABLES `home_tag` WRITE;
/*!40000 ALTER TABLE `home_tag` DISABLE KEYS */;
INSERT INTO `home_tag` VALUES (1,'玩转Linux'),(2,'python进阶'),(3,'好用工具'),(4,'别看不起windows'),(5,'web开发'),(6,'进击的数据');
/*!40000 ALTER TABLE `home_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Current Database: `mysql`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `mysql` /*!40100 DEFAULT CHARACTER SET latin1 */;

USE `mysql`;

--
-- Table structure for table `columns_priv`
--

DROP TABLE IF EXISTS `columns_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `columns_priv` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Table_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Column_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `Column_priv` set('Select','Insert','Update','References') CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`Host`,`Db`,`User`,`Table_name`,`Column_name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Column privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `columns_priv`
--

LOCK TABLES `columns_priv` WRITE;
/*!40000 ALTER TABLE `columns_priv` DISABLE KEYS */;
/*!40000 ALTER TABLE `columns_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `db`
--

DROP TABLE IF EXISTS `db`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `db` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Select_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Insert_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Update_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Delete_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Drop_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Grant_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `References_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Index_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Show_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Execute_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Event_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Trigger_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Host`,`Db`,`User`),
  KEY `User` (`User`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Database privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `db`
--

LOCK TABLES `db` WRITE;
/*!40000 ALTER TABLE `db` DISABLE KEYS */;
INSERT INTO `db` VALUES ('localhost','performance_schema','mysql.session','Y','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N'),('localhost','sys','mysql.sys','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','Y');
/*!40000 ALTER TABLE `db` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `engine_cost`
--

DROP TABLE IF EXISTS `engine_cost`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `engine_cost` (
  `engine_name` varchar(64) NOT NULL,
  `device_type` int(11) NOT NULL,
  `cost_name` varchar(64) NOT NULL,
  `cost_value` float DEFAULT NULL,
  `last_update` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `comment` varchar(1024) DEFAULT NULL,
  PRIMARY KEY (`cost_name`,`engine_name`,`device_type`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `engine_cost`
--

LOCK TABLES `engine_cost` WRITE;
/*!40000 ALTER TABLE `engine_cost` DISABLE KEYS */;
INSERT INTO `engine_cost` VALUES ('default',0,'io_block_read_cost',NULL,'2019-08-30 01:24:36',NULL),('default',0,'memory_block_read_cost',NULL,'2019-08-30 01:24:36',NULL);
/*!40000 ALTER TABLE `engine_cost` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `event`
--

DROP TABLE IF EXISTS `event`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event` (
  `db` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `name` char(64) NOT NULL DEFAULT '',
  `body` longblob NOT NULL,
  `definer` char(93) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `execute_at` datetime DEFAULT NULL,
  `interval_value` int(11) DEFAULT NULL,
  `interval_field` enum('YEAR','QUARTER','MONTH','DAY','HOUR','MINUTE','WEEK','SECOND','MICROSECOND','YEAR_MONTH','DAY_HOUR','DAY_MINUTE','DAY_SECOND','HOUR_MINUTE','HOUR_SECOND','MINUTE_SECOND','DAY_MICROSECOND','HOUR_MICROSECOND','MINUTE_MICROSECOND','SECOND_MICROSECOND') DEFAULT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `last_executed` datetime DEFAULT NULL,
  `starts` datetime DEFAULT NULL,
  `ends` datetime DEFAULT NULL,
  `status` enum('ENABLED','DISABLED','SLAVESIDE_DISABLED') NOT NULL DEFAULT 'ENABLED',
  `on_completion` enum('DROP','PRESERVE') NOT NULL DEFAULT 'DROP',
  `sql_mode` set('REAL_AS_FLOAT','PIPES_AS_CONCAT','ANSI_QUOTES','IGNORE_SPACE','NOT_USED','ONLY_FULL_GROUP_BY','NO_UNSIGNED_SUBTRACTION','NO_DIR_IN_CREATE','POSTGRESQL','ORACLE','MSSQL','DB2','MAXDB','NO_KEY_OPTIONS','NO_TABLE_OPTIONS','NO_FIELD_OPTIONS','MYSQL323','MYSQL40','ANSI','NO_AUTO_VALUE_ON_ZERO','NO_BACKSLASH_ESCAPES','STRICT_TRANS_TABLES','STRICT_ALL_TABLES','NO_ZERO_IN_DATE','NO_ZERO_DATE','INVALID_DATES','ERROR_FOR_DIVISION_BY_ZERO','TRADITIONAL','NO_AUTO_CREATE_USER','HIGH_NOT_PRECEDENCE','NO_ENGINE_SUBSTITUTION','PAD_CHAR_TO_FULL_LENGTH') NOT NULL DEFAULT '',
  `comment` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `originator` int(10) unsigned NOT NULL,
  `time_zone` char(64) CHARACTER SET latin1 NOT NULL DEFAULT 'SYSTEM',
  `character_set_client` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `collation_connection` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `db_collation` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `body_utf8` longblob,
  PRIMARY KEY (`db`,`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Events';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `event`
--

LOCK TABLES `event` WRITE;
/*!40000 ALTER TABLE `event` DISABLE KEYS */;
/*!40000 ALTER TABLE `event` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `func`
--

DROP TABLE IF EXISTS `func`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `func` (
  `name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `ret` tinyint(1) NOT NULL DEFAULT '0',
  `dl` char(128) COLLATE utf8_bin NOT NULL DEFAULT '',
  `type` enum('function','aggregate') CHARACTER SET utf8 NOT NULL,
  PRIMARY KEY (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='User defined functions';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `func`
--

LOCK TABLES `func` WRITE;
/*!40000 ALTER TABLE `func` DISABLE KEYS */;
/*!40000 ALTER TABLE `func` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `gtid_executed`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE IF NOT EXISTS `gtid_executed` (
  `source_uuid` char(36) NOT NULL COMMENT 'uuid of the source where the transaction was originally executed.',
  `interval_start` bigint(20) NOT NULL COMMENT 'First number of interval.',
  `interval_end` bigint(20) NOT NULL COMMENT 'Last number of interval.',
  PRIMARY KEY (`source_uuid`,`interval_start`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `help_category`
--

DROP TABLE IF EXISTS `help_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `help_category` (
  `help_category_id` smallint(5) unsigned NOT NULL,
  `name` char(64) NOT NULL,
  `parent_category_id` smallint(5) unsigned DEFAULT NULL,
  `url` text NOT NULL,
  PRIMARY KEY (`help_category_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='help categories';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_category`
--

LOCK TABLES `help_category` WRITE;
/*!40000 ALTER TABLE `help_category` DISABLE KEYS */;
INSERT INTO `help_category` VALUES (0,'Contents',0,''),(1,'Help Metadata',0,''),(2,'Data Types',0,''),(3,'Administration',0,''),(4,'Procedures',0,''),(5,'Language Structure',0,''),(6,'Geographic Features',0,''),(7,'MBR',6,''),(8,'WKT',6,''),(9,'Functions',0,''),(10,'Comparison Operators',9,''),(11,'Logical Operators',9,''),(12,'Control Flow Functions',9,''),(13,'String Functions',9,''),(14,'Numeric Functions',9,''),(15,'Date and Time Functions',9,''),(16,'Bit Functions',9,''),(17,'Encryption Functions',9,''),(18,'Locking Functions',9,''),(19,'Information Functions',9,''),(20,'Spatial Functions',9,''),(21,'WKT Functions',20,''),(22,'WKB Functions',20,''),(23,'Geometry Constructors',20,''),(24,'Geometry Property Functions',20,''),(25,'Point Property Functions',20,''),(26,'LineString Property Functions',20,''),(27,'Polygon Property Functions',20,''),(28,'GeometryCollection Property Functions',20,''),(29,'Geometry Relation Functions',20,''),(30,'MBR Functions',20,''),(31,'GROUP BY Functions and Modifiers',9,''),(32,'Miscellaneous Functions',9,''),(33,'Data Definition',0,''),(34,'Data Manipulation',0,''),(35,'Transactions',0,''),(36,'Compound Statements',0,''),(37,'Account Management',0,''),(38,'Table Maintenance',0,''),(39,'User-Defined Functions',0,''),(40,'Plugins',0,''),(41,'Utility',0,''),(42,'Storage Engines',0,'');
/*!40000 ALTER TABLE `help_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `help_keyword`
--

DROP TABLE IF EXISTS `help_keyword`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `help_keyword` (
  `help_keyword_id` int(10) unsigned NOT NULL,
  `name` char(64) NOT NULL,
  PRIMARY KEY (`help_keyword_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='help keywords';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_keyword`
--

LOCK TABLES `help_keyword` WRITE;
/*!40000 ALTER TABLE `help_keyword` DISABLE KEYS */;
INSERT INTO `help_keyword` VALUES (282,'(JSON'),(283,'->'),(285,'->>'),(52,'<>'),(620,'ACCOUNT'),(415,'ACTION'),(46,'ADD'),(108,'AES_DECRYPT'),(109,'AES_ENCRYPT'),(347,'AFTER'),(97,'AGAINST'),(652,'AGGREGATE'),(348,'ALGORITHM'),(482,'ALL'),(47,'ALTER'),(6,'ANALYSE'),(349,'ANALYZE'),(56,'AND'),(319,'ANY_VALUE'),(416,'ARCHIVE'),(216,'AREA'),(483,'AS'),(181,'ASBINARY'),(310,'ASC'),(183,'ASTEXT'),(182,'ASWKB'),(184,'ASWKT'),(404,'AT'),(508,'AUTOCOMMIT'),(440,'AUTOEXTEND_SIZE'),(350,'AUTO_INCREMENT'),(351,'AVG_ROW_LENGTH'),(536,'BEFORE'),(509,'BEGIN'),(57,'BETWEEN'),(74,'BIGINT'),(104,'BINARY'),(677,'BINLOG'),(14,'BOOL'),(15,'BOOLEAN'),(68,'BOTH'),(408,'BTREE'),(231,'BUFFER'),(311,'BY'),(39,'BYTE'),(8,'CACHE'),(448,'CALL'),(417,'CASCADE'),(59,'CASE'),(600,'CATALOG_NAME'),(77,'CEIL'),(78,'CEILING'),(217,'CENTROID'),(510,'CHAIN'),(352,'CHANGE'),(541,'CHANNEL'),(40,'CHAR'),(36,'CHARACTER'),(660,'CHARSET'),(353,'CHECK'),(354,'CHECKSUM'),(621,'CIPHER'),(601,'CLASS_ORIGIN'),(633,'CLIENT'),(454,'CLOSE'),(355,'COALESCE'),(680,'CODE'),(320,'COLLATE'),(662,'COLLATION'),(356,'COLUMN'),(357,'COLUMNS'),(602,'COLUMN_NAME'),(328,'COMMENT'),(511,'COMMIT'),(525,'COMMITTED'),(418,'COMPACT'),(329,'COMPLETION'),(419,'COMPRESSED'),(358,'COMPRESSION'),(468,'CONCURRENT'),(596,'CONDITION'),(359,'CONNECTION'),(512,'CONSISTENT'),(360,'CONSTRAINT'),(603,'CONSTRAINT_CATALOG'),(604,'CONSTRAINT_NAME'),(605,'CONSTRAINT_SCHEMA'),(259,'CONTAINS'),(597,'CONTINUE'),(103,'CONVERT'),(232,'CONVEXHULL'),(309,'COUNT'),(48,'CREATE'),(307,'CREATE_DH_PARAMETERS'),(501,'CROSS'),(240,'CROSSES'),(420,'CSV'),(330,'CURRENT_USER'),(594,'CURSOR'),(606,'CURSOR_NAME'),(321,'DATA'),(322,'DATABASE'),(663,'DATABASES'),(399,'DATAFILE'),(33,'DATE'),(105,'DATETIME'),(81,'DATE_ADD'),(82,'DATE_SUB'),(83,'DAY'),(84,'DAY_HOUR'),(85,'DAY_MINUTE'),(86,'DAY_SECOND'),(584,'DEALLOCATE'),(25,'DEC'),(28,'DECIMAL'),(585,'DECLARE'),(2,'DEFAULT'),(575,'DEFAULT_AUTH'),(331,'DEFINER'),(461,'DELAYED'),(361,'DELAY_KEY_WRITE'),(421,'DELETE'),(312,'DESC'),(695,'DESCRIBE'),(685,'DES_KEY_FILE'),(607,'DIAGNOSTICS'),(189,'DIMENSION'),(323,'DIRECTORY'),(332,'DISABLE'),(362,'DISCARD'),(260,'DISJOINT'),(241,'DISTANCE'),(308,'DISTINCT'),(484,'DISTINCTROW'),(333,'DO'),(363,'DROP'),(500,'DUAL'),(485,'DUMPFILE'),(462,'DUPLICATE'),(422,'DYNAMIC'),(60,'ELSE'),(586,'ELSEIF'),(334,'ENABLE'),(469,'ENCLOSED'),(364,'ENCRYPTION'),(61,'END'),(205,'ENDPOINT'),(405,'ENDS'),(365,'ENGINE'),(664,'ENGINES'),(190,'ENVELOPE'),(261,'EQUALS'),(686,'ERROR'),(665,'ERRORS'),(72,'ESCAPE'),(470,'ESCAPED'),(335,'EVENT'),(678,'EVENTS'),(406,'EVERY'),(366,'EXCHANGE'),(583,'EXECUTE'),(403,'EXISTS'),(598,'EXIT'),(98,'EXPANSION'),(622,'EXPIRE'),(696,'EXPLAIN'),(687,'EXPORT'),(650,'EXTENDED'),(441,'EXTENT_SIZE'),(218,'EXTERIORRING'),(284,'EXTRACTION)'),(12,'FALSE'),(648,'FAST'),(423,'FEDERATED'),(595,'FETCH'),(471,'FIELDS'),(634,'FILE'),(442,'FILE_BLOCK_SIZE'),(565,'FILTER'),(367,'FIRST'),(26,'FIXED'),(29,'FLOAT4'),(30,'FLOAT8'),(75,'FLOOR'),(9,'FLUSH'),(486,'FOR'),(502,'FORCE'),(368,'FOREIGN'),(697,'FORMAT'),(69,'FROM'),(424,'FULL'),(369,'FULLTEXT'),(341,'FUNCTION'),(688,'GENERAL'),(114,'GEOMCOLLFROMTEXT'),(144,'GEOMCOLLFROMWKB'),(174,'GEOMETRYCOLLECTION'),(115,'GEOMETRYCOLLECTIONFROMTEXT'),(145,'GEOMETRYCOLLECTIONFROMWKB'),(116,'GEOMETRYFROMTEXT'),(146,'GEOMETRYFROMWKB'),(227,'GEOMETRYN'),(191,'GEOMETRYTYPE'),(117,'GEOMFROMTEXT'),(147,'GEOMFROMWKB'),(608,'GET'),(206,'GLENGTH'),(526,'GLOBAL'),(635,'GRANT'),(666,'GRANTS'),(343,'GROUP'),(455,'HANDLER'),(487,'HAVING'),(425,'HEAP'),(5,'HELP'),(0,'HELP_DATE'),(1,'HELP_VERSION'),(463,'HIGH_PRIORITY'),(409,'HOST'),(667,'HOSTS'),(87,'HOUR'),(88,'HOUR_MINUTE'),(89,'HOUR_SECOND'),(480,'IDENTIFIED'),(64,'IF'),(464,'IGNORE'),(542,'IGNORE_SERVER_IDS'),(370,'IMPORT'),(99,'IN'),(49,'INDEX'),(668,'INDEXES'),(472,'INFILE'),(400,'INITIAL_SIZE'),(286,'INLINE'),(503,'INNER'),(426,'INNODB'),(65,'INSERT'),(371,'INSERT_METHOD'),(656,'INSTALL'),(342,'INSTANCE'),(16,'INT1'),(19,'INT2'),(20,'INT3'),(22,'INT4'),(24,'INT8'),(23,'INTEGER'),(219,'INTERIORRINGN'),(262,'INTERSECTS'),(90,'INTERVAL'),(465,'INTO'),(576,'IO_THREAD'),(53,'IS'),(207,'ISCLOSED'),(192,'ISEMPTY'),(527,'ISOLATION'),(193,'ISSIMPLE'),(623,'ISSUER'),(587,'ITERATE'),(488,'JOIN'),(106,'JSON'),(290,'JSON_APPEND'),(276,'JSON_ARRAY'),(315,'JSON_ARRAYAGG'),(291,'JSON_ARRAY_APPEND'),(292,'JSON_ARRAY_INSERT'),(279,'JSON_CONTAINS'),(280,'JSON_CONTAINS_PATH'),(301,'JSON_DEPTH'),(281,'JSON_EXTRACT'),(293,'JSON_INSERT'),(288,'JSON_KEYS'),(302,'JSON_LENGTH'),(294,'JSON_MERGE'),(295,'JSON_MERGE_PATCH'),(296,'JSON_MERGE_PRESERVE'),(277,'JSON_OBJECT'),(316,'JSON_OBJECTAGG'),(305,'JSON_PRETTY'),(278,'JSON_QUOTE'),(297,'JSON_REMOVE'),(298,'JSON_REPLACE'),(289,'JSON_SEARCH'),(299,'JSON_SET'),(306,'JSON_STORAGE_SIZE'),(303,'JSON_TYPE'),(300,'JSON_UNQUOTE'),(304,'JSON_VALID'),(50,'KEY'),(372,'KEYS'),(373,'KEY_BLOCK_SIZE'),(693,'KILL'),(456,'LAST'),(70,'LEADING'),(588,'LEAVE'),(694,'LEAVES'),(504,'LEFT'),(528,'LEVEL'),(66,'LIKE'),(449,'LIMIT'),(118,'LINEFROMTEXT'),(148,'LINEFROMWKB'),(473,'LINES'),(175,'LINESTRING'),(119,'LINESTRINGFROMTEXT'),(149,'LINESTRINGFROMWKB'),(474,'LOAD'),(475,'LOCAL'),(374,'LOCK'),(344,'LOGFILE'),(537,'LOGS'),(44,'LONG'),(45,'LONGBINARY'),(589,'LOOP'),(450,'LOW_PRIORITY'),(538,'MASTER'),(543,'MASTER_AUTO_POSITION'),(544,'MASTER_BIND'),(545,'MASTER_CONNECT_RETRY'),(546,'MASTER_HEARTBEAT_PERIOD'),(547,'MASTER_HOST'),(548,'MASTER_LOG_FILE'),(549,'MASTER_LOG_POS'),(550,'MASTER_PASSWORD'),(551,'MASTER_PORT'),(552,'MASTER_RETRY_COUNT'),(553,'MASTER_SSL'),(554,'MASTER_SSL_CA'),(555,'MASTER_SSL_CERT'),(556,'MASTER_SSL_CIPHER'),(557,'MASTER_SSL_CRL'),(558,'MASTER_SSL_CRLPATH'),(559,'MASTER_SSL_KEY'),(560,'MASTER_SSL_VERIFY_SERVER_CERT'),(561,'MASTER_TLS_VERSION'),(562,'MASTER_USER'),(100,'MATCH'),(624,'MAX_CONNECTIONS_PER_HOUR'),(625,'MAX_QUERIES_PER_HOUR'),(375,'MAX_ROWS'),(443,'MAX_SIZE'),(626,'MAX_UPDATES_PER_HOUR'),(627,'MAX_USER_CONNECTIONS'),(252,'MBRCONTAINS'),(253,'MBRDISJOINT'),(254,'MBREQUAL'),(255,'MBRINTERSECTS'),(256,'MBROVERLAPS'),(257,'MBRTOUCHES'),(258,'MBRWITHIN'),(649,'MEDIUM'),(489,'MEMORY'),(427,'MERGE'),(609,'MESSAGE_TEXT'),(21,'MIDDLEINT'),(91,'MINUTE'),(92,'MINUTE_SECOND'),(376,'MIN_ROWS'),(120,'MLINEFROMTEXT'),(150,'MLINEFROMWKB'),(76,'MOD'),(101,'MODE'),(377,'MODIFY'),(93,'MONTH'),(122,'MPOINTFROMTEXT'),(152,'MPOINTFROMWKB'),(124,'MPOLYFROMTEXT'),(154,'MPOLYFROMWKB'),(428,'MRG_MYISAM'),(176,'MULTILINESTRING'),(121,'MULTILINESTRINGFROMTEXT'),(151,'MULTILINESTRINGFROMWKB'),(177,'MULTIPOINT'),(123,'MULTIPOINTFROMTEXT'),(153,'MULTIPOINTFROMWKB'),(178,'MULTIPOLYGON'),(125,'MULTIPOLYGONFROMTEXT'),(155,'MULTIPOLYGONFROMWKB'),(669,'MUTEX'),(429,'MYISAM'),(610,'MYSQL_ERRNO'),(324,'NAME'),(661,'NAMES'),(37,'NATIONAL'),(505,'NATURAL'),(38,'NCHAR'),(430,'NDB'),(431,'NDBCLUSTER'),(628,'NEVER'),(457,'NEXT'),(432,'NO'),(444,'NODEGROUP'),(636,'NONE'),(54,'NOT'),(647,'NO_WRITE_TO_BINLOG'),(55,'NULL'),(611,'NUMBER'),(27,'NUMERIC'),(228,'NUMGEOMETRIES'),(220,'NUMINTERIORRINGS'),(208,'NUMPOINTS'),(41,'NVARCHAR'),(490,'OFFSET'),(336,'ON'),(513,'ONLY'),(458,'OPEN'),(378,'OPTIMIZE'),(689,'OPTIMIZER_COSTS'),(637,'OPTION'),(476,'OPTIONALLY'),(345,'OPTIONS'),(58,'OR'),(313,'ORDER'),(506,'OUTER'),(491,'OUTFILE'),(263,'OVERLAPS'),(410,'OWNER'),(379,'PACK_KEYS'),(380,'PARSER'),(433,'PARTIAL'),(381,'PARTITION'),(382,'PARTITIONING'),(698,'PARTITIONS'),(383,'PASSWORD'),(287,'PATH)'),(657,'PLUGIN'),(681,'PLUGINS'),(577,'PLUGIN_DIR'),(179,'POINT'),(126,'POINTFROMTEXT'),(156,'POINTFROMWKB'),(209,'POINTN'),(127,'POLYFROMTEXT'),(157,'POLYFROMWKB'),(180,'POLYGON'),(128,'POLYGONFROMTEXT'),(158,'POLYGONFROMWKB'),(411,'PORT'),(79,'POW'),(80,'POWER'),(31,'PRECISION'),(533,'PREPARE'),(337,'PRESERVE'),(459,'PREV'),(384,'PRIMARY'),(638,'PRIVILEGES'),(7,'PROCEDURE'),(639,'PROCESS'),(670,'PROCESSLIST'),(682,'PROFILE'),(683,'PROFILES'),(645,'PROXY'),(539,'PURGE'),(10,'QUERY'),(451,'QUICK'),(110,'RANDOM_BYTES'),(460,'READ'),(32,'REAL'),(385,'REBUILD'),(534,'RECOVER'),(434,'REDUNDANT'),(435,'REFERENCES'),(690,'RELAY'),(684,'RELAYLOG'),(563,'RELAY_LOG_FILE'),(564,'RELAY_LOG_POS'),(514,'RELEASE'),(640,'RELOAD'),(386,'REMOVE'),(338,'RENAME'),(387,'REORGANIZE'),(388,'REPAIR'),(590,'REPEAT'),(529,'REPEATABLE'),(477,'REPLACE'),(566,'REPLICATE_DO_DB'),(567,'REPLICATE_DO_TABLE'),(568,'REPLICATE_IGNORE_DB'),(569,'REPLICATE_IGNORE_TABLE'),(570,'REPLICATE_REWRITE_DB'),(571,'REPLICATE_WILD_DO_TABLE'),(572,'REPLICATE_WILD_IGNORE_TABLE'),(573,'REPLICATION'),(629,'REQUIRE'),(11,'RESET'),(617,'RESIGNAL'),(438,'RESTRICT'),(592,'RETURN'),(612,'RETURNED_SQLSTATE'),(653,'RETURNS'),(646,'REVOKE'),(507,'RIGHT'),(73,'RLIKE'),(515,'ROLLBACK'),(481,'ROWS'),(613,'ROW_COUNT'),(389,'ROW_FORMAT'),(521,'SAVEPOINT'),(339,'SCHEDULE'),(325,'SCHEMA'),(671,'SCHEMAS'),(614,'SCHEMA_NAME'),(94,'SECOND'),(641,'SECURITY'),(466,'SELECT'),(314,'SEPARATOR'),(3,'SERIAL'),(530,'SERIALIZABLE'),(346,'SERVER'),(531,'SESSION'),(326,'SET'),(111,'SHA'),(112,'SHA1'),(113,'SHA2'),(492,'SHARE'),(672,'SHOW'),(642,'SHUTDOWN'),(619,'SIGNAL'),(107,'SIGNED'),(340,'SLAVE'),(691,'SLOW'),(516,'SNAPSHOT'),(412,'SOCKET'),(654,'SONAME'),(67,'SOUNDS'),(390,'SPATIAL'),(618,'SQLSTATE'),(578,'SQL_AFTER_GTIDS'),(579,'SQL_AFTER_MTS_GAPS'),(580,'SQL_BEFORE_GTIDS'),(493,'SQL_BIG_RESULT'),(494,'SQL_BUFFER_RESULT'),(495,'SQL_CACHE'),(496,'SQL_CALC_FOUND_ROWS'),(540,'SQL_LOG_BIN'),(497,'SQL_NO_CACHE'),(574,'SQL_SLAVE_SKIP_COUNTER'),(498,'SQL_SMALL_RESULT'),(581,'SQL_THREAD'),(194,'SRID'),(630,'SSL'),(517,'START'),(478,'STARTING'),(215,'STARTPOINT'),(407,'STARTS'),(391,'STATS_AUTO_RECALC'),(392,'STATS_PERSISTENT'),(393,'STATS_SAMPLE_PAGES'),(673,'STATUS'),(317,'STD'),(318,'STDDEV'),(582,'STOP'),(679,'STORAGE'),(436,'STORED'),(499,'STRAIGHT_JOIN'),(655,'STRING'),(221,'ST_AREA'),(185,'ST_ASBINARY'),(269,'ST_ASGEOJSON'),(187,'ST_ASTEXT'),(186,'ST_ASWKB'),(188,'ST_ASWKT'),(233,'ST_BUFFER'),(234,'ST_BUFFER_STRATEGY'),(222,'ST_CENTROID'),(242,'ST_CONTAINS'),(235,'ST_CONVEXHULL'),(243,'ST_CROSSES'),(236,'ST_DIFFERENCE'),(195,'ST_DIMENSION'),(244,'ST_DISJOINT'),(245,'ST_DISTANCE'),(271,'ST_DISTANCE_SPHERE'),(210,'ST_ENDPOINT'),(196,'ST_ENVELOPE'),(246,'ST_EQUALS'),(223,'ST_EXTERIORRING'),(265,'ST_GEOHASH'),(129,'ST_GEOMCOLLFROMTEXT'),(159,'ST_GEOMCOLLFROMWKB'),(130,'ST_GEOMETRYCOLLECTIONFROMTEXT'),(160,'ST_GEOMETRYCOLLECTIONFROMWKB'),(131,'ST_GEOMETRYFROMTEXT'),(161,'ST_GEOMETRYFROMWKB'),(229,'ST_GEOMETRYN'),(197,'ST_GEOMETRYTYPE'),(270,'ST_GEOMFROMGEOJSON'),(132,'ST_GEOMFROMTEXT'),(162,'ST_GEOMFROMWKB'),(224,'ST_INTERIORRINGN'),(237,'ST_INTERSECTION'),(247,'ST_INTERSECTS'),(211,'ST_ISCLOSED'),(198,'ST_ISEMPTY'),(199,'ST_ISSIMPLE'),(272,'ST_ISVALID'),(266,'ST_LATFROMGEOHASH'),(133,'ST_LINEFROMTEXT'),(163,'ST_LINEFROMWKB'),(134,'ST_LINESTRINGFROMTEXT'),(164,'ST_LINESTRINGFROMWKB'),(267,'ST_LONGFROMGEOHASH'),(273,'ST_MAKEENVELOPE'),(135,'ST_MLINEFROMTEXT'),(165,'ST_MLINEFROMWKB'),(137,'ST_MPOINTFROMTEXT'),(167,'ST_MPOINTFROMWKB'),(139,'ST_MPOLYFROMTEXT'),(169,'ST_MPOLYFROMWKB'),(136,'ST_MULTILINESTRINGFROMTEXT'),(166,'ST_MULTILINESTRINGFROMWKB'),(138,'ST_MULTIPOINTFROMTEXT'),(168,'ST_MULTIPOINTFROMWKB'),(140,'ST_MULTIPOLYGONFROMTEXT'),(170,'ST_MULTIPOLYGONFROMWKB'),(230,'ST_NUMGEOMETRIES'),(225,'ST_NUMINTERIORRING'),(226,'ST_NUMINTERIORRINGS'),(212,'ST_NUMPOINTS'),(248,'ST_OVERLAPS'),(268,'ST_POINTFROMGEOHASH'),(141,'ST_POINTFROMTEXT'),(171,'ST_POINTFROMWKB'),(213,'ST_POINTN'),(142,'ST_POLYFROMTEXT'),(172,'ST_POLYFROMWKB'),(143,'ST_POLYGONFROMTEXT'),(173,'ST_POLYGONFROMWKB'),(274,'ST_SIMPLIFY'),(200,'ST_SRID'),(214,'ST_STARTPOINT'),(238,'ST_SYMDIFFERENCE'),(249,'ST_TOUCHES'),(239,'ST_UNION'),(275,'ST_VALIDATE'),(250,'ST_WITHIN'),(201,'ST_X'),(202,'ST_Y'),(615,'SUBCLASS_ORIGIN'),(631,'SUBJECT'),(643,'SUPER'),(51,'TABLE'),(523,'TABLES'),(394,'TABLESPACE'),(616,'TABLE_NAME'),(447,'TEMPORARY'),(479,'TERMINATED'),(62,'THEN'),(35,'TIME'),(34,'TIMESTAMP'),(522,'TO'),(251,'TOUCHES'),(699,'TRADITIONAL'),(71,'TRAILING'),(518,'TRANSACTION'),(446,'TRIGGER'),(674,'TRIGGERS'),(13,'TRUE'),(395,'TRUNCATE'),(396,'TYPE'),(532,'UNCOMMITTED'),(599,'UNDO'),(658,'UNINSTALL'),(397,'UNION'),(398,'UNIQUE'),(524,'UNLOCK'),(17,'UNSIGNED'),(591,'UNTIL'),(439,'UPDATE'),(327,'UPGRADE'),(644,'USAGE'),(445,'USE'),(413,'USER'),(692,'USER_RESOURCES'),(651,'USE_FRM'),(452,'USING'),(4,'VALUE'),(467,'VALUES'),(42,'VARCHARACTER'),(659,'VARIABLE'),(675,'VARIABLES'),(43,'VARYING'),(402,'VIEW'),(437,'VIRTUAL'),(401,'WAIT'),(676,'WARNINGS'),(63,'WHEN'),(453,'WHERE'),(593,'WHILE'),(102,'WITH'),(264,'WITHIN'),(519,'WORK'),(414,'WRAPPER'),(520,'WRITE'),(203,'X'),(632,'X509'),(535,'XA'),(204,'Y'),(95,'YEAR'),(96,'YEAR_MONTH'),(18,'ZEROFILL');
/*!40000 ALTER TABLE `help_keyword` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `help_relation`
--

DROP TABLE IF EXISTS `help_relation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `help_relation` (
  `help_topic_id` int(10) unsigned NOT NULL,
  `help_keyword_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`help_keyword_id`,`help_topic_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='keyword-topic relation';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_relation`
--

LOCK TABLES `help_relation` WRITE;
/*!40000 ALTER TABLE `help_relation` DISABLE KEYS */;
INSERT INTO `help_relation` VALUES (0,0),(1,1),(2,2),(487,2),(488,2),(495,2),(498,2),(499,2),(506,2),(507,2),(528,2),(533,2),(565,2),(583,2),(584,2),(2,3),(506,3),(2,4),(528,4),(533,4),(581,4),(582,4),(3,5),(658,5),(4,6),(4,7),(493,7),(503,7),(504,7),(515,7),(516,7),(534,7),(603,7),(615,7),(634,7),(635,7),(5,8),(649,8),(650,8),(652,8),(653,8),(5,9),(650,9),(5,10),(229,10),(650,10),(651,10),(653,10),(5,11),(551,11),(555,11),(653,11),(6,12),(7,12),(6,13),(7,13),(9,14),(10,14),(9,15),(229,15),(9,16),(9,17),(13,17),(15,17),(16,17),(18,17),(19,17),(232,17),(9,18),(13,18),(15,18),(16,18),(18,18),(19,18),(11,19),(12,20),(12,21),(13,22),(13,23),(232,23),(595,23),(15,24),(16,25),(16,26),(506,26),(16,27),(17,28),(232,28),(595,28),(18,29),(19,30),(19,31),(19,32),(595,32),(21,33),(177,33),(179,33),(232,33),(23,34),(213,34),(24,35),(211,35),(232,35),(26,36),(28,36),(487,36),(488,36),(495,36),(498,36),(499,36),(506,36),(531,36),(532,36),(534,36),(600,36),(601,36),(603,36),(607,36),(26,37),(28,37),(26,38),(27,39),(27,40),(232,40),(28,41),(28,42),(28,43),(37,44),(37,45),(46,46),(495,46),(496,46),(508,46),(46,47),(487,47),(488,47),(489,47),(490,47),(491,47),(492,47),(493,47),(494,47),(495,47),(496,47),(497,47),(583,47),(586,47),(46,48),(498,48),(499,48),(500,48),(501,48),(502,48),(503,48),(504,48),(505,48),(506,48),(508,48),(509,48),(510,48),(584,48),(595,48),(603,48),(611,48),(612,48),(613,48),(614,48),(615,48),(616,48),(618,48),(46,49),(495,49),(501,49),(506,49),(514,49),(536,49),(603,49),(629,49),(649,49),(652,49),(46,50),(495,50),(506,50),(507,50),(528,50),(46,51),(495,51),(506,51),(518,51),(522,51),(523,51),(590,51),(591,51),(592,51),(593,51),(594,51),(603,51),(616,51),(643,51),(49,52),(54,53),(55,53),(56,53),(57,53),(55,54),(57,54),(67,54),(498,54),(499,54),(500,54),(584,54),(56,55),(57,55),(507,55),(58,56),(68,56),(58,57),(69,58),(73,59),(566,59),(73,60),(566,60),(73,61),(548,61),(563,61),(566,61),(567,61),(570,61),(571,61),(573,61),(73,62),(566,62),(567,62),(73,63),(566,63),(74,64),(498,64),(499,64),(500,64),(511,64),(512,64),(513,64),(517,64),(518,64),(521,64),(567,64),(583,64),(584,64),(585,64),(92,65),(528,65),(529,65),(530,65),(116,66),(603,66),(609,66),(610,66),(116,67),(122,68),(122,69),(525,69),(534,69),(603,69),(606,69),(609,69),(610,69),(629,69),(639,69),(122,70),(122,71),(127,72),(131,73),(137,74),(137,75),(138,76),(157,76),(144,77),(145,78),(159,79),(160,80),(179,81),(179,82),(179,83),(179,84),(179,85),(179,86),(179,87),(179,88),(179,89),(179,90),(500,90),(583,90),(584,90),(179,91),(179,92),(179,93),(179,94),(179,95),(179,96),(229,97),(229,98),(229,99),(534,99),(606,99),(609,99),(610,99),(629,99),(639,99),(229,100),(229,101),(534,101),(229,102),(495,102),(501,102),(506,102),(583,102),(584,102),(586,102),(650,102),(231,103),(232,103),(232,104),(549,104),(550,104),(604,104),(605,104),(650,104),(232,105),(232,106),(655,106),(656,106),(657,106),(232,107),(242,108),(243,109),(253,110),(254,111),(254,112),(255,113),(279,114),(279,115),(280,116),(280,117),(281,118),(281,119),(282,120),(282,121),(283,122),(283,123),(284,124),(284,125),(285,126),(286,127),(286,128),(287,129),(287,130),(288,131),(288,132),(289,133),(289,134),(290,135),(290,136),(291,137),(291,138),(292,139),(292,140),(293,141),(294,142),(294,143),(295,144),(295,145),(296,146),(296,147),(297,148),(297,149),(298,150),(298,151),(299,152),(299,153),(300,154),(300,155),(301,156),(302,157),(302,158),(303,159),(303,160),(304,161),(304,162),(305,163),(305,164),(306,165),(306,166),(307,167),(307,168),(308,169),(308,170),(309,171),(310,172),(310,173),(311,174),(312,175),(313,176),(314,177),(315,178),(316,179),(317,180),(318,181),(318,182),(319,183),(319,184),(320,185),(320,186),(321,187),(321,188),(322,189),(323,190),(324,191),(325,192),(326,193),(327,194),(328,195),(329,196),(330,197),(331,198),(332,199),(333,200),(334,201),(335,202),(336,203),(337,204),(338,205),(339,206),(340,207),(341,208),(342,209),(343,210),(344,211),(346,212),(347,213),(348,214),(349,215),(350,216),(351,217),(352,218),(353,219),(354,220),(355,221),(356,222),(357,223),(358,224),(359,225),(359,226),(360,227),(361,228),(362,229),(363,230),(364,231),(365,232),(366,233),(367,234),(368,235),(369,236),(370,237),(371,238),(372,239),(373,240),(374,241),(375,242),(376,243),(377,244),(378,245),(379,246),(380,247),(381,248),(382,249),(383,250),(384,251),(385,252),(388,253),(389,254),(391,255),(392,256),(393,257),(394,258),(395,259),(396,260),(397,261),(398,262),(399,263),(400,264),(401,265),(402,266),(403,267),(404,268),(405,269),(406,270),(407,271),(408,272),(409,273),(410,274),(411,275),(412,276),(413,277),(414,278),(415,279),(416,280),(417,281),(418,282),(419,282),(418,283),(418,284),(419,285),(419,286),(419,287),(420,288),(421,289),(422,290),(423,291),(424,292),(425,293),(426,294),(427,295),(428,296),(429,297),(430,298),(431,299),(432,300),(433,301),(434,302),(435,303),(436,304),(437,305),(438,306),(450,307),(452,308),(457,308),(458,308),(461,308),(462,308),(467,308),(534,308),(537,308),(457,309),(624,309),(647,309),(458,310),(534,310),(458,311),(495,311),(506,311),(525,311),(531,311),(532,311),(534,311),(538,311),(583,311),(584,311),(586,311),(458,312),(534,312),(655,312),(656,312),(657,312),(458,313),(495,313),(525,313),(534,313),(538,313),(458,314),(459,315),(460,316),(463,317),(464,318),(471,319),(487,320),(488,320),(495,320),(498,320),(499,320),(506,320),(487,321),(488,321),(495,321),(505,321),(506,321),(531,321),(487,322),(488,322),(498,322),(499,322),(505,322),(511,322),(512,322),(603,322),(611,322),(612,322),(487,323),(488,323),(495,323),(506,323),(487,324),(488,324),(487,325),(488,325),(498,325),(499,325),(511,325),(512,325),(603,325),(611,325),(612,325),(487,326),(488,326),(495,326),(498,326),(499,326),(506,326),(507,326),(528,326),(531,326),(532,326),(533,326),(534,326),(538,326),(539,326),(540,326),(541,326),(542,326),(552,326),(556,326),(581,326),(582,326),(589,326),(599,326),(600,326),(601,326),(602,326),(603,326),(607,326),(487,327),(488,327),(495,327),(591,327),(489,328),(495,328),(500,328),(501,328),(506,328),(508,328),(489,329),(500,329),(489,330),(500,330),(489,331),(500,331),(489,332),(495,332),(500,332),(489,333),(500,333),(526,333),(573,333),(489,334),(495,334),(500,334),(489,335),(500,335),(513,335),(613,335),(489,336),(500,336),(507,336),(536,336),(489,337),(500,337),(489,338),(495,338),(522,338),(587,338),(489,339),(500,339),(489,340),(500,340),(555,340),(557,340),(558,340),(640,340),(641,340),(653,340),(490,341),(503,341),(504,341),(515,341),(516,341),(595,341),(596,341),(603,341),(614,341),(626,341),(627,341),(491,342),(492,343),(502,343),(508,343),(534,343),(492,344),(502,344),(508,344),(494,345),(505,345),(494,346),(505,346),(517,346),(495,347),(495,348),(495,349),(590,349),(495,350),(495,351),(506,351),(495,352),(553,352),(554,352),(495,353),(506,353),(591,353),(495,354),(506,354),(592,354),(495,355),(495,356),(495,357),(506,357),(531,357),(603,357),(609,357),(610,357),(495,358),(495,359),(506,359),(651,359),(655,359),(656,359),(657,359),(495,360),(506,360),(495,361),(506,361),(495,362),(495,363),(496,363),(511,363),(512,363),(513,363),(514,363),(515,363),(516,363),(517,363),(518,363),(519,363),(520,363),(521,363),(561,363),(562,363),(585,363),(596,363),(495,364),(495,365),(496,365),(506,365),(508,365),(519,365),(603,365),(622,365),(650,365),(495,366),(495,367),(506,367),(527,367),(495,368),(505,368),(506,368),(507,368),(495,369),(501,369),(506,369),(495,370),(531,370),(495,371),(506,371),(495,372),(603,372),(629,372),(495,373),(506,373),(495,374),(534,374),(546,374),(583,374),(584,374),(650,374),(495,375),(506,375),(495,376),(506,376),(495,377),(495,378),(593,378),(495,379),(506,379),(495,380),(501,380),(506,380),(495,381),(506,381),(525,381),(528,381),(531,381),(533,381),(534,381),(536,381),(649,381),(652,381),(495,382),(495,383),(505,383),(557,383),(583,383),(584,383),(586,383),(589,383),(495,384),(495,385),(495,386),(495,387),(495,388),(594,388),(495,389),(506,389),(495,390),(501,390),(495,391),(506,391),(495,392),(506,392),(495,393),(506,393),(495,394),(496,394),(508,394),(519,394),(495,395),(523,395),(495,396),(495,397),(537,397),(495,398),(496,399),(508,399),(496,400),(508,400),(496,401),(508,401),(497,402),(510,402),(521,402),(498,403),(499,403),(500,403),(511,403),(512,403),(513,403),(517,403),(518,403),(521,403),(583,403),(584,403),(585,403),(500,404),(500,405),(500,406),(500,407),(501,408),(505,409),(505,410),(505,411),(505,412),(505,413),(557,413),(583,413),(584,413),(585,413),(587,413),(618,413),(505,414),(506,415),(507,415),(506,416),(506,417),(507,417),(518,417),(521,417),(506,418),(506,419),(506,420),(531,420),(506,421),(507,421),(525,421),(506,422),(506,423),(506,424),(603,424),(609,424),(610,424),(636,424),(644,424),(506,425),(506,426),(603,426),(506,427),(506,428),(506,429),(506,430),(506,431),(506,432),(507,432),(506,433),(506,434),(506,435),(507,435),(586,435),(506,436),(506,437),(507,438),(518,438),(521,438),(507,439),(528,439),(534,439),(538,439),(508,440),(508,441),(508,442),(508,443),(508,444),(508,445),(536,445),(659,445),(509,446),(520,446),(603,446),(518,447),(524,448),(525,449),(527,449),(534,449),(538,449),(606,449),(639,449),(525,450),(528,450),(531,450),(532,450),(533,450),(538,450),(546,450),(525,451),(591,451),(594,451),(525,452),(536,452),(560,452),(525,453),(527,453),(538,453),(609,453),(610,453),(629,453),(527,454),(574,454),(527,455),(579,455),(527,456),(527,457),(527,458),(577,458),(603,458),(631,458),(527,459),(527,460),(539,460),(540,460),(541,460),(542,460),(546,460),(547,460),(548,460),(650,460),(528,461),(530,461),(533,461),(528,462),(528,463),(534,463),(528,464),(531,464),(532,464),(534,464),(536,464),(538,464),(652,464),(528,465),(533,465),(534,465),(652,465),(528,466),(529,466),(533,466),(534,466),(655,466),(656,466),(657,466),(528,467),(533,467),(531,468),(532,468),(531,469),(531,470),(531,471),(603,471),(609,471),(610,471),(531,472),(532,472),(531,473),(532,473),(531,474),(652,474),(531,475),(532,475),(546,475),(590,475),(593,475),(594,475),(650,475),(531,476),(531,477),(532,477),(533,477),(531,478),(531,479),(532,480),(583,480),(584,480),(586,480),(532,481),(534,482),(537,482),(555,482),(586,482),(588,482),(649,482),(652,482),(534,483),(536,483),(546,483),(583,483),(584,483),(534,484),(534,485),(534,486),(553,486),(555,486),(557,486),(558,486),(575,486),(578,486),(579,486),(589,486),(603,486),(639,486),(641,486),(650,486),(655,486),(656,486),(657,486),(534,487),(534,488),(536,488),(534,489),(534,490),(534,491),(534,492),(534,493),(534,494),(534,495),(534,496),(534,497),(534,498),(534,499),(536,499),(535,500),(536,501),(536,502),(536,503),(536,504),(536,505),(536,506),(536,507),(539,508),(540,508),(541,508),(542,508),(539,509),(540,509),(541,509),(542,509),(548,509),(563,509),(539,510),(540,510),(541,510),(542,510),(539,511),(540,511),(541,511),(542,511),(548,511),(539,512),(540,512),(541,512),(542,512),(548,512),(539,513),(540,513),(541,513),(542,513),(547,513),(548,513),(539,514),(540,514),(541,514),(542,514),(543,514),(544,514),(545,514),(548,514),(539,515),(540,515),(541,515),(542,515),(543,515),(544,515),(545,515),(548,515),(539,516),(540,516),(541,516),(542,516),(548,516),(539,517),(540,517),(541,517),(542,517),(548,517),(557,517),(539,518),(540,518),(541,518),(542,518),(547,518),(539,519),(540,519),(541,519),(542,519),(539,520),(540,520),(541,520),(542,520),(546,520),(547,520),(548,520),(543,521),(544,521),(545,521),(543,522),(544,522),(545,522),(549,522),(550,522),(553,522),(546,523),(603,523),(631,523),(644,523),(650,523),(546,524),(583,524),(584,524),(547,525),(547,526),(556,526),(599,526),(642,526),(646,526),(547,527),(547,528),(547,529),(547,530),(547,531),(599,531),(642,531),(646,531),(547,532),(548,533),(559,533),(561,533),(562,533),(548,534),(548,535),(549,536),(550,536),(549,537),(550,537),(603,537),(604,537),(605,537),(650,537),(549,538),(550,538),(551,538),(553,538),(604,538),(605,538),(630,538),(653,538),(549,539),(550,539),(552,540),(553,541),(555,541),(557,541),(558,541),(639,541),(641,541),(650,541),(553,542),(553,543),(553,544),(553,545),(553,546),(553,547),(553,548),(553,549),(553,550),(553,551),(553,552),(553,553),(553,554),(553,555),(553,556),(553,557),(553,558),(553,559),(553,560),(553,561),(553,562),(553,563),(553,564),(554,565),(554,566),(554,567),(554,568),(554,569),(554,570),(554,571),(554,572),(554,573),(586,573),(556,574),(557,575),(557,576),(558,576),(557,577),(557,578),(557,579),(557,580),(557,581),(558,581),(558,582),(560,583),(586,583),(561,584),(562,584),(565,585),(575,585),(578,585),(579,585),(567,586),(568,587),(569,588),(570,589),(571,590),(571,591),(572,592),(573,593),(575,594),(576,595),(578,596),(579,597),(579,598),(579,599),(580,600),(581,600),(582,600),(580,601),(581,601),(582,601),(580,602),(581,602),(582,602),(580,603),(581,603),(582,603),(580,604),(581,604),(582,604),(580,605),(581,605),(582,605),(580,606),(581,606),(582,606),(580,607),(580,608),(580,609),(581,609),(582,609),(580,610),(581,610),(582,610),(580,611),(580,612),(580,613),(580,614),(581,614),(582,614),(580,615),(581,615),(582,615),(580,616),(581,616),(582,616),(581,617),(581,618),(582,618),(582,619),(583,620),(584,620),(583,621),(584,621),(586,621),(583,622),(584,622),(583,623),(584,623),(586,623),(583,624),(584,624),(586,624),(583,625),(584,625),(586,625),(583,626),(584,626),(586,626),(583,627),(584,627),(586,627),(583,628),(584,628),(583,629),(584,629),(586,629),(583,630),(584,630),(586,630),(583,631),(584,631),(586,631),(583,632),(584,632),(586,632),(586,633),(586,634),(586,635),(588,635),(586,636),(586,637),(588,637),(586,638),(588,638),(633,638),(650,638),(586,639),(586,640),(586,641),(586,642),(654,642),(586,643),(586,644),(588,645),(588,646),(590,647),(593,647),(594,647),(650,647),(591,648),(591,649),(594,650),(655,650),(656,650),(657,650),(594,651),(595,652),(595,653),(595,654),(595,655),(597,656),(597,657),(598,657),(603,657),(598,658),(599,659),(600,660),(601,660),(602,661),(603,662),(608,662),(603,663),(620,663),(621,663),(603,664),(623,664),(603,665),(624,665),(603,666),(628,666),(603,667),(640,667),(650,667),(603,668),(603,669),(622,669),(603,670),(636,670),(603,671),(620,671),(621,671),(603,672),(604,672),(605,672),(606,672),(607,672),(608,672),(609,672),(610,672),(611,672),(612,672),(613,672),(614,672),(615,672),(616,672),(618,672),(620,672),(621,672),(622,672),(623,672),(624,672),(625,672),(626,672),(627,672),(628,672),(629,672),(630,672),(631,672),(632,672),(633,672),(634,672),(635,672),(636,672),(637,672),(638,672),(639,672),(640,672),(641,672),(642,672),(643,672),(644,672),(645,672),(646,672),(647,672),(603,673),(622,673),(627,673),(630,673),(635,673),(641,673),(642,673),(643,673),(650,673),(603,674),(645,674),(603,675),(646,675),(603,676),(647,676),(606,677),(648,677),(606,678),(625,678),(639,678),(623,679),(626,680),(634,680),(632,681),(637,682),(638,683),(639,684),(650,685),(650,686),(650,687),(650,688),(650,689),(650,690),(650,691),(650,692),(651,693),(652,694),(655,695),(656,695),(657,695),(655,696),(656,696),(657,696),(655,697),(656,697),(657,697),(655,698),(656,698),(657,698),(655,699),(656,699),(657,699);
/*!40000 ALTER TABLE `help_relation` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `help_topic`
--

DROP TABLE IF EXISTS `help_topic`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `help_topic` (
  `help_topic_id` int(10) unsigned NOT NULL,
  `name` char(64) NOT NULL,
  `help_category_id` smallint(5) unsigned NOT NULL,
  `description` text NOT NULL,
  `example` text NOT NULL,
  `url` text NOT NULL,
  PRIMARY KEY (`help_topic_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='help topics';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_topic`
--

LOCK TABLES `help_topic` WRITE;
/*!40000 ALTER TABLE `help_topic` DISABLE KEYS */;
INSERT INTO `help_topic` VALUES (0,'HELP_DATE',1,'This help information was generated from the MySQL 5.7 Reference Manual\non: 2019-06-08\n','',''),(1,'HELP_VERSION',1,'This help information was generated from the MySQL 5.7 Reference Manual\non: 2019-06-08 (revision: 62323)\n\nThis information applies to MySQL 5.7 through 5.7.28.\n','',''),(2,'AUTO_INCREMENT',2,'The AUTO_INCREMENT attribute can be used to generate a unique identity\nfor new rows:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/example-auto-increment.html\n\n','CREATE TABLE animals (\n     id MEDIUMINT NOT NULL AUTO_INCREMENT,\n     name CHAR(30) NOT NULL,\n     PRIMARY KEY (id)\n);\n\nINSERT INTO animals (name) VALUES\n    (\'dog\'),(\'cat\'),(\'penguin\'),\n    (\'lax\'),(\'whale\'),(\'ostrich\');\n\nSELECT * FROM animals;\n','https://dev.mysql.com/doc/refman/5.7/en/example-auto-increment.html'),(3,'HELP COMMAND',3,'Syntax:\nmysql> help search_string\n\nIf you provide an argument to the help command, mysql uses it as a\nsearch string to access server-side help from the contents of the MySQL\nReference Manual. The proper operation of this command requires that\nthe help tables in the mysql database be initialized with help topic\ninformation (see\nhttps://dev.mysql.com/doc/refman/5.7/en/server-side-help-support.html).\n\nIf there is no match for the search string, the search fails:\n\nmysql> help me\n\nNothing found\nPlease try to run \'help contents\' for a list of all accessible topics\n\nUse help contents to see a list of the help categories:\n\nmysql> help contents\nYou asked for help about help category: \"Contents\"\nFor more information, type \'help <item>\', where <item> is one of the\nfollowing categories:\n   Account Management\n   Administration\n   Data Definition\n   Data Manipulation\n   Data Types\n   Functions\n   Functions and Modifiers for Use with GROUP BY\n   Geographic Features\n   Language Structure\n   Plugins\n   Storage Engines\n   Stored Routines\n   Table Maintenance\n   Transactions\n   Triggers\n\nIf the search string matches multiple items, mysql shows a list of\nmatching topics:\n\nmysql> help logs\nMany help items for your request exist.\nTo make a more specific request, please type \'help <item>\',\nwhere <item> is one of the following topics:\n   SHOW\n   SHOW BINARY LOGS\n   SHOW ENGINE\n   SHOW LOGS\n\nUse a topic as the search string to see the help entry for that topic:\n\nmysql> help show binary logs\nName: \'SHOW BINARY LOGS\'\nDescription:\nSyntax:\nSHOW BINARY LOGS\nSHOW MASTER LOGS\n\nLists the binary log files on the server. This statement is used as\npart of the procedure described in [purge-binary-logs], that shows how\nto determine which logs can be purged.\n\nmysql> SHOW BINARY LOGS;\n+---------------+-----------+\n| Log_name      | File_size |\n+---------------+-----------+\n| binlog.000015 |    724935 |\n| binlog.000016 |    733481 |\n+---------------+-----------+\n\nThe search string can contain the wildcard characters % and _. These\nhave the same meaning as for pattern-matching operations performed with\nthe LIKE operator. For example, HELP rep% returns a list of topics that\nbegin with rep:\n\nmysql> HELP rep%\nMany help items for your request exist.\nTo make a more specific request, please type \'help <item>\',\nwhere <item> is one of the following\ntopics:\n   REPAIR TABLE\n   REPEAT FUNCTION\n   REPEAT LOOP\n   REPLACE\n   REPLACE FUNCTION\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mysql-server-side-help.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/mysql-server-side-help.html'),(4,'PROCEDURE ANALYSE',4,'Syntax:\nANALYSE([max_elements[,max_memory]])\n\n*Note*:\n\nPROCEDURE ANALYSE() is deprecated as of MySQL 5.7.18, and is removed in\nMySQL 8.0.\n\nANALYSE() examines the result from a query and returns an analysis of\nthe results that suggests optimal data types for each column that may\nhelp reduce table sizes. To obtain this analysis, append PROCEDURE\nANALYSE to the end of a SELECT statement:\n\nSELECT ... FROM ... WHERE ... PROCEDURE ANALYSE([max_elements,[max_memory]])\n\nFor example:\n\nSELECT col1, col2 FROM table1 PROCEDURE ANALYSE(10, 2000);\n\nThe results show some statistics for the values returned by the query,\nand propose an optimal data type for the columns. This can be helpful\nfor checking your existing tables, or after importing new data. You may\nneed to try different settings for the arguments so that PROCEDURE\nANALYSE() does not suggest the ENUM data type when it is not\nappropriate.\n\nThe arguments are optional and are used as follows:\n\no max_elements (default 256) is the maximum number of distinct values\n  that ANALYSE() notices per column. This is used by ANALYSE() to check\n  whether the optimal data type should be of type ENUM; if there are\n  more than max_elements distinct values, then ENUM is not a suggested\n  type.\n\no max_memory (default 8192) is the maximum amount of memory that\n  ANALYSE() should allocate per column while trying to find all\n  distinct values.\n\nA PROCEDURE clause is not permitted in a UNION statement.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/procedure-analyse.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/procedure-analyse.html'),(5,'FLUSH QUERY CACHE',3,'You can defragment the query cache to better utilize its memory with\nthe FLUSH QUERY CACHE statement. The statement does not remove any\nqueries from the cache.\n\nThe RESET QUERY CACHE statement removes all query results from the\nquery cache. The FLUSH TABLES statement also does this.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/query-cache-status-and-maintenance.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/query-cache-status-and-maintenance.html'),(6,'TRUE',5,'The constants TRUE and FALSE evaluate to 1 and 0, respectively. The\nconstant names can be written in any lettercase.\n\nmysql> SELECT TRUE, true, FALSE, false;\n        -> 1, 1, 0, 0\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/boolean-literals.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/boolean-literals.html'),(7,'FALSE',5,'The constants TRUE and FALSE evaluate to 1 and 0, respectively. The\nconstant names can be written in any lettercase.\n\nmysql> SELECT TRUE, true, FALSE, false;\n        -> 1, 1, 0, 0\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/boolean-literals.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/boolean-literals.html'),(8,'BIT',2,'BIT[(M)]\n\nA bit-value type. M indicates the number of bits per value, from 1 to\n64. The default is 1 if M is omitted.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(9,'TINYINT',2,'TINYINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA very small integer. The signed range is -128 to 127. The unsigned\nrange is 0 to 255.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(10,'BOOLEAN',2,'BOOL, BOOLEAN\n\nThese types are synonyms for TINYINT(1). A value of zero is considered\nfalse. Nonzero values are considered true:\n\nmysql> SELECT IF(0, \'true\', \'false\');\n+------------------------+\n| IF(0, \'true\', \'false\') |\n+------------------------+\n| false                  |\n+------------------------+\n\nmysql> SELECT IF(1, \'true\', \'false\');\n+------------------------+\n| IF(1, \'true\', \'false\') |\n+------------------------+\n| true                   |\n+------------------------+\n\nmysql> SELECT IF(2, \'true\', \'false\');\n+------------------------+\n| IF(2, \'true\', \'false\') |\n+------------------------+\n| true                   |\n+------------------------+\n\nHowever, the values TRUE and FALSE are merely aliases for 1 and 0,\nrespectively, as shown here:\n\nmysql> SELECT IF(0 = FALSE, \'true\', \'false\');\n+--------------------------------+\n| IF(0 = FALSE, \'true\', \'false\') |\n+--------------------------------+\n| true                           |\n+--------------------------------+\n\nmysql> SELECT IF(1 = TRUE, \'true\', \'false\');\n+-------------------------------+\n| IF(1 = TRUE, \'true\', \'false\') |\n+-------------------------------+\n| true                          |\n+-------------------------------+\n\nmysql> SELECT IF(2 = TRUE, \'true\', \'false\');\n+-------------------------------+\n| IF(2 = TRUE, \'true\', \'false\') |\n+-------------------------------+\n| false                         |\n+-------------------------------+\n\nmysql> SELECT IF(2 = FALSE, \'true\', \'false\');\n+--------------------------------+\n| IF(2 = FALSE, \'true\', \'false\') |\n+--------------------------------+\n| false                          |\n+--------------------------------+\n\nThe last two statements display the results shown because 2 is equal to\nneither 1 nor 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(11,'SMALLINT',2,'SMALLINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA small integer. The signed range is -32768 to 32767. The unsigned\nrange is 0 to 65535.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(12,'MEDIUMINT',2,'MEDIUMINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA medium-sized integer. The signed range is -8388608 to 8388607. The\nunsigned range is 0 to 16777215.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(13,'INT',2,'INT[(M)] [UNSIGNED] [ZEROFILL]\n\nA normal-size integer. The signed range is -2147483648 to 2147483647.\nThe unsigned range is 0 to 4294967295.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(14,'INTEGER',2,'INTEGER[(M)] [UNSIGNED] [ZEROFILL]\n\nThis type is a synonym for INT.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(15,'BIGINT',2,'BIGINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA large integer. The signed range is -9223372036854775808 to\n9223372036854775807. The unsigned range is 0 to 18446744073709551615.\n\nSERIAL is an alias for BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(16,'DECIMAL',2,'DECIMAL[(M[,D])] [UNSIGNED] [ZEROFILL]\n\nA packed \"exact\" fixed-point number. M is the total number of digits\n(the precision) and D is the number of digits after the decimal point\n(the scale). The decimal point and (for negative numbers) the - sign\nare not counted in M. If D is 0, values have no decimal point or\nfractional part. The maximum number of digits (M) for DECIMAL is 65.\nThe maximum number of supported decimals (D) is 30. If D is omitted,\nthe default is 0. If M is omitted, the default is 10.\n\nUNSIGNED, if specified, disallows negative values.\n\nAll basic calculations (+, -, *, /) with DECIMAL columns are done with\na precision of 65 digits.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(17,'DEC',2,'DEC[(M[,D])] [UNSIGNED] [ZEROFILL], NUMERIC[(M[,D])] [UNSIGNED]\n[ZEROFILL], FIXED[(M[,D])] [UNSIGNED] [ZEROFILL]\n\nThese types are synonyms for DECIMAL. The FIXED synonym is available\nfor compatibility with other database systems.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(18,'FLOAT',2,'FLOAT[(M,D)] [UNSIGNED] [ZEROFILL]\n\nA small (single-precision) floating-point number. Permissible values\nare -3.402823466E+38 to -1.175494351E-38, 0, and 1.175494351E-38 to\n3.402823466E+38. These are the theoretical limits, based on the IEEE\nstandard. The actual range might be slightly smaller depending on your\nhardware or operating system.\n\nM is the total number of digits and D is the number of digits following\nthe decimal point. If M and D are omitted, values are stored to the\nlimits permitted by the hardware. A single-precision floating-point\nnumber is accurate to approximately 7 decimal places.\n\nFLOAT(M,D) is a nonstandard MySQL extension.\n\nUNSIGNED, if specified, disallows negative values.\n\nUsing FLOAT might give you some unexpected problems because all\ncalculations in MySQL are done with double precision. See\nhttps://dev.mysql.com/doc/refman/5.7/en/no-matching-rows.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(19,'DOUBLE',2,'DOUBLE[(M,D)] [UNSIGNED] [ZEROFILL]\n\nA normal-size (double-precision) floating-point number. Permissible\nvalues are -1.7976931348623157E+308 to -2.2250738585072014E-308, 0, and\n2.2250738585072014E-308 to 1.7976931348623157E+308. These are the\ntheoretical limits, based on the IEEE standard. The actual range might\nbe slightly smaller depending on your hardware or operating system.\n\nM is the total number of digits and D is the number of digits following\nthe decimal point. If M and D are omitted, values are stored to the\nlimits permitted by the hardware. A double-precision floating-point\nnumber is accurate to approximately 15 decimal places.\n\nDOUBLE(M,D) is a nonstandard MySQL extension.\n\nUNSIGNED, if specified, disallows negative values.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(20,'DOUBLE PRECISION',2,'DOUBLE PRECISION[(M,D)] [UNSIGNED] [ZEROFILL], REAL[(M,D)] [UNSIGNED]\n[ZEROFILL]\n\nThese types are synonyms for DOUBLE. Exception: If the REAL_AS_FLOAT\nSQL mode is enabled, REAL is a synonym for FLOAT rather than DOUBLE.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(21,'DATE',2,'DATE\n\nA date. The supported range is \'1000-01-01\' to \'9999-12-31\'. MySQL\ndisplays DATE values in \'YYYY-MM-DD\' format, but permits assignment of\nvalues to DATE columns using either strings or numbers.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html'),(22,'DATETIME',2,'DATETIME[(fsp)]\n\nA date and time combination. The supported range is \'1000-01-01\n00:00:00.000000\' to \'9999-12-31 23:59:59.999999\'. MySQL displays\nDATETIME values in \'YYYY-MM-DD hh:mm:ss[.fraction]\' format, but permits\nassignment of values to DATETIME columns using either strings or\nnumbers.\n\nAn optional fsp value in the range from 0 to 6 may be given to specify\nfractional seconds precision. A value of 0 signifies that there is no\nfractional part. If omitted, the default precision is 0.\n\nAutomatic initialization and updating to the current date and time for\nDATETIME columns can be specified using DEFAULT and ON UPDATE column\ndefinition clauses, as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/timestamp-initialization.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html'),(23,'TIMESTAMP',2,'TIMESTAMP[(fsp)]\n\nA timestamp. The range is \'1970-01-01 00:00:01.000000\' UTC to\n\'2038-01-19 03:14:07.999999\' UTC. TIMESTAMP values are stored as the\nnumber of seconds since the epoch (\'1970-01-01 00:00:00\' UTC). A\nTIMESTAMP cannot represent the value \'1970-01-01 00:00:00\' because that\nis equivalent to 0 seconds from the epoch and the value 0 is reserved\nfor representing \'0000-00-00 00:00:00\', the \"zero\" TIMESTAMP value.\n\nAn optional fsp value in the range from 0 to 6 may be given to specify\nfractional seconds precision. A value of 0 signifies that there is no\nfractional part. If omitted, the default precision is 0.\n\nThe way the server handles TIMESTAMP definitions depends on the value\nof the explicit_defaults_for_timestamp system variable (see\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html).\n\nIf explicit_defaults_for_timestamp is enabled, there is no automatic\nassignment of the DEFAULT CURRENT_TIMESTAMP or ON UPDATE\nCURRENT_TIMESTAMP attributes to any TIMESTAMP column. They must be\nincluded explicitly in the column definition. Also, any TIMESTAMP not\nexplicitly declared as NOT NULL permits NULL values.\n\nIf explicit_defaults_for_timestamp is disabled, the server handles\nTIMESTAMP as follows:\n\nUnless specified otherwise, the first TIMESTAMP column in a table is\ndefined to be automatically set to the date and time of the most recent\nmodification if not explicitly assigned a value. This makes TIMESTAMP\nuseful for recording the timestamp of an INSERT or UPDATE operation.\nYou can also set any TIMESTAMP column to the current date and time by\nassigning it a NULL value, unless it has been defined with the NULL\nattribute to permit NULL values.\n\nAutomatic initialization and updating to the current date and time can\nbe specified using DEFAULT CURRENT_TIMESTAMP and ON UPDATE\nCURRENT_TIMESTAMP column definition clauses. By default, the first\nTIMESTAMP column has these properties, as previously noted. However,\nany TIMESTAMP column in a table can be defined to have these\nproperties.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html'),(24,'TIME',2,'TIME[(fsp)]\n\nA time. The range is \'-838:59:59.000000\' to \'838:59:59.000000\'. MySQL\ndisplays TIME values in \'hh:mm:ss[.fraction]\' format, but permits\nassignment of values to TIME columns using either strings or numbers.\n\nAn optional fsp value in the range from 0 to 6 may be given to specify\nfractional seconds precision. A value of 0 signifies that there is no\nfractional part. If omitted, the default precision is 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html'),(25,'YEAR DATA TYPE',2,'YEAR[(4)]\n\nA year in four-digit format. MySQL displays YEAR values in YYYY format,\nbut permits assignment of values to YEAR columns using either strings\nor numbers. Values display as 1901 to 2155, and 0000.\n\n*Note*:\n\nThe YEAR(2) data type is deprecated and support for it is removed in\nMySQL 5.7.5. To convert YEAR(2) columns to YEAR(4), see\nhttps://dev.mysql.com/doc/refman/5.7/en/migrating-to-year4.html.\n\nFor additional information about YEAR display format and interpretation\nof input values, see https://dev.mysql.com/doc/refman/5.7/en/year.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html'),(26,'CHAR',2,'[NATIONAL] CHAR[(M)] [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nA fixed-length string that is always right-padded with spaces to the\nspecified length when stored. M represents the column length in\ncharacters. The range of M is 0 to 255. If M is omitted, the length is\n1.\n\n*Note*:\n\nTrailing spaces are removed when CHAR values are retrieved unless the\nPAD_CHAR_TO_FULL_LENGTH SQL mode is enabled.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(27,'CHAR BYTE',2,'The CHAR BYTE data type is an alias for the BINARY data type. This is a\ncompatibility feature.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(28,'VARCHAR',2,'[NATIONAL] VARCHAR(M) [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nA variable-length string. M represents the maximum column length in\ncharacters. The range of M is 0 to 65,535. The effective maximum length\nof a VARCHAR is subject to the maximum row size (65,535 bytes, which is\nshared among all columns) and the character set used. For example, utf8\ncharacters can require up to three bytes per character, so a VARCHAR\ncolumn that uses the utf8 character set can be declared to be a maximum\nof 21,844 characters. See\nhttps://dev.mysql.com/doc/refman/5.7/en/column-count-limit.html.\n\nMySQL stores VARCHAR values as a 1-byte or 2-byte length prefix plus\ndata. The length prefix indicates the number of bytes in the value. A\nVARCHAR column uses one length byte if values require no more than 255\nbytes, two length bytes if values may require more than 255 bytes.\n\n*Note*:\n\nMySQL follows the standard SQL specification, and does not remove\ntrailing spaces from VARCHAR values.\n\nVARCHAR is shorthand for CHARACTER VARYING. NATIONAL VARCHAR is the\nstandard SQL way to define that a VARCHAR column should use some\npredefined character set. MySQL uses utf8 as this predefined character\nset. https://dev.mysql.com/doc/refman/5.7/en/charset-national.html.\nNVARCHAR is shorthand for NATIONAL VARCHAR.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(29,'BINARY',2,'BINARY[(M)]\n\nThe BINARY type is similar to the CHAR type, but stores binary byte\nstrings rather than nonbinary character strings. An optional length M\nrepresents the column length in bytes. If omitted, M defaults to 1.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(30,'VARBINARY',2,'VARBINARY(M)\n\nThe VARBINARY type is similar to the VARCHAR type, but stores binary\nbyte strings rather than nonbinary character strings. M represents the\nmaximum column length in bytes.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(31,'TINYBLOB',2,'TINYBLOB\n\nA BLOB column with a maximum length of 255 (28 − 1) bytes. Each\nTINYBLOB value is stored using a 1-byte length prefix that indicates\nthe number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(32,'TINYTEXT',2,'TINYTEXT [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 255 (28 − 1) characters. The\neffective maximum length is less if the value contains multibyte\ncharacters. Each TINYTEXT value is stored using a 1-byte length prefix\nthat indicates the number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(33,'BLOB',2,'BLOB[(M)]\n\nA BLOB column with a maximum length of 65,535 (216 − 1) bytes. Each\nBLOB value is stored using a 2-byte length prefix that indicates the\nnumber of bytes in the value.\n\nAn optional length M can be given for this type. If this is done, MySQL\ncreates the column as the smallest BLOB type large enough to hold\nvalues M bytes long.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(34,'TEXT',2,'TEXT[(M)] [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 65,535 (216 − 1) characters.\nThe effective maximum length is less if the value contains multibyte\ncharacters. Each TEXT value is stored using a 2-byte length prefix that\nindicates the number of bytes in the value.\n\nAn optional length M can be given for this type. If this is done, MySQL\ncreates the column as the smallest TEXT type large enough to hold\nvalues M characters long.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(35,'MEDIUMBLOB',2,'MEDIUMBLOB\n\nA BLOB column with a maximum length of 16,777,215 (224 − 1) bytes.\nEach MEDIUMBLOB value is stored using a 3-byte length prefix that\nindicates the number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(36,'MEDIUMTEXT',2,'MEDIUMTEXT [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 16,777,215 (224 − 1)\ncharacters. The effective maximum length is less if the value contains\nmultibyte characters. Each MEDIUMTEXT value is stored using a 3-byte\nlength prefix that indicates the number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(37,'LONGBLOB',2,'LONGBLOB\n\nA BLOB column with a maximum length of 4,294,967,295 or 4GB (232 − 1)\nbytes. The effective maximum length of LONGBLOB columns depends on the\nconfigured maximum packet size in the client/server protocol and\navailable memory. Each LONGBLOB value is stored using a 4-byte length\nprefix that indicates the number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(38,'LONGTEXT',2,'LONGTEXT [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 4,294,967,295 or 4GB (232 − 1)\ncharacters. The effective maximum length is less if the value contains\nmultibyte characters. The effective maximum length of LONGTEXT columns\nalso depends on the configured maximum packet size in the client/server\nprotocol and available memory. Each LONGTEXT value is stored using a\n4-byte length prefix that indicates the number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(39,'ENUM',2,'ENUM(\'value1\',\'value2\',...) [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nAn enumeration. A string object that can have only one value, chosen\nfrom the list of values \'value1\', \'value2\', ..., NULL or the special \'\'\nerror value. ENUM values are represented internally as integers.\n\nAn ENUM column can have a maximum of 65,535 distinct elements. (The\npractical limit is less than 3000.) A table can have no more than 255\nunique element list definitions among its ENUM and SET columns\nconsidered as a group. For more information on these limits, see\nhttps://dev.mysql.com/doc/refman/5.7/en/limits-frm-file.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(40,'SET DATA TYPE',2,'SET(\'value1\',\'value2\',...) [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nA set. A string object that can have zero or more values, each of which\nmust be chosen from the list of values \'value1\', \'value2\', ... SET\nvalues are represented internally as integers.\n\nA SET column can have a maximum of 64 distinct members. A table can\nhave no more than 255 unique element list definitions among its ENUM\nand SET columns considered as a group. For more information on this\nlimit, see\nhttps://dev.mysql.com/doc/refman/5.7/en/limits-frm-file.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(41,'BLOB DATA TYPE',2,'A BLOB is a binary large object that can hold a variable amount of\ndata. The four BLOB types are TINYBLOB, BLOB, MEDIUMBLOB, and LONGBLOB.\nThese differ only in the maximum length of the values they can hold.\nThe four TEXT types are TINYTEXT, TEXT, MEDIUMTEXT, and LONGTEXT. These\ncorrespond to the four BLOB types and have the same maximum lengths and\nstorage requirements. See\nhttps://dev.mysql.com/doc/refman/5.7/en/storage-requirements.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/blob.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/blob.html'),(42,'GEOMETRY HIERARCHY',6,'Geometry is the base class. It is an abstract class. The instantiable\nsubclasses of Geometry are restricted to zero-, one-, and\ntwo-dimensional geometric objects that exist in two-dimensional\ncoordinate space. All instantiable geometry classes are defined so that\nvalid instances of a geometry class are topologically closed (that is,\nall defined geometries include their boundary).\n\nThe base Geometry class has subclasses for Point, Curve, Surface, and\nGeometryCollection:\n\no Point represents zero-dimensional objects.\n\no Curve represents one-dimensional objects, and has subclass\n  LineString, with sub-subclasses Line and LinearRing.\n\no Surface is designed for two-dimensional objects and has subclass\n  Polygon.\n\no GeometryCollection has specialized zero-, one-, and two-dimensional\n  collection classes named MultiPoint, MultiLineString, and\n  MultiPolygon for modeling geometries corresponding to collections of\n  Points, LineStrings, and Polygons, respectively. MultiCurve and\n  MultiSurface are introduced as abstract superclasses that generalize\n  the collection interfaces to handle Curves and Surfaces.\n\nGeometry, Curve, Surface, MultiCurve, and MultiSurface are defined as\nnoninstantiable classes. They define a common set of methods for their\nsubclasses and are included for extensibility.\n\nPoint, LineString, Polygon, GeometryCollection, MultiPoint,\nMultiLineString, and MultiPolygon are instantiable classes.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-geometry-class-hierarchy.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-geometry-class-hierarchy.html'),(43,'MBR DEFINITION',7,'Its MBR (minimum bounding rectangle), or envelope. This is the bounding\ngeometry, formed by the minimum and maximum (X,Y) coordinates:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-class-geometry.html\n\n','((MINX MINY, MAXX MINY, MAXX MAXY, MINX MAXY, MINX MINY))\n','https://dev.mysql.com/doc/refman/5.7/en/gis-class-geometry.html'),(44,'WKT DEFINITION',8,'The Well-Known Text (WKT) representation of geometry values is designed\nfor exchanging geometry data in ASCII form. The OpenGIS specification\nprovides a Backus-Naur grammar that specifies the formal production\nrules for writing WKT values (see\nhttps://dev.mysql.com/doc/refman/5.7/en/spatial-types.html).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-data-formats.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-data-formats.html'),(45,'SPATIAL COLUMNS',6,'MySQL provides a standard way of creating spatial columns for geometry\ntypes, for example, with CREATE TABLE or ALTER TABLE. Spatial columns\nare supported for MyISAM, InnoDB, NDB, and ARCHIVE tables. See also the\nnotes about spatial indexes under [HELP SPATIAL indexes].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/creating-spatial-columns.html\n\n','CREATE TABLE geom (g GEOMETRY);\n','https://dev.mysql.com/doc/refman/5.7/en/creating-spatial-columns.html'),(46,'SPATIAL INDEXES',6,'For InnoDB and MyISAM tables, MySQL can create spatial indexes using\nsyntax similar to that for creating regular indexes, but using the\nSPATIAL keyword. Columns in spatial indexes must be declared NOT NULL.\nThe following examples demonstrate how to create spatial indexes:\n\no With CREATE TABLE:\n\nCREATE TABLE geom (g GEOMETRY NOT NULL, SPATIAL INDEX(g));\n\no With ALTER TABLE:\n\nCREATE TABLE geom (g GEOMETRY NOT NULL);\nALTER TABLE geom ADD SPATIAL INDEX(g);\n\no With CREATE INDEX:\n\nCREATE TABLE geom (g GEOMETRY NOT NULL);\nCREATE SPATIAL INDEX g ON geom (g);\n\nSPATIAL INDEX creates an R-tree index. For storage engines that support\nnonspatial indexing of spatial columns, the engine creates a B-tree\nindex. A B-tree index on spatial values is useful for exact-value\nlookups, but not for range scans.\n\nFor more information on indexing spatial columns, see [HELP CREATE\nINDEX].\n\nTo drop spatial indexes, use ALTER TABLE or DROP INDEX:\n\no With ALTER TABLE:\n\nALTER TABLE geom DROP INDEX g;\n\no With DROP INDEX:\n\nDROP INDEX g ON geom;\n\nExample: Suppose that a table geom contains more than 32,000\ngeometries, which are stored in the column g of type GEOMETRY. The\ntable also has an AUTO_INCREMENT column fid for storing object ID\nvalues.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/creating-spatial-indexes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/creating-spatial-indexes.html'),(47,'=',10,'=\n\nEqual:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 1 = 0;\n        -> 0\nmysql> SELECT \'0\' = 0;\n        -> 1\nmysql> SELECT \'0.0\' = 0;\n        -> 1\nmysql> SELECT \'0.01\' = 0;\n        -> 0\nmysql> SELECT \'.01\' = 0.01;\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(48,'<=>',10,'Syntax:\n<=>\n\nNULL-safe equal. This operator performs an equality comparison like the\n= operator, but returns 1 rather than NULL if both operands are NULL,\nand 0 rather than NULL if one operand is NULL.\n\nThe <=> operator is equivalent to the standard SQL IS NOT DISTINCT FROM\noperator.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 1 <=> 1, NULL <=> NULL, 1 <=> NULL;\n        -> 1, 1, 0\nmysql> SELECT 1 = 1, NULL = NULL, 1 = NULL;\n        -> 1, NULL, NULL\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(49,'!=',10,'Syntax:\n<>, !=\n\nNot equal:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT \'.01\' <> \'0.01\';\n        -> 1\nmysql> SELECT .01 <> \'0.01\';\n        -> 0\nmysql> SELECT \'zapp\' <> \'zappp\';\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(50,'<=',10,'Syntax:\n<=\n\nLess than or equal:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 0.1 <= 2;\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(51,'<',10,'Syntax:\n<\n\nLess than:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 2 < 2;\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(52,'>=',10,'Syntax:\n>=\n\nGreater than or equal:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 2 >= 2;\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(53,'>',10,'Syntax:\n>\n\nGreater than:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 2 > 2;\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(54,'IS',10,'Syntax:\nIS boolean_value\n\nTests a value against a boolean value, where boolean_value can be TRUE,\nFALSE, or UNKNOWN.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 1 IS TRUE, 0 IS FALSE, NULL IS UNKNOWN;\n        -> 1, 1, 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(55,'IS NOT',10,'Syntax:\nIS NOT boolean_value\n\nTests a value against a boolean value, where boolean_value can be TRUE,\nFALSE, or UNKNOWN.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 1 IS NOT UNKNOWN, 0 IS NOT UNKNOWN, NULL IS NOT UNKNOWN;\n        -> 1, 1, 0\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(56,'IS NULL',10,'Syntax:\nIS NULL\n\nTests whether a value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 1 IS NULL, 0 IS NULL, NULL IS NULL;\n        -> 0, 0, 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(57,'IS NOT NULL',10,'Syntax:\nIS NOT NULL\n\nTests whether a value is not NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 1 IS NOT NULL, 0 IS NOT NULL, NULL IS NOT NULL;\n        -> 1, 1, 0\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(58,'BETWEEN AND',10,'Syntax:\nexpr BETWEEN min AND max\n\nIf expr is greater than or equal to min and expr is less than or equal\nto max, BETWEEN returns 1, otherwise it returns 0. This is equivalent\nto the expression (min <= expr AND expr <= max) if all the arguments\nare of the same type. Otherwise type conversion takes place according\nto the rules described in\nhttps://dev.mysql.com/doc/refman/5.7/en/type-conversion.html, but\napplied to all the three arguments.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 2 BETWEEN 1 AND 3, 2 BETWEEN 3 and 1;\n        -> 1, 0\nmysql> SELECT 1 BETWEEN 2 AND 3;\n        -> 0\nmysql> SELECT \'b\' BETWEEN \'a\' AND \'c\';\n        -> 1\nmysql> SELECT 2 BETWEEN 2 AND \'3\';\n        -> 1\nmysql> SELECT 2 BETWEEN 2 AND \'x-3\';\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(59,'NOT BETWEEN',10,'Syntax:\nexpr NOT BETWEEN min AND max\n\nThis is the same as NOT (expr BETWEEN min AND max).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(60,'COALESCE',10,'Syntax:\nCOALESCE(value,...)\n\nReturns the first non-NULL value in the list, or NULL if there are no\nnon-NULL values.\n\nThe return type of COALESCE() is the aggregated type of the argument\ntypes.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT COALESCE(NULL,1);\n        -> 1\nmysql> SELECT COALESCE(NULL,NULL,NULL);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(61,'GREATEST',10,'Syntax:\nGREATEST(value1,value2,...)\n\nWith two or more arguments, returns the largest (maximum-valued)\nargument. The arguments are compared using the same rules as for\nLEAST().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT GREATEST(2,0);\n        -> 2\nmysql> SELECT GREATEST(34.0,3.0,5.0,767.0);\n        -> 767.0\nmysql> SELECT GREATEST(\'B\',\'A\',\'C\');\n        -> \'C\'\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(62,'IN',10,'Syntax:\nexpr IN (value,...)\n\nReturns 1 if expr is equal to any of the values in the IN list, else\nreturns 0. If all values are constants, they are evaluated according to\nthe type of expr and sorted. The search for the item then is done using\na binary search. This means IN is very quick if the IN value list\nconsists entirely of constants. Otherwise, type conversion takes place\naccording to the rules described in\nhttps://dev.mysql.com/doc/refman/5.7/en/type-conversion.html, but\napplied to all the arguments.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 2 IN (0,3,5,7);\n        -> 0\nmysql> SELECT \'wefwf\' IN (\'wee\',\'wefwf\',\'weg\');\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(63,'NOT IN',10,'Syntax:\nexpr NOT IN (value,...)\n\nThis is the same as NOT (expr IN (value,...)).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(64,'ISNULL',10,'Syntax:\nISNULL(expr)\n\nIf expr is NULL, ISNULL() returns 1, otherwise it returns 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT ISNULL(1+1);\n        -> 0\nmysql> SELECT ISNULL(1/0);\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(65,'INTERVAL',10,'Syntax:\nINTERVAL(N,N1,N2,N3,...)\n\nReturns 0 if N < N1, 1 if N < N2 and so on or -1 if N is NULL. All\narguments are treated as integers. It is required that N1 < N2 < N3 <\n... < Nn for this function to work correctly. This is because a binary\nsearch is used (very fast).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT INTERVAL(23, 1, 15, 17, 30, 44, 200);\n        -> 3\nmysql> SELECT INTERVAL(10, 1, 10, 100, 1000);\n        -> 2\nmysql> SELECT INTERVAL(22, 23, 30, 44, 200);\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(66,'LEAST',10,'Syntax:\nLEAST(value1,value2,...)\n\nWith two or more arguments, returns the smallest (minimum-valued)\nargument. The arguments are compared using the following rules:\n\no If any argument is NULL, the result is NULL. No comparison is needed.\n\no If all arguments are integer-valued, they are compared as integers.\n\no If at least one argument is double precision, they are compared as\n  double-precision values. Otherwise, if at least one argument is a\n  DECIMAL value, they are compared as DECIMAL values.\n\no If the arguments comprise a mix of numbers and strings, they are\n  compared as numbers.\n\no If any argument is a nonbinary (character) string, the arguments are\n  compared as nonbinary strings.\n\no In all other cases, the arguments are compared as binary strings.\n\nThe return type of LEAST() is the aggregated type of the comparison\nargument types.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT LEAST(2,0);\n        -> 0\nmysql> SELECT LEAST(34.0,3.0,5.0,767.0);\n        -> 3.0\nmysql> SELECT LEAST(\'B\',\'A\',\'C\');\n        -> \'A\'\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(67,'!',11,'Syntax:\nNOT, !\n\nLogical NOT. Evaluates to 1 if the operand is 0, to 0 if the operand is\nnonzero, and NOT NULL returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html\n\n','mysql> SELECT NOT 10;\n        -> 0\nmysql> SELECT NOT 0;\n        -> 1\nmysql> SELECT NOT NULL;\n        -> NULL\nmysql> SELECT ! (1+1);\n        -> 0\nmysql> SELECT ! 1+1;\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html'),(68,'AND',11,'Syntax:\nAND, &&\n\nLogical AND. Evaluates to 1 if all operands are nonzero and not NULL,\nto 0 if one or more operands are 0, otherwise NULL is returned.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html\n\n','mysql> SELECT 1 AND 1;\n        -> 1\nmysql> SELECT 1 AND 0;\n        -> 0\nmysql> SELECT 1 AND NULL;\n        -> NULL\nmysql> SELECT 0 AND NULL;\n        -> 0\nmysql> SELECT NULL AND 0;\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html'),(69,'OR',11,'Syntax:\nOR, ||\n\nLogical OR. When both operands are non-NULL, the result is 1 if any\noperand is nonzero, and 0 otherwise. With a NULL operand, the result is\n1 if the other operand is nonzero, and NULL otherwise. If both operands\nare NULL, the result is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html\n\n','mysql> SELECT 1 OR 1;\n        -> 1\nmysql> SELECT 1 OR 0;\n        -> 1\nmysql> SELECT 0 OR 0;\n        -> 0\nmysql> SELECT 0 OR NULL;\n        -> NULL\nmysql> SELECT 1 OR NULL;\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html'),(70,'XOR',11,'Syntax:\nXOR\n\nLogical XOR. Returns NULL if either operand is NULL. For non-NULL\noperands, evaluates to 1 if an odd number of operands is nonzero,\notherwise 0 is returned.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html\n\n','mysql> SELECT 1 XOR 1;\n        -> 0\nmysql> SELECT 1 XOR 0;\n        -> 1\nmysql> SELECT 1 XOR NULL;\n        -> NULL\nmysql> SELECT 1 XOR 1 XOR 1;\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html'),(71,'ASSIGN-VALUE',11,'Syntax:\n:=\n\nAssignment operator. Causes the user variable on the left hand side of\nthe operator to take on the value to its right. The value on the right\nhand side may be a literal value, another variable storing a value, or\nany legal expression that yields a scalar value, including the result\nof a query (provided that this value is a scalar value). You can\nperform multiple assignments in the same SET statement. You can perform\nmultiple assignments in the same statement.\n\nUnlike =, the := operator is never interpreted as a comparison\noperator. This means you can use := in any valid SQL statement (not\njust in SET statements) to assign a value to a variable.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/assignment-operators.html\n\n','mysql> SELECT @var1, @var2;\n        -> NULL, NULL\nmysql> SELECT @var1 := 1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2 := @var1;\n        -> 1, 1\nmysql> SELECT @var1, @var2;\n        -> 1, 1\n\nmysql> SELECT @var1:=COUNT(*) FROM t1;\n        -> 4\nmysql> SELECT @var1;\n        -> 4\n','https://dev.mysql.com/doc/refman/5.7/en/assignment-operators.html'),(72,'ASSIGN-EQUAL',11,'Syntax:\n=\n\nThis operator is used to perform value assignments in two cases,\ndescribed in the next two paragraphs.\n\nWithin a SET statement, = is treated as an assignment operator that\ncauses the user variable on the left hand side of the operator to take\non the value to its right. (In other words, when used in a SET\nstatement, = is treated identically to :=.) The value on the right hand\nside may be a literal value, another variable storing a value, or any\nlegal expression that yields a scalar value, including the result of a\nquery (provided that this value is a scalar value). You can perform\nmultiple assignments in the same SET statement.\n\nIn the SET clause of an UPDATE statement, = also acts as an assignment\noperator; in this case, however, it causes the column named on the left\nhand side of the operator to assume the value given to the right,\nprovided any WHERE conditions that are part of the UPDATE are met. You\ncan make multiple assignments in the same SET clause of an UPDATE\nstatement.\n\nIn any other context, = is treated as a comparison operator.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/assignment-operators.html\n\n','mysql> SELECT @var1, @var2;\n        -> NULL, NULL\nmysql> SELECT @var1 := 1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2 := @var1;\n        -> 1, 1\nmysql> SELECT @var1, @var2;\n        -> 1, 1\n','https://dev.mysql.com/doc/refman/5.7/en/assignment-operators.html'),(73,'CASE OPERATOR',12,'Syntax:\nCASE value WHEN [compare_value] THEN result [WHEN [compare_value] THEN\nresult ...] [ELSE result] END\n\nCASE WHEN [condition] THEN result [WHEN [condition] THEN result ...]\n[ELSE result] END\n\nThe first CASE syntax returns the result for the first\nvalue=compare_value comparison that is true. The second syntax returns\nthe result for the first condition that is true. If no comparison or\ncondition is true, the result after ELSE is returned, or NULL if there\nis no ELSE part.\n\n*Note*:\n\nThe syntax of the CASE expr described here differs slightly from that\nof the SQL CASE statement described in [HELP CASE statement], for use\ninside stored programs. The CASE statement cannot have an ELSE NULL\nclause, and it is terminated with END CASE instead of END.\n\nThe return type of a CASE expression result is the aggregated type of\nall result values.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html\n\n','mysql> SELECT CASE 1 WHEN 1 THEN \'one\'\n    ->     WHEN 2 THEN \'two\' ELSE \'more\' END;\n        -> \'one\'\nmysql> SELECT CASE WHEN 1>0 THEN \'true\' ELSE \'false\' END;\n        -> \'true\'\nmysql> SELECT CASE BINARY \'B\'\n    ->     WHEN \'a\' THEN 1 WHEN \'b\' THEN 2 END;\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html'),(74,'IF FUNCTION',12,'Syntax:\nIF(expr1,expr2,expr3)\n\nIf expr1 is TRUE (expr1 <> 0 and expr1 <> NULL), IF() returns expr2.\nOtherwise, it returns expr3.\n\n*Note*:\n\nThere is also an IF statement, which differs from the IF() function\ndescribed here. See [HELP IF statement].\n\nIf only one of expr2 or expr3 is explicitly NULL, the result type of\nthe IF() function is the type of the non-NULL expression.\n\nThe default return type of IF() (which may matter when it is stored\ninto a temporary table) is calculated as follows:\n\no If expr2 or expr3 produce a string, the result is a string.\n\n  If expr2 and expr3 are both strings, the result is case-sensitive if\n  either string is case sensitive.\n\no If expr2 or expr3 produce a floating-point value, the result is a\n  floating-point value.\n\no If expr2 or expr3 produce an integer, the result is an integer.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html\n\n','mysql> SELECT IF(1>2,2,3);\n        -> 3\nmysql> SELECT IF(1<2,\'yes\',\'no\');\n        -> \'yes\'\nmysql> SELECT IF(STRCMP(\'test\',\'test1\'),\'no\',\'yes\');\n        -> \'no\'\n','https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html'),(75,'IFNULL',12,'Syntax:\nIFNULL(expr1,expr2)\n\nIf expr1 is not NULL, IFNULL() returns expr1; otherwise it returns\nexpr2.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html\n\n','mysql> SELECT IFNULL(1,0);\n        -> 1\nmysql> SELECT IFNULL(NULL,10);\n        -> 10\nmysql> SELECT IFNULL(1/0,10);\n        -> 10\nmysql> SELECT IFNULL(1/0,\'yes\');\n        -> \'yes\'\n','https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html'),(76,'NULLIF',12,'Syntax:\nNULLIF(expr1,expr2)\n\nReturns NULL if expr1 = expr2 is true, otherwise returns expr1. This is\nthe same as CASE WHEN expr1 = expr2 THEN NULL ELSE expr1 END.\n\nThe return value has the same type as the first argument.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html\n\n','mysql> SELECT NULLIF(1,1);\n        -> NULL\nmysql> SELECT NULLIF(1,2);\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html'),(77,'ASCII',13,'Syntax:\nASCII(str)\n\nReturns the numeric value of the leftmost character of the string str.\nReturns 0 if str is the empty string. Returns NULL if str is NULL.\nASCII() works for 8-bit characters.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT ASCII(\'2\');\n        -> 50\nmysql> SELECT ASCII(2);\n        -> 50\nmysql> SELECT ASCII(\'dx\');\n        -> 100\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(78,'BIN',13,'Syntax:\nBIN(N)\n\nReturns a string representation of the binary value of N, where N is a\nlonglong (BIGINT) number. This is equivalent to CONV(N,10,2). Returns\nNULL if N is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT BIN(12);\n        -> \'1100\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(79,'BIT_LENGTH',13,'Syntax:\nBIT_LENGTH(str)\n\nReturns the length of the string str in bits.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT BIT_LENGTH(\'text\');\n        -> 32\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(80,'CHAR FUNCTION',13,'Syntax:\nCHAR(N,... [USING charset_name])\n\nCHAR() interprets each argument N as an integer and returns a string\nconsisting of the characters given by the code values of those\nintegers. NULL values are skipped.\n\nBy default, CHAR() returns a binary string. To produce a string in a\ngiven character set, use the optional USING clause:\n\nmysql> SELECT CHARSET(CHAR(X\'65\')), CHARSET(CHAR(X\'65\' USING utf8));\n+----------------------+---------------------------------+\n| CHARSET(CHAR(X\'65\')) | CHARSET(CHAR(X\'65\' USING utf8)) |\n+----------------------+---------------------------------+\n| binary               | utf8                            |\n+----------------------+---------------------------------+\n\nIf USING is given and the result string is illegal for the given\ncharacter set, a warning is issued. Also, if strict SQL mode is\nenabled, the result from CHAR() becomes NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT CHAR(77,121,83,81,\'76\');\n        -> \'MySQL\'\nmysql> SELECT CHAR(77,77.3,\'77.3\');\n        -> \'MMM\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(81,'CHAR_LENGTH',13,'Syntax:\nCHAR_LENGTH(str)\n\nReturns the length of the string str, measured in characters. A\nmultibyte character counts as a single character. This means that for a\nstring containing five 2-byte characters, LENGTH() returns 10, whereas\nCHAR_LENGTH() returns 5.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(82,'CHARACTER_LENGTH',13,'Syntax:\nCHARACTER_LENGTH(str)\n\nCHARACTER_LENGTH() is a synonym for CHAR_LENGTH().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(83,'CONCAT',13,'Syntax:\nCONCAT(str1,str2,...)\n\nReturns the string that results from concatenating the arguments. May\nhave one or more arguments. If all arguments are nonbinary strings, the\nresult is a nonbinary string. If the arguments include any binary\nstrings, the result is a binary string. A numeric argument is converted\nto its equivalent nonbinary string form.\n\nCONCAT() returns NULL if any argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT CONCAT(\'My\', \'S\', \'QL\');\n        -> \'MySQL\'\nmysql> SELECT CONCAT(\'My\', NULL, \'QL\');\n        -> NULL\nmysql> SELECT CONCAT(14.3);\n        -> \'14.3\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(84,'CONCAT_WS',13,'Syntax:\nCONCAT_WS(separator,str1,str2,...)\n\nCONCAT_WS() stands for Concatenate With Separator and is a special form\nof CONCAT(). The first argument is the separator for the rest of the\narguments. The separator is added between the strings to be\nconcatenated. The separator can be a string, as can the rest of the\narguments. If the separator is NULL, the result is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT CONCAT_WS(\',\',\'First name\',\'Second name\',\'Last Name\');\n        -> \'First name,Second name,Last Name\'\nmysql> SELECT CONCAT_WS(\',\',\'First name\',NULL,\'Last Name\');\n        -> \'First name,Last Name\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(85,'ELT',13,'Syntax:\nELT(N,str1,str2,str3,...)\n\nELT() returns the Nth element of the list of strings: str1 if N = 1,\nstr2 if N = 2, and so on. Returns NULL if N is less than 1 or greater\nthan the number of arguments. ELT() is the complement of FIELD().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT ELT(1, \'Aa\', \'Bb\', \'Cc\', \'Dd\');\n        -> \'Aa\'\nmysql> SELECT ELT(4, \'Aa\', \'Bb\', \'Cc\', \'Dd\');\n        -> \'Dd\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(86,'EXPORT_SET',13,'Syntax:\nEXPORT_SET(bits,on,off[,separator[,number_of_bits]])\n\nReturns a string such that for every bit set in the value bits, you get\nan on string and for every bit not set in the value, you get an off\nstring. Bits in bits are examined from right to left (from low-order to\nhigh-order bits). Strings are added to the result from left to right,\nseparated by the separator string (the default being the comma\ncharacter ,). The number of bits examined is given by number_of_bits,\nwhich has a default of 64 if not specified. number_of_bits is silently\nclipped to 64 if larger than 64. It is treated as an unsigned integer,\nso a value of −1 is effectively the same as 64.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT EXPORT_SET(5,\'Y\',\'N\',\',\',4);\n        -> \'Y,N,Y,N\'\nmysql> SELECT EXPORT_SET(6,\'1\',\'0\',\',\',10);\n        -> \'0,1,1,0,0,0,0,0,0,0\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(87,'FIELD',13,'Syntax:\nFIELD(str,str1,str2,str3,...)\n\nReturns the index (position) of str in the str1, str2, str3, ... list.\nReturns 0 if str is not found.\n\nIf all arguments to FIELD() are strings, all arguments are compared as\nstrings. If all arguments are numbers, they are compared as numbers.\nOtherwise, the arguments are compared as double.\n\nIf str is NULL, the return value is 0 because NULL fails equality\ncomparison with any value. FIELD() is the complement of ELT().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT FIELD(\'Bb\', \'Aa\', \'Bb\', \'Cc\', \'Dd\', \'Ff\');\n        -> 2\nmysql> SELECT FIELD(\'Gg\', \'Aa\', \'Bb\', \'Cc\', \'Dd\', \'Ff\');\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(88,'FIND_IN_SET',13,'Syntax:\nFIND_IN_SET(str,strlist)\n\nReturns a value in the range of 1 to N if the string str is in the\nstring list strlist consisting of N substrings. A string list is a\nstring composed of substrings separated by , characters. If the first\nargument is a constant string and the second is a column of type SET,\nthe FIND_IN_SET() function is optimized to use bit arithmetic. Returns\n0 if str is not in strlist or if strlist is the empty string. Returns\nNULL if either argument is NULL. This function does not work properly\nif the first argument contains a comma (,) character.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT FIND_IN_SET(\'b\',\'a,b,c,d\');\n        -> 2\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(89,'FORMAT',13,'Syntax:\nFORMAT(X,D[,locale])\n\nFormats the number X to a format like \'#,###,###.##\', rounded to D\ndecimal places, and returns the result as a string. If D is 0, the\nresult has no decimal point or fractional part.\n\nThe optional third parameter enables a locale to be specified to be\nused for the result number\'s decimal point, thousands separator, and\ngrouping between separators. Permissible locale values are the same as\nthe legal values for the lc_time_names system variable (see\nhttps://dev.mysql.com/doc/refman/5.7/en/locale-support.html). If no\nlocale is specified, the default is \'en_US\'.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT FORMAT(12332.123456, 4);\n        -> \'12,332.1235\'\nmysql> SELECT FORMAT(12332.1,4);\n        -> \'12,332.1000\'\nmysql> SELECT FORMAT(12332.2,0);\n        -> \'12,332\'\nmysql> SELECT FORMAT(12332.2,2,\'de_DE\');\n        -> \'12.332,20\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(90,'FROM_BASE64',13,'Syntax:\nFROM_BASE64(str)\n\nTakes a string encoded with the base-64 encoded rules used by\nTO_BASE64() and returns the decoded result as a binary string. The\nresult is NULL if the argument is NULL or not a valid base-64 string.\nSee the description of TO_BASE64() for details about the encoding and\ndecoding rules.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT TO_BASE64(\'abc\'), FROM_BASE64(TO_BASE64(\'abc\'));\n        -> \'JWJj\', \'abc\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(91,'HEX',13,'Syntax:\nHEX(str), HEX(N)\n\nFor a string argument str, HEX() returns a hexadecimal string\nrepresentation of str where each byte of each character in str is\nconverted to two hexadecimal digits. (Multibyte characters therefore\nbecome more than two digits.) The inverse of this operation is\nperformed by the UNHEX() function.\n\nFor a numeric argument N, HEX() returns a hexadecimal string\nrepresentation of the value of N treated as a longlong (BIGINT) number.\nThis is equivalent to CONV(N,10,16). The inverse of this operation is\nperformed by CONV(HEX(N),16,10).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT X\'616263\', HEX(\'abc\'), UNHEX(HEX(\'abc\'));\n        -> \'abc\', 616263, \'abc\'\nmysql> SELECT HEX(255), CONV(HEX(255),16,10);\n        -> \'FF\', 255\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(92,'INSERT FUNCTION',13,'Syntax:\nINSERT(str,pos,len,newstr)\n\nReturns the string str, with the substring beginning at position pos\nand len characters long replaced by the string newstr. Returns the\noriginal string if pos is not within the length of the string. Replaces\nthe rest of the string from position pos if len is not within the\nlength of the rest of the string. Returns NULL if any argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT INSERT(\'Quadratic\', 3, 4, \'What\');\n        -> \'QuWhattic\'\nmysql> SELECT INSERT(\'Quadratic\', -1, 4, \'What\');\n        -> \'Quadratic\'\nmysql> SELECT INSERT(\'Quadratic\', 3, 100, \'What\');\n        -> \'QuWhat\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(93,'INSTR',13,'Syntax:\nINSTR(str,substr)\n\nReturns the position of the first occurrence of substring substr in\nstring str. This is the same as the two-argument form of LOCATE(),\nexcept that the order of the arguments is reversed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT INSTR(\'foobarbar\', \'bar\');\n        -> 4\nmysql> SELECT INSTR(\'xbar\', \'foobar\');\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(94,'LCASE',13,'Syntax:\nLCASE(str)\n\nLCASE() is a synonym for LOWER().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(95,'LEFT',13,'Syntax:\nLEFT(str,len)\n\nReturns the leftmost len characters from the string str, or NULL if any\nargument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT LEFT(\'foobarbar\', 5);\n        -> \'fooba\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(96,'LENGTH',13,'Syntax:\nLENGTH(str)\n\nReturns the length of the string str, measured in bytes. A multibyte\ncharacter counts as multiple bytes. This means that for a string\ncontaining five 2-byte characters, LENGTH() returns 10, whereas\nCHAR_LENGTH() returns 5.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT LENGTH(\'text\');\n        -> 4\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(97,'LOAD_FILE',13,'Syntax:\nLOAD_FILE(file_name)\n\nReads the file and returns the file contents as a string. To use this\nfunction, the file must be located on the server host, you must specify\nthe full path name to the file, and you must have the FILE privilege.\nThe file must be readable by all and its size less than\nmax_allowed_packet bytes. If the secure_file_priv system variable is\nset to a nonempty directory name, the file to be loaded must be located\nin that directory.\n\nIf the file does not exist or cannot be read because one of the\npreceding conditions is not satisfied, the function returns NULL.\n\nThe character_set_filesystem system variable controls interpretation of\nfile names that are given as literal strings.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> UPDATE t\n            SET blob_col=LOAD_FILE(\'/tmp/picture\')\n            WHERE id=1;\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(98,'LOCATE',13,'Syntax:\nLOCATE(substr,str), LOCATE(substr,str,pos)\n\nThe first syntax returns the position of the first occurrence of\nsubstring substr in string str. The second syntax returns the position\nof the first occurrence of substring substr in string str, starting at\nposition pos. Returns 0 if substr is not in str. Returns NULL if substr\nor str is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT LOCATE(\'bar\', \'foobarbar\');\n        -> 4\nmysql> SELECT LOCATE(\'xbar\', \'foobar\');\n        -> 0\nmysql> SELECT LOCATE(\'bar\', \'foobarbar\', 5);\n        -> 7\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(99,'LOWER',13,'Syntax:\nLOWER(str)\n\nReturns the string str with all characters changed to lowercase\naccording to the current character set mapping. The default is latin1\n(cp1252 West European).\n\nmysql> SELECT LOWER(\'QUADRATICALLY\');\n        -> \'quadratically\'\n\nLOWER() (and UPPER()) are ineffective when applied to binary strings\n(BINARY, VARBINARY, BLOB). To perform lettercase conversion, convert\nthe string to a nonbinary string:\n\nmysql> SET @str = BINARY \'New York\';\nmysql> SELECT LOWER(@str), LOWER(CONVERT(@str USING latin1));\n+-------------+-----------------------------------+\n| LOWER(@str) | LOWER(CONVERT(@str USING latin1)) |\n+-------------+-----------------------------------+\n| New York    | new york                          |\n+-------------+-----------------------------------+\n\nFor collations of Unicode character sets, LOWER() and UPPER() work\naccording to the Unicode Collation Algorithm (UCA) version in the\ncollation name, if there is one, and UCA 4.0.0 if no version is\nspecified. For example, utf8_unicode_520_ci works according to UCA\n5.2.0, whereas utf8_unicode_ci works according to UCA 4.0.0. See\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-unicode-sets.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(100,'LPAD',13,'Syntax:\nLPAD(str,len,padstr)\n\nReturns the string str, left-padded with the string padstr to a length\nof len characters. If str is longer than len, the return value is\nshortened to len characters.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT LPAD(\'hi\',4,\'??\');\n        -> \'??hi\'\nmysql> SELECT LPAD(\'hi\',1,\'??\');\n        -> \'h\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(101,'LTRIM',13,'Syntax:\nLTRIM(str)\n\nReturns the string str with leading space characters removed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT LTRIM(\'  barbar\');\n        -> \'barbar\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(102,'MAKE_SET',13,'Syntax:\nMAKE_SET(bits,str1,str2,...)\n\nReturns a set value (a string containing substrings separated by ,\ncharacters) consisting of the strings that have the corresponding bit\nin bits set. str1 corresponds to bit 0, str2 to bit 1, and so on. NULL\nvalues in str1, str2, ... are not appended to the result.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT MAKE_SET(1,\'a\',\'b\',\'c\');\n        -> \'a\'\nmysql> SELECT MAKE_SET(1 | 4,\'hello\',\'nice\',\'world\');\n        -> \'hello,world\'\nmysql> SELECT MAKE_SET(1 | 4,\'hello\',\'nice\',NULL,\'world\');\n        -> \'hello\'\nmysql> SELECT MAKE_SET(0,\'a\',\'b\',\'c\');\n        -> \'\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(103,'MID',13,'Syntax:\nMID(str,pos,len)\n\nMID(str,pos,len) is a synonym for SUBSTRING(str,pos,len).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(104,'OCT',13,'Syntax:\nOCT(N)\n\nReturns a string representation of the octal value of N, where N is a\nlonglong (BIGINT) number. This is equivalent to CONV(N,10,8). Returns\nNULL if N is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT OCT(12);\n        -> \'14\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(105,'OCTET_LENGTH',13,'Syntax:\nOCTET_LENGTH(str)\n\nOCTET_LENGTH() is a synonym for LENGTH().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(106,'ORD',13,'Syntax:\nORD(str)\n\nIf the leftmost character of the string str is a multibyte character,\nreturns the code for that character, calculated from the numeric values\nof its constituent bytes using this formula:\n\n  (1st byte code)\n+ (2nd byte code * 256)\n+ (3rd byte code * 256^2) ...\n\nIf the leftmost character is not a multibyte character, ORD() returns\nthe same value as the ASCII() function.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT ORD(\'2\');\n        -> 50\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(107,'POSITION',13,'Syntax:\nPOSITION(substr IN str)\n\nPOSITION(substr IN str) is a synonym for LOCATE(substr,str).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(108,'QUOTE',13,'Syntax:\nQUOTE(str)\n\nQuotes a string to produce a result that can be used as a properly\nescaped data value in an SQL statement. The string is returned enclosed\nby single quotation marks and with each instance of backslash (\\),\nsingle quote (\'), ASCII NUL, and Control+Z preceded by a backslash. If\nthe argument is NULL, the return value is the word \"NULL\" without\nenclosing single quotation marks.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT QUOTE(\'Don\\\'t!\');\n        -> \'Don\\\'t!\'\nmysql> SELECT QUOTE(NULL);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(109,'REPEAT FUNCTION',13,'Syntax:\nREPEAT(str,count)\n\nReturns a string consisting of the string str repeated count times. If\ncount is less than 1, returns an empty string. Returns NULL if str or\ncount are NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT REPEAT(\'MySQL\', 3);\n        -> \'MySQLMySQLMySQL\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(110,'REPLACE FUNCTION',13,'Syntax:\nREPLACE(str,from_str,to_str)\n\nReturns the string str with all occurrences of the string from_str\nreplaced by the string to_str. REPLACE() performs a case-sensitive\nmatch when searching for from_str.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT REPLACE(\'www.mysql.com\', \'w\', \'Ww\');\n        -> \'WwWwWw.mysql.com\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(111,'REVERSE',13,'Syntax:\nREVERSE(str)\n\nReturns the string str with the order of the characters reversed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT REVERSE(\'abc\');\n        -> \'cba\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(112,'RIGHT',13,'Syntax:\nRIGHT(str,len)\n\nReturns the rightmost len characters from the string str, or NULL if\nany argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT RIGHT(\'foobarbar\', 4);\n        -> \'rbar\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(113,'RPAD',13,'Syntax:\nRPAD(str,len,padstr)\n\nReturns the string str, right-padded with the string padstr to a length\nof len characters. If str is longer than len, the return value is\nshortened to len characters.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT RPAD(\'hi\',5,\'?\');\n        -> \'hi???\'\nmysql> SELECT RPAD(\'hi\',1,\'?\');\n        -> \'h\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(114,'RTRIM',13,'Syntax:\nRTRIM(str)\n\nReturns the string str with trailing space characters removed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT RTRIM(\'barbar   \');\n        -> \'barbar\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(115,'SOUNDEX',13,'Syntax:\nSOUNDEX(str)\n\nReturns a soundex string from str. Two strings that sound almost the\nsame should have identical soundex strings. A standard soundex string\nis four characters long, but the SOUNDEX() function returns an\narbitrarily long string. You can use SUBSTRING() on the result to get a\nstandard soundex string. All nonalphabetic characters in str are\nignored. All international alphabetic characters outside the A-Z range\nare treated as vowels.\n\n*Important*:\n\nWhen using SOUNDEX(), you should be aware of the following limitations:\n\no This function, as currently implemented, is intended to work well\n  with strings that are in the English language only. Strings in other\n  languages may not produce reliable results.\n\no This function is not guaranteed to provide consistent results with\n  strings that use multibyte character sets, including utf-8. See Bug\n  #22638 for more information.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT SOUNDEX(\'Hello\');\n        -> \'H400\'\nmysql> SELECT SOUNDEX(\'Quadratically\');\n        -> \'Q36324\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(116,'SOUNDS LIKE',13,'Syntax:\nexpr1 SOUNDS LIKE expr2\n\nThis is the same as SOUNDEX(expr1) = SOUNDEX(expr2).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(117,'SPACE',13,'Syntax:\nSPACE(N)\n\nReturns a string consisting of N space characters.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT SPACE(6);\n        -> \'      \'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(118,'SUBSTR',13,'Syntax:\nSUBSTR(str,pos), SUBSTR(str FROM pos), SUBSTR(str,pos,len), SUBSTR(str\nFROM pos FOR len)\n\nSUBSTR() is a synonym for SUBSTRING().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(119,'SUBSTRING',13,'Syntax:\nSUBSTRING(str,pos), SUBSTRING(str FROM pos), SUBSTRING(str,pos,len),\nSUBSTRING(str FROM pos FOR len)\n\nThe forms without a len argument return a substring from string str\nstarting at position pos. The forms with a len argument return a\nsubstring len characters long from string str, starting at position\npos. The forms that use FROM are standard SQL syntax. It is also\npossible to use a negative value for pos. In this case, the beginning\nof the substring is pos characters from the end of the string, rather\nthan the beginning. A negative value may be used for pos in any of the\nforms of this function.\n\nFor all forms of SUBSTRING(), the position of the first character in\nthe string from which the substring is to be extracted is reckoned as\n1.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT SUBSTRING(\'Quadratically\',5);\n        -> \'ratically\'\nmysql> SELECT SUBSTRING(\'foobarbar\' FROM 4);\n        -> \'barbar\'\nmysql> SELECT SUBSTRING(\'Quadratically\',5,6);\n        -> \'ratica\'\nmysql> SELECT SUBSTRING(\'Sakila\', -3);\n        -> \'ila\'\nmysql> SELECT SUBSTRING(\'Sakila\', -5, 3);\n        -> \'aki\'\nmysql> SELECT SUBSTRING(\'Sakila\' FROM -4 FOR 2);\n        -> \'ki\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(120,'SUBSTRING_INDEX',13,'Syntax:\nSUBSTRING_INDEX(str,delim,count)\n\nReturns the substring from string str before count occurrences of the\ndelimiter delim. If count is positive, everything to the left of the\nfinal delimiter (counting from the left) is returned. If count is\nnegative, everything to the right of the final delimiter (counting from\nthe right) is returned. SUBSTRING_INDEX() performs a case-sensitive\nmatch when searching for delim.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT SUBSTRING_INDEX(\'www.mysql.com\', \'.\', 2);\n        -> \'www.mysql\'\nmysql> SELECT SUBSTRING_INDEX(\'www.mysql.com\', \'.\', -2);\n        -> \'mysql.com\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(121,'TO_BASE64',13,'Syntax:\nTO_BASE64(str)\n\nConverts the string argument to base-64 encoded form and returns the\nresult as a character string with the connection character set and\ncollation. If the argument is not a string, it is converted to a string\nbefore conversion takes place. The result is NULL if the argument is\nNULL. Base-64 encoded strings can be decoded using the FROM_BASE64()\nfunction.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT TO_BASE64(\'abc\'), FROM_BASE64(TO_BASE64(\'abc\'));\n        -> \'JWJj\', \'abc\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(122,'TRIM',13,'Syntax:\nTRIM([{BOTH | LEADING | TRAILING} [remstr] FROM] str), TRIM([remstr\nFROM] str)\n\nReturns the string str with all remstr prefixes or suffixes removed. If\nnone of the specifiers BOTH, LEADING, or TRAILING is given, BOTH is\nassumed. remstr is optional and, if not specified, spaces are removed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT TRIM(\'  bar   \');\n        -> \'bar\'\nmysql> SELECT TRIM(LEADING \'x\' FROM \'xxxbarxxx\');\n        -> \'barxxx\'\nmysql> SELECT TRIM(BOTH \'x\' FROM \'xxxbarxxx\');\n        -> \'bar\'\nmysql> SELECT TRIM(TRAILING \'xyz\' FROM \'barxxyz\');\n        -> \'barx\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(123,'UCASE',13,'Syntax:\nUCASE(str)\n\nUCASE() is a synonym for UPPER().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(124,'UNHEX',13,'Syntax:\nUNHEX(str)\n\nFor a string argument str, UNHEX(str) interprets each pair of\ncharacters in the argument as a hexadecimal number and converts it to\nthe byte represented by the number. The return value is a binary\nstring.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT UNHEX(\'4D7953514C\');\n        -> \'MySQL\'\nmysql> SELECT X\'4D7953514C\';\n        -> \'MySQL\'\nmysql> SELECT UNHEX(HEX(\'string\'));\n        -> \'string\'\nmysql> SELECT HEX(UNHEX(\'1267\'));\n        -> \'1267\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(125,'UPPER',13,'Syntax:\nUPPER(str)\n\nReturns the string str with all characters changed to uppercase\naccording to the current character set mapping. The default is latin1\n(cp1252 West European).\n\nmysql> SELECT UPPER(\'Hej\');\n        -> \'HEJ\'\n\nSee the description of LOWER() for information that also applies to\nUPPER(). This included information about how to perform lettercase\nconversion of binary strings (BINARY, VARBINARY, BLOB) for which these\nfunctions are ineffective, and information about case folding for\nUnicode character sets.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(126,'WEIGHT_STRING',13,'Syntax:\nWEIGHT_STRING(str [AS {CHAR|BINARY}(N)] [LEVEL levels] [flags])\n\nlevels: N [ASC|DESC|REVERSE] [, N [ASC|DESC|REVERSE]] ...\n\nThis function returns the weight string for the input string. The\nreturn value is a binary string that represents the comparison and\nsorting value of the string. It has these properties:\n\no If WEIGHT_STRING(str1) = WEIGHT_STRING(str2), then str1 = str2 (str1\n  and str2 are considered equal)\n\no If WEIGHT_STRING(str1) < WEIGHT_STRING(str2), then str1 < str2 (str1\n  sorts before str2)\n\nWEIGHT_STRING() is a debugging function intended for internal use. Its\nbehavior can change without notice between MySQL versions. It can be\nused for testing and debugging of collations, especially if you are\nadding a new collation. See\nhttps://dev.mysql.com/doc/refman/5.7/en/adding-collation.html.\n\nThis list briefly summarizes the arguments. More details are given in\nthe discussion following the list.\n\no str: The input string expression.\n\no AS clause: Optional; cast the input string to a given type and\n  length.\n\no LEVEL clause: Optional; specify weight levels for the return value.\n\no flags: Optional; unused.\n\nThe input string, str, is a string expression. If the input is a\nnonbinary (character) string such as a CHAR, VARCHAR, or TEXT value,\nthe return value contains the collation weights for the string. If the\ninput is a binary (byte) string such as a BINARY, VARBINARY, or BLOB\nvalue, the return value is the same as the input (the weight for each\nbyte in a binary string is the byte value). If the input is NULL,\nWEIGHT_STRING() returns NULL.\n\nExamples:\n\nmysql> SET @s = _latin1 \'AB\' COLLATE latin1_swedish_ci;\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| AB   | 4142    | 4142                   |\n+------+---------+------------------------+\n\nmysql> SET @s = _latin1 \'ab\' COLLATE latin1_swedish_ci;\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| ab   | 6162    | 4142                   |\n+------+---------+------------------------+\n\nmysql> SET @s = CAST(\'AB\' AS BINARY);\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| AB   | 4142    | 4142                   |\n+------+---------+------------------------+\n\nmysql> SET @s = CAST(\'ab\' AS BINARY);\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| ab   | 6162    | 6162                   |\n+------+---------+------------------------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(127,'LIKE',13,'Syntax:\nexpr LIKE pat [ESCAPE \'escape_char\']\n\nPattern matching using an SQL pattern. Returns 1 (TRUE) or 0 (FALSE).\nIf either expr or pat is NULL, the result is NULL.\n\nThe pattern need not be a literal string. For example, it can be\nspecified as a string expression or table column.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-comparison-functions.html\n\n','mysql> SELECT \'David!\' LIKE \'David_\';\n        -> 1\nmysql> SELECT \'David!\' LIKE \'%D%v%\';\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/string-comparison-functions.html'),(128,'NOT LIKE',13,'Syntax:\nexpr NOT LIKE pat [ESCAPE \'escape_char\']\n\nThis is the same as NOT (expr LIKE pat [ESCAPE \'escape_char\']).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-comparison-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-comparison-functions.html'),(129,'STRCMP',13,'Syntax:\nSTRCMP(expr1,expr2)\n\nSTRCMP() returns 0 if the strings are the same, -1 if the first\nargument is smaller than the second according to the current sort\norder, and 1 otherwise.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-comparison-functions.html\n\n','mysql> SELECT STRCMP(\'text\', \'text2\');\n        -> -1\nmysql> SELECT STRCMP(\'text2\', \'text\');\n        -> 1\nmysql> SELECT STRCMP(\'text\', \'text\');\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/string-comparison-functions.html'),(130,'NOT REGEXP',13,'Syntax:\nexpr NOT REGEXP pat, expr NOT RLIKE pat\n\nThis is the same as NOT (expr REGEXP pat).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/regexp.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/regexp.html'),(131,'REGEXP',13,'Syntax:\nexpr REGEXP pat, expr RLIKE pat\n\nReturns 1 if the string expr matches the regular expression specified\nby the pattern pat, 0 otherwise. If either expr or pat is NULL, the\nreturn value is NULL.\n\nRLIKE is a synonym for REGEXP.\n\nThe pattern can be an extended regular expression, the syntax for which\nis discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/regexp.html#regexp-syntax. The\npattern need not be a literal string. For example, it can be specified\nas a string expression or table column.\n\n*Note*:\n\nBecause MySQL uses the C escape syntax in strings (for example, \\n to\nrepresent the newline character), you must double any \\ that you use in\nyour REGEXP arguments.\n\nRegular expression operations use the character set and collation of\nthe string expression and pattern arguments when deciding the type of a\ncharacter and performing the comparison. If the arguments have\ndifferent character sets or collations, coercibility rules apply as\ndescribed in\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-collation-coercibility.\nhtml. If either argument is a binary string, the arguments are handled\nin case-sensitive fashion as binary strings.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/regexp.html\n\n','mysql> SELECT \'Michael!\' REGEXP \'.*\';\n+------------------------+\n| \'Michael!\' REGEXP \'.*\' |\n+------------------------+\n|                      1 |\n+------------------------+\nmysql> SELECT \'new*\\n*line\' REGEXP \'new\\\\*.\\\\*line\';\n+---------------------------------------+\n| \'new*\\n*line\' REGEXP \'new\\\\*.\\\\*line\' |\n+---------------------------------------+\n|                                     0 |\n+---------------------------------------+\nmysql> SELECT \'a\' REGEXP \'^[a-d]\';\n+---------------------+\n| \'a\' REGEXP \'^[a-d]\' |\n+---------------------+\n|                   1 |\n+---------------------+\nmysql> SELECT \'a\' REGEXP \'A\', \'a\' REGEXP BINARY \'A\';\n+----------------+-----------------------+\n| \'a\' REGEXP \'A\' | \'a\' REGEXP BINARY \'A\' |\n+----------------+-----------------------+\n|              1 |                     0 |\n+----------------+-----------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/regexp.html'),(132,'+',14,'Syntax:\n+\n\nAddition:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html\n\n','mysql> SELECT 3+5;\n        -> 8\n','https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html'),(133,'- BINARY',14,'Syntax:\n-\n\nSubtraction:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html\n\n','mysql> SELECT 3-5;\n        -> -2\n','https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html'),(134,'- UNARY',14,'Syntax:\n-\n\nUnary minus. This operator changes the sign of the operand.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html\n\n','mysql> SELECT - 2;\n        -> -2\n','https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html'),(135,'*',14,'Syntax:\n*\n\nMultiplication:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html\n\n','mysql> SELECT 3*5;\n        -> 15\nmysql> SELECT 18014398509481984*18014398509481984.0;\n        -> 324518553658426726783156020576256.0\nmysql> SELECT 18014398509481984*18014398509481984;\n        -> out-of-range error\n','https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html'),(136,'/',14,'Syntax:\n/\n\nDivision:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html\n\n','mysql> SELECT 3/5;\n        -> 0.60\n','https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html'),(137,'DIV',14,'Syntax:\nDIV\n\nInteger division. Discards from the division result any fractional part\nto the right of the decimal point.\n\nIf either operand has a noninteger type, the operands are converted to\nDECIMAL and divided using DECIMAL arithmetic before converting the\nresult to BIGINT. If the result exceeds BIGINT range, an error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html\n\n','mysql> SELECT 5 DIV 2, -5 DIV 2, 5 DIV -2, -5 DIV -2;\n        -> 2, -2, -2, 2\n','https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html'),(138,'%',14,'Syntax:\nN % M, N MOD M\n\nModulo operation. Returns the remainder of N divided by M. For more\ninformation, see the description for the MOD() function in\nhttps://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html'),(139,'ABS',14,'Syntax:\nABS(X)\n\nReturns the absolute value of X.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT ABS(2);\n        -> 2\nmysql> SELECT ABS(-32);\n        -> 32\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(140,'ACOS',14,'Syntax:\nACOS(X)\n\nReturns the arc cosine of X, that is, the value whose cosine is X.\nReturns NULL if X is not in the range -1 to 1.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT ACOS(1);\n        -> 0\nmysql> SELECT ACOS(1.0001);\n        -> NULL\nmysql> SELECT ACOS(0);\n        -> 1.5707963267949\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(141,'ASIN',14,'Syntax:\nASIN(X)\n\nReturns the arc sine of X, that is, the value whose sine is X. Returns\nNULL if X is not in the range -1 to 1.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT ASIN(0.2);\n        -> 0.20135792079033\nmysql> SELECT ASIN(\'foo\');\n\n+-------------+\n| ASIN(\'foo\') |\n+-------------+\n|           0 |\n+-------------+\n1 row in set, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS;\n+---------+------+-----------------------------------------+\n| Level   | Code | Message                                 |\n+---------+------+-----------------------------------------+\n| Warning | 1292 | Truncated incorrect DOUBLE value: \'foo\' |\n+---------+------+-----------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(142,'ATAN',14,'Syntax:\nATAN(X)\n\nReturns the arc tangent of X, that is, the value whose tangent is X.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT ATAN(2);\n        -> 1.1071487177941\nmysql> SELECT ATAN(-2);\n        -> -1.1071487177941\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(143,'ATAN2',14,'Syntax:\nATAN(Y,X), ATAN2(Y,X)\n\nReturns the arc tangent of the two variables X and Y. It is similar to\ncalculating the arc tangent of Y / X, except that the signs of both\narguments are used to determine the quadrant of the result.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT ATAN(-2,2);\n        -> -0.78539816339745\nmysql> SELECT ATAN2(PI(),0);\n        -> 1.5707963267949\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(144,'CEIL',14,'Syntax:\nCEIL(X)\n\nCEIL() is a synonym for CEILING().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(145,'CEILING',14,'Syntax:\nCEILING(X)\n\nReturns the smallest integer value not less than X.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT CEILING(1.23);\n        -> 2\nmysql> SELECT CEILING(-1.23);\n        -> -1\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(146,'CONV',14,'Syntax:\nCONV(N,from_base,to_base)\n\nConverts numbers between different number bases. Returns a string\nrepresentation of the number N, converted from base from_base to base\nto_base. Returns NULL if any argument is NULL. The argument N is\ninterpreted as an integer, but may be specified as an integer or a\nstring. The minimum base is 2 and the maximum base is 36. If from_base\nis a negative number, N is regarded as a signed number. Otherwise, N is\ntreated as unsigned. CONV() works with 64-bit precision.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT CONV(\'a\',16,2);\n        -> \'1010\'\nmysql> SELECT CONV(\'6E\',18,8);\n        -> \'172\'\nmysql> SELECT CONV(-17,10,-18);\n        -> \'-H\'\nmysql> SELECT CONV(10+\'10\'+\'10\'+X\'0a\',10,10);\n        -> \'40\'\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(147,'COS',14,'Syntax:\nCOS(X)\n\nReturns the cosine of X, where X is given in radians.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT COS(PI());\n        -> -1\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(148,'COT',14,'Syntax:\nCOT(X)\n\nReturns the cotangent of X.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT COT(12);\n        -> -1.5726734063977\nmysql> SELECT COT(0);\n        -> out-of-range error\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(149,'CRC32',14,'Syntax:\nCRC32(expr)\n\nComputes a cyclic redundancy check value and returns a 32-bit unsigned\nvalue. The result is NULL if the argument is NULL. The argument is\nexpected to be a string and (if possible) is treated as one if it is\nnot.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT CRC32(\'MySQL\');\n        -> 3259397556\nmysql> SELECT CRC32(\'mysql\');\n        -> 2501908538\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(150,'DEGREES',14,'Syntax:\nDEGREES(X)\n\nReturns the argument X, converted from radians to degrees.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT DEGREES(PI());\n        -> 180\nmysql> SELECT DEGREES(PI() / 2);\n        -> 90\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(151,'EXP',14,'Syntax:\nEXP(X)\n\nReturns the value of e (the base of natural logarithms) raised to the\npower of X. The inverse of this function is LOG() (using a single\nargument only) or LN().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT EXP(2);\n        -> 7.3890560989307\nmysql> SELECT EXP(-2);\n        -> 0.13533528323661\nmysql> SELECT EXP(0);\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(152,'FLOOR',14,'Syntax:\nFLOOR(X)\n\nReturns the largest integer value not greater than X.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT FLOOR(1.23), FLOOR(-1.23);\n        -> 1, -2\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(153,'LN',14,'Syntax:\nLN(X)\n\nReturns the natural logarithm of X; that is, the base-e logarithm of X.\nIf X is less than or equal to 0.0E0, the function returns NULL and (as\nof MySQL 5.7.4) a warning \"Invalid argument for logarithm\" is reported.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT LN(2);\n        -> 0.69314718055995\nmysql> SELECT LN(-2);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(154,'LOG',14,'Syntax:\nLOG(X), LOG(B,X)\n\nIf called with one parameter, this function returns the natural\nlogarithm of X. If X is less than or equal to 0.0E0, the function\nreturns NULL and (as of MySQL 5.7.4) a warning \"Invalid argument for\nlogarithm\" is reported.\n\nThe inverse of this function (when called with a single argument) is\nthe EXP() function.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT LOG(2);\n        -> 0.69314718055995\nmysql> SELECT LOG(-2);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(155,'LOG2',14,'Syntax:\nLOG2(X)\n\nReturns the base-2 logarithm of X. If X is less than or equal to 0.0E0,\nthe function returns NULL and (as of MySQL 5.7.4) a warning \"Invalid\nargument for logarithm\" is reported.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT LOG2(65536);\n        -> 16\nmysql> SELECT LOG2(-100);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(156,'LOG10',14,'Syntax:\nLOG10(X)\n\nReturns the base-10 logarithm of X. If X is less than or equal to\n0.0E0, the function returns NULL and (as of MySQL 5.7.4) a warning\n\"Invalid argument for logarithm\" is reported.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT LOG10(2);\n        -> 0.30102999566398\nmysql> SELECT LOG10(100);\n        -> 2\nmysql> SELECT LOG10(-100);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(157,'MOD',14,'Syntax:\nMOD(N,M), N % M, N MOD M\n\nModulo operation. Returns the remainder of N divided by M.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT MOD(234, 10);\n        -> 4\nmysql> SELECT 253 % 7;\n        -> 1\nmysql> SELECT MOD(29,9);\n        -> 2\nmysql> SELECT 29 MOD 9;\n        -> 2\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(158,'PI',14,'Syntax:\nPI()\n\nReturns the value of π (pi). The default number of decimal places\ndisplayed is seven, but MySQL uses the full double-precision value\ninternally.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT PI();\n        -> 3.141593\nmysql> SELECT PI()+0.000000000000000000;\n        -> 3.141592653589793116\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(159,'POW',14,'Syntax:\nPOW(X,Y)\n\nReturns the value of X raised to the power of Y.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT POW(2,2);\n        -> 4\nmysql> SELECT POW(2,-2);\n        -> 0.25\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(160,'POWER',14,'Syntax:\nPOWER(X,Y)\n\nThis is a synonym for POW().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(161,'RADIANS',14,'Syntax:\nRADIANS(X)\n\nReturns the argument X, converted from degrees to radians. (Note that\nπ radians equals 180 degrees.)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT RADIANS(90);\n        -> 1.5707963267949\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(162,'RAND',14,'Syntax:\nRAND([N])\n\nReturns a random floating-point value v in the range 0 <= v < 1.0. To\nobtain a random integer R in the range i <= R < j, use the expression\nFLOOR(i + RAND() * (j − i)). For example, to obtain a random integer\nin the range the range 7 <= R < 12, use the following statement:\n\nSELECT FLOOR(7 + (RAND() * 5));\n\nIf an integer argument N is specified, it is used as the seed value:\n\no With a constant initializer argument, the seed is initialized once\n  when the statement is prepared, prior to execution.\n\no With a nonconstant initializer argument (such as a column name), the\n  seed is initialized with the value for each invocation of RAND().\n\nOne implication of this behavior is that for equal argument values,\nRAND(N) returns the same value each time, and thus produces a\nrepeatable sequence of column values. In the following example, the\nsequence of values produced by RAND(3) is the same both places it\noccurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> CREATE TABLE t (i INT);\nQuery OK, 0 rows affected (0.42 sec)\n\nmysql> INSERT INTO t VALUES(1),(2),(3);\nQuery OK, 3 rows affected (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 0\n\nmysql> SELECT i, RAND() FROM t;\n+------+------------------+\n| i    | RAND()           |\n+------+------------------+\n|    1 | 0.61914388706828 |\n|    2 | 0.93845168309142 |\n|    3 | 0.83482678498591 |\n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND(3) FROM t;\n+------+------------------+\n| i    | RAND(3)          |\n+------+------------------+\n|    1 | 0.90576975597606 |\n|    2 | 0.37307905813035 |\n|    3 | 0.14808605345719 |\n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND() FROM t;\n+------+------------------+\n| i    | RAND()           |\n+------+------------------+\n|    1 | 0.35877890638893 |\n|    2 | 0.28941420772058 |\n|    3 | 0.37073435016976 |\n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND(3) FROM t;\n+------+------------------+\n| i    | RAND(3)          |\n+------+------------------+\n|    1 | 0.90576975597606 |\n|    2 | 0.37307905813035 |\n|    3 | 0.14808605345719 |\n+------+------------------+\n3 rows in set (0.01 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(163,'ROUND',14,'Syntax:\nROUND(X), ROUND(X,D)\n\nRounds the argument X to D decimal places. The rounding algorithm\ndepends on the data type of X. D defaults to 0 if not specified. D can\nbe negative to cause D digits left of the decimal point of the value X\nto become zero.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT ROUND(-1.23);\n        -> -1\nmysql> SELECT ROUND(-1.58);\n        -> -2\nmysql> SELECT ROUND(1.58);\n        -> 2\nmysql> SELECT ROUND(1.298, 1);\n        -> 1.3\nmysql> SELECT ROUND(1.298, 0);\n        -> 1\nmysql> SELECT ROUND(23.298, -1);\n        -> 20\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(164,'SIGN',14,'Syntax:\nSIGN(X)\n\nReturns the sign of the argument as -1, 0, or 1, depending on whether X\nis negative, zero, or positive.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT SIGN(-32);\n        -> -1\nmysql> SELECT SIGN(0);\n        -> 0\nmysql> SELECT SIGN(234);\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(165,'SIN',14,'Syntax:\nSIN(X)\n\nReturns the sine of X, where X is given in radians.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT SIN(PI());\n        -> 1.2246063538224e-16\nmysql> SELECT ROUND(SIN(PI()));\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(166,'SQRT',14,'Syntax:\nSQRT(X)\n\nReturns the square root of a nonnegative number X.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT SQRT(4);\n        -> 2\nmysql> SELECT SQRT(20);\n        -> 4.4721359549996\nmysql> SELECT SQRT(-16);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(167,'TAN',14,'Syntax:\nTAN(X)\n\nReturns the tangent of X, where X is given in radians.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT TAN(PI());\n        -> -1.2246063538224e-16\nmysql> SELECT TAN(PI()+1);\n        -> 1.5574077246549\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(168,'TRUNCATE',14,'Syntax:\nTRUNCATE(X,D)\n\nReturns the number X, truncated to D decimal places. If D is 0, the\nresult has no decimal point or fractional part. D can be negative to\ncause D digits left of the decimal point of the value X to become zero.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT TRUNCATE(1.223,1);\n        -> 1.2\nmysql> SELECT TRUNCATE(1.999,1);\n        -> 1.9\nmysql> SELECT TRUNCATE(1.999,0);\n        -> 1\nmysql> SELECT TRUNCATE(-1.999,1);\n        -> -1.9\nmysql> SELECT TRUNCATE(122,-2);\n       -> 100\nmysql> SELECT TRUNCATE(10.28*100,0);\n       -> 1028\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(169,'ADDDATE',15,'Syntax:\nADDDATE(date,INTERVAL expr unit), ADDDATE(expr,days)\n\nWhen invoked with the INTERVAL form of the second argument, ADDDATE()\nis a synonym for DATE_ADD(). The related function SUBDATE() is a\nsynonym for DATE_SUB(). For information on the INTERVAL unit argument,\nsee\nhttps://dev.mysql.com/doc/refman/5.7/en/expressions.html#temporal-inter\nvals.\n\nmysql> SELECT DATE_ADD(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2008-02-02\'\nmysql> SELECT ADDDATE(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2008-02-02\'\n\nWhen invoked with the days form of the second argument, MySQL treats it\nas an integer number of days to be added to expr.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT ADDDATE(\'2008-01-02\', 31);\n        -> \'2008-02-02\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(170,'ADDTIME',15,'Syntax:\nADDTIME(expr1,expr2)\n\nADDTIME() adds expr2 to expr1 and returns the result. expr1 is a time\nor datetime expression, and expr2 is a time expression.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT ADDTIME(\'2007-12-31 23:59:59.999999\', \'1 1:1:1.000002\');\n        -> \'2008-01-02 01:01:01.000001\'\nmysql> SELECT ADDTIME(\'01:00:00.999999\', \'02:00:00.999998\');\n        -> \'03:00:01.999997\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(171,'CONVERT_TZ',15,'Syntax:\nCONVERT_TZ(dt,from_tz,to_tz)\n\nCONVERT_TZ() converts a datetime value dt from the time zone given by\nfrom_tz to the time zone given by to_tz and returns the resulting\nvalue. Time zones are specified as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/time-zone-support.html. This\nfunction returns NULL if the arguments are invalid.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT CONVERT_TZ(\'2004-01-01 12:00:00\',\'GMT\',\'MET\');\n        -> \'2004-01-01 13:00:00\'\nmysql> SELECT CONVERT_TZ(\'2004-01-01 12:00:00\',\'+00:00\',\'+10:00\');\n        -> \'2004-01-01 22:00:00\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(172,'CURDATE',15,'Syntax:\nCURDATE()\n\nReturns the current date as a value in \'YYYY-MM-DD\' or YYYYMMDD format,\ndepending on whether the function is used in a string or numeric\ncontext.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT CURDATE();\n        -> \'2008-06-13\'\nmysql> SELECT CURDATE() + 0;\n        -> 20080613\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(173,'CURRENT_DATE',15,'Syntax:\nCURRENT_DATE, CURRENT_DATE()\n\nCURRENT_DATE and CURRENT_DATE() are synonyms for CURDATE().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(174,'CURRENT_TIME',15,'Syntax:\nCURRENT_TIME, CURRENT_TIME([fsp])\n\nCURRENT_TIME and CURRENT_TIME() are synonyms for CURTIME().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(175,'CURRENT_TIMESTAMP',15,'Syntax:\nCURRENT_TIMESTAMP, CURRENT_TIMESTAMP([fsp])\n\nCURRENT_TIMESTAMP and CURRENT_TIMESTAMP() are synonyms for NOW().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(176,'CURTIME',15,'Syntax:\nCURTIME([fsp])\n\nReturns the current time as a value in \'hh:mm:ss\' or hhmmss format,\ndepending on whether the function is used in a string or numeric\ncontext. The value is expressed in the session time zone.\n\nIf the fsp argument is given to specify a fractional seconds precision\nfrom 0 to 6, the return value includes a fractional seconds part of\nthat many digits.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT CURTIME();\n        -> \'23:50:26\'\nmysql> SELECT CURTIME() + 0;\n        -> 235026.000000\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(177,'DATE FUNCTION',15,'Syntax:\nDATE(expr)\n\nExtracts the date part of the date or datetime expression expr.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DATE(\'2003-12-31 01:02:03\');\n        -> \'2003-12-31\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(178,'DATEDIFF',15,'Syntax:\nDATEDIFF(expr1,expr2)\n\nDATEDIFF() returns expr1 − expr2 expressed as a value in days from\none date to the other. expr1 and expr2 are date or date-and-time\nexpressions. Only the date parts of the values are used in the\ncalculation.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DATEDIFF(\'2007-12-31 23:59:59\',\'2007-12-30\');\n        -> 1\nmysql> SELECT DATEDIFF(\'2010-11-30 23:59:59\',\'2010-12-31\');\n        -> -31\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(179,'DATE_ADD',15,'Syntax:\nDATE_ADD(date,INTERVAL expr unit), DATE_SUB(date,INTERVAL expr unit)\n\nThese functions perform date arithmetic. The date argument specifies\nthe starting date or datetime value. expr is an expression specifying\nthe interval value to be added or subtracted from the starting date.\nexpr is evaluated as a string; it may start with a - for negative\nintervals. unit is a keyword indicating the units in which the\nexpression should be interpreted.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DATE_ADD(\'2018-05-01\',INTERVAL 1 DAY);\n        -> \'2018-05-02\'\nmysql> SELECT DATE_SUB(\'2018-05-01\',INTERVAL 1 YEAR);\n        -> \'2017-05-01\'\nmysql> SELECT DATE_ADD(\'2020-12-31 23:59:59\',\n    ->                 INTERVAL 1 SECOND);\n        -> \'2021-01-01 00:00:00\'\nmysql> SELECT DATE_ADD(\'2018-12-31 23:59:59\',\n    ->                 INTERVAL 1 DAY);\n        -> \'2019-01-01 23:59:59\'\nmysql> SELECT DATE_ADD(\'2100-12-31 23:59:59\',\n    ->                 INTERVAL \'1:1\' MINUTE_SECOND);\n        -> \'2101-01-01 00:01:00\'\nmysql> SELECT DATE_SUB(\'2025-01-01 00:00:00\',\n    ->                 INTERVAL \'1 1:1:1\' DAY_SECOND);\n        -> \'2024-12-30 22:58:59\'\nmysql> SELECT DATE_ADD(\'1900-01-01 00:00:00\',\n    ->                 INTERVAL \'-1 10\' DAY_HOUR);\n        -> \'1899-12-30 14:00:00\'\nmysql> SELECT DATE_SUB(\'1998-01-02\', INTERVAL 31 DAY);\n        -> \'1997-12-02\'\nmysql> SELECT DATE_ADD(\'1992-12-31 23:59:59.000002\',\n    ->            INTERVAL \'1.999999\' SECOND_MICROSECOND);\n        -> \'1993-01-01 00:00:01.000001\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(180,'DATE_FORMAT',15,'Syntax:\nDATE_FORMAT(date,format)\n\nFormats the date value according to the format string.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DATE_FORMAT(\'2009-10-04 22:23:00\', \'%W %M %Y\');\n        -> \'Sunday October 2009\'\nmysql> SELECT DATE_FORMAT(\'2007-10-04 22:23:00\', \'%H:%i:%s\');\n        -> \'22:23:00\'\nmysql> SELECT DATE_FORMAT(\'1900-10-04 22:23:00\',\n    ->                 \'%D %y %a %d %m %b %j\');\n        -> \'4th 00 Thu 04 10 Oct 277\'\nmysql> SELECT DATE_FORMAT(\'1997-10-04 22:23:00\',\n    ->                 \'%H %k %I %r %T %S %w\');\n        -> \'22 22 10 10:23:00 PM 22:23:00 00 6\'\nmysql> SELECT DATE_FORMAT(\'1999-01-01\', \'%X %V\');\n        -> \'1998 52\'\nmysql> SELECT DATE_FORMAT(\'2006-06-00\', \'%d\');\n        -> \'00\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(181,'DATE_SUB',15,'Syntax:\nDATE_SUB(date,INTERVAL expr unit)\n\nSee the description for DATE_ADD().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(182,'DAY',15,'Syntax:\nDAY(date)\n\nDAY() is a synonym for DAYOFMONTH().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(183,'DAYNAME',15,'Syntax:\nDAYNAME(date)\n\nReturns the name of the weekday for date. The language used for the\nname is controlled by the value of the lc_time_names system variable\n(https://dev.mysql.com/doc/refman/5.7/en/locale-support.html).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DAYNAME(\'2007-02-03\');\n        -> \'Saturday\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(184,'DAYOFMONTH',15,'Syntax:\nDAYOFMONTH(date)\n\nReturns the day of the month for date, in the range 1 to 31, or 0 for\ndates such as \'0000-00-00\' or \'2008-00-00\' that have a zero day part.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DAYOFMONTH(\'2007-02-03\');\n        -> 3\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(185,'DAYOFWEEK',15,'Syntax:\nDAYOFWEEK(date)\n\nReturns the weekday index for date (1 = Sunday, 2 = Monday, ..., 7 =\nSaturday). These index values correspond to the ODBC standard.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DAYOFWEEK(\'2007-02-03\');\n        -> 7\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(186,'DAYOFYEAR',15,'Syntax:\nDAYOFYEAR(date)\n\nReturns the day of the year for date, in the range 1 to 366.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DAYOFYEAR(\'2007-02-03\');\n        -> 34\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(187,'EXTRACT',15,'Syntax:\nEXTRACT(unit FROM date)\n\nThe EXTRACT() function uses the same kinds of unit specifiers as\nDATE_ADD() or DATE_SUB(), but extracts parts from the date rather than\nperforming date arithmetic. For information on the unit argument, see\nhttps://dev.mysql.com/doc/refman/5.7/en/expressions.html#temporal-inter\nvals.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT EXTRACT(YEAR FROM \'2019-07-02\');\n        -> 2019\nmysql> SELECT EXTRACT(YEAR_MONTH FROM \'2019-07-02 01:02:03\');\n        -> 201907\nmysql> SELECT EXTRACT(DAY_MINUTE FROM \'2019-07-02 01:02:03\');\n        -> 20102\nmysql> SELECT EXTRACT(MICROSECOND\n    ->                FROM \'2003-01-02 10:30:00.000123\');\n        -> 123\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(188,'FROM_DAYS',15,'Syntax:\nFROM_DAYS(N)\n\nGiven a day number N, returns a DATE value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT FROM_DAYS(730669);\n        -> \'2000-07-03\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(189,'FROM_UNIXTIME',15,'Syntax:\nFROM_UNIXTIME(unix_timestamp[,format])\n\nReturns a representation of the unix_timestamp argument as a value in\n\'YYYY-MM-DD hh:mm:ss\' or YYYYMMDDhhmmss.uuuuuu format, depending on\nwhether the function is used in a string or numeric context.\nunix_timestamp is an internal timestamp value representing seconds\nsince \'1970-01-01 00:00:00\' UTC, such as produced by the\nUNIX_TIMESTAMP() function.\n\nThe return value is expressed in the session time zone. (Clients can\nset the session time zone as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/time-zone-support.html.) The\nformat string, if given, is used to format the result the same way as\ndescribed in the entry for the DATE_FORMAT() function.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT FROM_UNIXTIME(1447430881);\n        -> \'2015-11-13 10:08:01\'\nmysql> SELECT FROM_UNIXTIME(1447430881) + 0;\n        -> 20151113100801\nmysql> SELECT FROM_UNIXTIME(1447430881,\n    ->                      \'%Y %D %M %h:%i:%s %x\');\n        -> \'2015 13th November 10:08:01 2015\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(190,'GET_FORMAT',15,'Syntax:\nGET_FORMAT({DATE|TIME|DATETIME}, {\'EUR\'|\'USA\'|\'JIS\'|\'ISO\'|\'INTERNAL\'})\n\nReturns a format string. This function is useful in combination with\nthe DATE_FORMAT() and the STR_TO_DATE() functions.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DATE_FORMAT(\'2003-10-03\',GET_FORMAT(DATE,\'EUR\'));\n        -> \'03.10.2003\'\nmysql> SELECT STR_TO_DATE(\'10.31.2003\',GET_FORMAT(DATE,\'USA\'));\n        -> \'2003-10-31\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(191,'HOUR',15,'Syntax:\nHOUR(time)\n\nReturns the hour for time. The range of the return value is 0 to 23 for\ntime-of-day values. However, the range of TIME values actually is much\nlarger, so HOUR can return values greater than 23.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT HOUR(\'10:05:03\');\n        -> 10\nmysql> SELECT HOUR(\'272:59:59\');\n        -> 272\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(192,'LAST_DAY',15,'Syntax:\nLAST_DAY(date)\n\nTakes a date or datetime value and returns the corresponding value for\nthe last day of the month. Returns NULL if the argument is invalid.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT LAST_DAY(\'2003-02-05\');\n        -> \'2003-02-28\'\nmysql> SELECT LAST_DAY(\'2004-02-05\');\n        -> \'2004-02-29\'\nmysql> SELECT LAST_DAY(\'2004-01-01 01:01:01\');\n        -> \'2004-01-31\'\nmysql> SELECT LAST_DAY(\'2003-03-32\');\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(193,'LOCALTIME',15,'Syntax:\nLOCALTIME, LOCALTIME([fsp])\n\nLOCALTIME and LOCALTIME() are synonyms for NOW().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(194,'LOCALTIMESTAMP',15,'Syntax:\nLOCALTIMESTAMP, LOCALTIMESTAMP([fsp])\n\nLOCALTIMESTAMP and LOCALTIMESTAMP() are synonyms for NOW().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(195,'MAKEDATE',15,'Syntax:\nMAKEDATE(year,dayofyear)\n\nReturns a date, given year and day-of-year values. dayofyear must be\ngreater than 0 or the result is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT MAKEDATE(2011,31), MAKEDATE(2011,32);\n        -> \'2011-01-31\', \'2011-02-01\'\nmysql> SELECT MAKEDATE(2011,365), MAKEDATE(2014,365);\n        -> \'2011-12-31\', \'2014-12-31\'\nmysql> SELECT MAKEDATE(2011,0);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(196,'MAKETIME',15,'Syntax:\nMAKETIME(hour,minute,second)\n\nReturns a time value calculated from the hour, minute, and second\narguments.\n\nThe second argument can have a fractional part.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT MAKETIME(12,15,30);\n        -> \'12:15:30\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(197,'MICROSECOND',15,'Syntax:\nMICROSECOND(expr)\n\nReturns the microseconds from the time or datetime expression expr as a\nnumber in the range from 0 to 999999.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT MICROSECOND(\'12:00:00.123456\');\n        -> 123456\nmysql> SELECT MICROSECOND(\'2019-12-31 23:59:59.000010\');\n        -> 10\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(198,'MINUTE',15,'Syntax:\nMINUTE(time)\n\nReturns the minute for time, in the range 0 to 59.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT MINUTE(\'2008-02-03 10:05:03\');\n        -> 5\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(199,'MONTH',15,'Syntax:\nMONTH(date)\n\nReturns the month for date, in the range 1 to 12 for January to\nDecember, or 0 for dates such as \'0000-00-00\' or \'2008-00-00\' that have\na zero month part.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT MONTH(\'2008-02-03\');\n        -> 2\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(200,'MONTHNAME',15,'Syntax:\nMONTHNAME(date)\n\nReturns the full name of the month for date. The language used for the\nname is controlled by the value of the lc_time_names system variable\n(https://dev.mysql.com/doc/refman/5.7/en/locale-support.html).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT MONTHNAME(\'2008-02-03\');\n        -> \'February\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(201,'NOW',15,'Syntax:\nNOW([fsp])\n\nReturns the current date and time as a value in \'YYYY-MM-DD hh:mm:ss\'\nor YYYYMMDDhhmmss format, depending on whether the function is used in\na string or numeric context. The value is expressed in the session time\nzone.\n\nIf the fsp argument is given to specify a fractional seconds precision\nfrom 0 to 6, the return value includes a fractional seconds part of\nthat many digits.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT NOW();\n        -> \'2007-12-15 23:50:26\'\nmysql> SELECT NOW() + 0;\n        -> 20071215235026.000000\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(202,'PERIOD_ADD',15,'Syntax:\nPERIOD_ADD(P,N)\n\nAdds N months to period P (in the format YYMM or YYYYMM). Returns a\nvalue in the format YYYYMM.\n\n*Note*:\n\nThe period argument P is not a date value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT PERIOD_ADD(200801,2);\n        -> 200803\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(203,'PERIOD_DIFF',15,'Syntax:\nPERIOD_DIFF(P1,P2)\n\nReturns the number of months between periods P1 and P2. P1 and P2\nshould be in the format YYMM or YYYYMM. Note that the period arguments\nP1 and P2 are not date values.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT PERIOD_DIFF(200802,200703);\n        -> 11\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(204,'QUARTER',15,'Syntax:\nQUARTER(date)\n\nReturns the quarter of the year for date, in the range 1 to 4.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT QUARTER(\'2008-04-01\');\n        -> 2\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(205,'SECOND',15,'Syntax:\nSECOND(time)\n\nReturns the second for time, in the range 0 to 59.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT SECOND(\'10:05:03\');\n        -> 3\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(206,'SEC_TO_TIME',15,'Syntax:\nSEC_TO_TIME(seconds)\n\nReturns the seconds argument, converted to hours, minutes, and seconds,\nas a TIME value. The range of the result is constrained to that of the\nTIME data type. A warning occurs if the argument corresponds to a value\noutside that range.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT SEC_TO_TIME(2378);\n        -> \'00:39:38\'\nmysql> SELECT SEC_TO_TIME(2378) + 0;\n        -> 3938\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(207,'STR_TO_DATE',15,'Syntax:\nSTR_TO_DATE(str,format)\n\nThis is the inverse of the DATE_FORMAT() function. It takes a string\nstr and a format string format. STR_TO_DATE() returns a DATETIME value\nif the format string contains both date and time parts, or a DATE or\nTIME value if the string contains only date or time parts. If the date,\ntime, or datetime value extracted from str is illegal, STR_TO_DATE()\nreturns NULL and produces a warning.\n\nThe server scans str attempting to match format to it. The format\nstring can contain literal characters and format specifiers beginning\nwith %. Literal characters in format must match literally in str.\nFormat specifiers in format must match a date or time part in str. For\nthe specifiers that can be used in format, see the DATE_FORMAT()\nfunction description.\n\nmysql> SELECT STR_TO_DATE(\'01,5,2013\',\'%d,%m,%Y\');\n        -> \'2013-05-01\'\nmysql> SELECT STR_TO_DATE(\'May 1, 2013\',\'%M %d,%Y\');\n        -> \'2013-05-01\'\n\nScanning starts at the beginning of str and fails if format is found\nnot to match. Extra characters at the end of str are ignored.\n\nmysql> SELECT STR_TO_DATE(\'a09:30:17\',\'a%h:%i:%s\');\n        -> \'09:30:17\'\nmysql> SELECT STR_TO_DATE(\'a09:30:17\',\'%h:%i:%s\');\n        -> NULL\nmysql> SELECT STR_TO_DATE(\'09:30:17a\',\'%h:%i:%s\');\n        -> \'09:30:17\'\n\nUnspecified date or time parts have a value of 0, so incompletely\nspecified values in str produce a result with some or all parts set to\n0:\n\nmysql> SELECT STR_TO_DATE(\'abc\',\'abc\');\n        -> \'0000-00-00\'\nmysql> SELECT STR_TO_DATE(\'9\',\'%m\');\n        -> \'0000-09-00\'\nmysql> SELECT STR_TO_DATE(\'9\',\'%s\');\n        -> \'00:00:09\'\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(208,'SUBDATE',15,'Syntax:\nSUBDATE(date,INTERVAL expr unit), SUBDATE(expr,days)\n\nWhen invoked with the INTERVAL form of the second argument, SUBDATE()\nis a synonym for DATE_SUB(). For information on the INTERVAL unit\nargument, see the discussion for DATE_ADD().\n\nmysql> SELECT DATE_SUB(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2007-12-02\'\nmysql> SELECT SUBDATE(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2007-12-02\'\n\nThe second form enables the use of an integer value for days. In such\ncases, it is interpreted as the number of days to be subtracted from\nthe date or datetime expression expr.\n\nmysql> SELECT SUBDATE(\'2008-01-02 12:00:00\', 31);\n        -> \'2007-12-02 12:00:00\'\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(209,'SUBTIME',15,'Syntax:\nSUBTIME(expr1,expr2)\n\nSUBTIME() returns expr1 − expr2 expressed as a value in the same\nformat as expr1. expr1 is a time or datetime expression, and expr2 is a\ntime expression.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT SUBTIME(\'2007-12-31 23:59:59.999999\',\'1 1:1:1.000002\');\n        -> \'2007-12-30 22:58:58.999997\'\nmysql> SELECT SUBTIME(\'01:00:00.999999\', \'02:00:00.999998\');\n        -> \'-00:59:59.999999\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(210,'SYSDATE',15,'Syntax:\nSYSDATE([fsp])\n\nReturns the current date and time as a value in \'YYYY-MM-DD hh:mm:ss\'\nor YYYYMMDDhhmmss format, depending on whether the function is used in\na string or numeric context.\n\nIf the fsp argument is given to specify a fractional seconds precision\nfrom 0 to 6, the return value includes a fractional seconds part of\nthat many digits.\n\nSYSDATE() returns the time at which it executes. This differs from the\nbehavior for NOW(), which returns a constant time that indicates the\ntime at which the statement began to execute. (Within a stored function\nor trigger, NOW() returns the time at which the function or triggering\nstatement began to execute.)\n\nmysql> SELECT NOW(), SLEEP(2), NOW();\n+---------------------+----------+---------------------+\n| NOW()               | SLEEP(2) | NOW()               |\n+---------------------+----------+---------------------+\n| 2006-04-12 13:47:36 |        0 | 2006-04-12 13:47:36 |\n+---------------------+----------+---------------------+\n\nmysql> SELECT SYSDATE(), SLEEP(2), SYSDATE();\n+---------------------+----------+---------------------+\n| SYSDATE()           | SLEEP(2) | SYSDATE()           |\n+---------------------+----------+---------------------+\n| 2006-04-12 13:47:44 |        0 | 2006-04-12 13:47:46 |\n+---------------------+----------+---------------------+\n\nIn addition, the SET TIMESTAMP statement affects the value returned by\nNOW() but not by SYSDATE(). This means that timestamp settings in the\nbinary log have no effect on invocations of SYSDATE().\n\nBecause SYSDATE() can return different values even within the same\nstatement, and is not affected by SET TIMESTAMP, it is nondeterministic\nand therefore unsafe for replication if statement-based binary logging\nis used. If that is a problem, you can use row-based logging.\n\nAlternatively, you can use the --sysdate-is-now option to cause\nSYSDATE() to be an alias for NOW(). This works if the option is used on\nboth the master and the slave.\n\nThe nondeterministic nature of SYSDATE() also means that indexes cannot\nbe used for evaluating expressions that refer to it.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(211,'TIME FUNCTION',15,'Syntax:\nTIME(expr)\n\nExtracts the time part of the time or datetime expression expr and\nreturns it as a string.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TIME(\'2003-12-31 01:02:03\');\n        -> \'01:02:03\'\nmysql> SELECT TIME(\'2003-12-31 01:02:03.000123\');\n        -> \'01:02:03.000123\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(212,'TIMEDIFF',15,'Syntax:\nTIMEDIFF(expr1,expr2)\n\nTIMEDIFF() returns expr1 − expr2 expressed as a time value. expr1 and\nexpr2 are time or date-and-time expressions, but both must be of the\nsame type.\n\nThe result returned by TIMEDIFF() is limited to the range allowed for\nTIME values. Alternatively, you can use either of the functions\nTIMESTAMPDIFF() and UNIX_TIMESTAMP(), both of which return integers.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TIMEDIFF(\'2000:01:01 00:00:00\',\n    ->                 \'2000:01:01 00:00:00.000001\');\n        -> \'-00:00:00.000001\'\nmysql> SELECT TIMEDIFF(\'2008-12-31 23:59:59.000001\',\n    ->                 \'2008-12-30 01:01:01.000002\');\n        -> \'46:58:57.999999\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(213,'TIMESTAMP FUNCTION',15,'Syntax:\nTIMESTAMP(expr), TIMESTAMP(expr1,expr2)\n\nWith a single argument, this function returns the date or datetime\nexpression expr as a datetime value. With two arguments, it adds the\ntime expression expr2 to the date or datetime expression expr1 and\nreturns the result as a datetime value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TIMESTAMP(\'2003-12-31\');\n        -> \'2003-12-31 00:00:00\'\nmysql> SELECT TIMESTAMP(\'2003-12-31 12:00:00\',\'12:00:00\');\n        -> \'2004-01-01 00:00:00\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(214,'TIMESTAMPADD',15,'Syntax:\nTIMESTAMPADD(unit,interval,datetime_expr)\n\nAdds the integer expression interval to the date or datetime expression\ndatetime_expr. The unit for interval is given by the unit argument,\nwhich should be one of the following values: MICROSECOND\n(microseconds), SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, QUARTER, or\nYEAR.\n\nThe unit value may be specified using one of keywords as shown, or with\na prefix of SQL_TSI_. For example, DAY and SQL_TSI_DAY both are legal.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TIMESTAMPADD(MINUTE,1,\'2003-01-02\');\n        -> \'2003-01-02 00:01:00\'\nmysql> SELECT TIMESTAMPADD(WEEK,1,\'2003-01-02\');\n        -> \'2003-01-09\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(215,'TIMESTAMPDIFF',15,'Syntax:\nTIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2)\n\nReturns datetime_expr2 − datetime_expr1, where datetime_expr1 and\ndatetime_expr2 are date or datetime expressions. One expression may be\na date and the other a datetime; a date value is treated as a datetime\nhaving the time part \'00:00:00\' where necessary. The unit for the\nresult (an integer) is given by the unit argument. The legal values for\nunit are the same as those listed in the description of the\nTIMESTAMPADD() function.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TIMESTAMPDIFF(MONTH,\'2003-02-01\',\'2003-05-01\');\n        -> 3\nmysql> SELECT TIMESTAMPDIFF(YEAR,\'2002-05-01\',\'2001-01-01\');\n        -> -1\nmysql> SELECT TIMESTAMPDIFF(MINUTE,\'2003-02-01\',\'2003-05-01 12:05:55\');\n        -> 128885\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(216,'TIME_FORMAT',15,'Syntax:\nTIME_FORMAT(time,format)\n\nThis is used like the DATE_FORMAT() function, but the format string may\ncontain format specifiers only for hours, minutes, seconds, and\nmicroseconds. Other specifiers produce a NULL value or 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TIME_FORMAT(\'100:00:00\', \'%H %k %h %I %l\');\n        -> \'100 100 04 04 4\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(217,'TIME_TO_SEC',15,'Syntax:\nTIME_TO_SEC(time)\n\nReturns the time argument, converted to seconds.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TIME_TO_SEC(\'22:23:00\');\n        -> 80580\nmysql> SELECT TIME_TO_SEC(\'00:39:38\');\n        -> 2378\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(218,'TO_DAYS',15,'Syntax:\nTO_DAYS(date)\n\nGiven a date date, returns a day number (the number of days since year\n0).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TO_DAYS(950501);\n        -> 728779\nmysql> SELECT TO_DAYS(\'2007-10-07\');\n        -> 733321\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(219,'TO_SECONDS',15,'Syntax:\nTO_SECONDS(expr)\n\nGiven a date or datetime expr, returns the number of seconds since the\nyear 0. If expr is not a valid date or datetime value, returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TO_SECONDS(950501);\n        -> 62966505600\nmysql> SELECT TO_SECONDS(\'2009-11-29\');\n        -> 63426672000\nmysql> SELECT TO_SECONDS(\'2009-11-29 13:43:32\');\n        -> 63426721412\nmysql> SELECT TO_SECONDS( NOW() );\n        -> 63426721458\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(220,'UNIX_TIMESTAMP',15,'Syntax:\nUNIX_TIMESTAMP([date])\n\nIf UNIX_TIMESTAMP() is called with no date argument, it returns a Unix\ntimestamp representing seconds since \'1970-01-01 00:00:00\' UTC.\n\nIf UNIX_TIMESTAMP() is called with a date argument, it returns the\nvalue of the argument as seconds since \'1970-01-01 00:00:00\' UTC. The\nserver interprets date as a value in the session time zone and converts\nit to an internal Unix timestamp value in UTC. (Clients can set the\nsession time zone as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/time-zone-support.html.) The\ndate argument may be a DATE, DATETIME, or TIMESTAMP string, or a number\nin YYMMDD, YYMMDDhhmmss, YYYYMMDD, or YYYYMMDDhhmmss format. If the\nargument includes a time part, it may optionally include a fractional\nseconds part.\n\nThe return value is an integer if no argument is given or the argument\ndoes not include a fractional seconds part, or DECIMAL if an argument\nis given that includes a fractional seconds part.\n\nWhen the date argument is a TIMESTAMP column, UNIX_TIMESTAMP() returns\nthe internal timestamp value directly, with no implicit\n\"string-to-Unix-timestamp\" conversion.\n\nThe valid range of argument values is the same as for the TIMESTAMP\ndata type: \'1970-01-01 00:00:01.000000\' UTC to \'2038-01-19\n03:14:07.999999\' UTC. If you pass an out-of-range date to\nUNIX_TIMESTAMP(), it returns 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT UNIX_TIMESTAMP();\n        -> 1447431666\nmysql> SELECT UNIX_TIMESTAMP(\'2015-11-13 10:20:19\');\n        -> 1447431619\nmysql> SELECT UNIX_TIMESTAMP(\'2015-11-13 10:20:19.012\');\n        -> 1447431619.012\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(221,'UTC_DATE',15,'Syntax:\nUTC_DATE, UTC_DATE()\n\nReturns the current UTC date as a value in \'YYYY-MM-DD\' or YYYYMMDD\nformat, depending on whether the function is used in a string or\nnumeric context.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT UTC_DATE(), UTC_DATE() + 0;\n        -> \'2003-08-14\', 20030814\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(222,'UTC_TIME',15,'Syntax:\nUTC_TIME, UTC_TIME([fsp])\n\nReturns the current UTC time as a value in \'hh:mm:ss\' or hhmmss format,\ndepending on whether the function is used in a string or numeric\ncontext.\n\nIf the fsp argument is given to specify a fractional seconds precision\nfrom 0 to 6, the return value includes a fractional seconds part of\nthat many digits.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT UTC_TIME(), UTC_TIME() + 0;\n        -> \'18:07:53\', 180753.000000\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(223,'UTC_TIMESTAMP',15,'Syntax:\nUTC_TIMESTAMP, UTC_TIMESTAMP([fsp])\n\nReturns the current UTC date and time as a value in \'YYYY-MM-DD\nhh:mm:ss\' or YYYYMMDDhhmmss format, depending on whether the function\nis used in a string or numeric context.\n\nIf the fsp argument is given to specify a fractional seconds precision\nfrom 0 to 6, the return value includes a fractional seconds part of\nthat many digits.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT UTC_TIMESTAMP(), UTC_TIMESTAMP() + 0;\n        -> \'2003-08-14 18:08:04\', 20030814180804.000000\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(224,'WEEK',15,'Syntax:\nWEEK(date[,mode])\n\nThis function returns the week number for date. The two-argument form\nof WEEK() enables you to specify whether the week starts on Sunday or\nMonday and whether the return value should be in the range from 0 to 53\nor from 1 to 53. If the mode argument is omitted, the value of the\ndefault_week_format system variable is used. See\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT WEEK(\'2008-02-20\');\n        -> 7\nmysql> SELECT WEEK(\'2008-02-20\',0);\n        -> 7\nmysql> SELECT WEEK(\'2008-02-20\',1);\n        -> 8\nmysql> SELECT WEEK(\'2008-12-31\',1);\n        -> 53\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(225,'WEEKDAY',15,'Syntax:\nWEEKDAY(date)\n\nReturns the weekday index for date (0 = Monday, 1 = Tuesday, ... 6 =\nSunday).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT WEEKDAY(\'2008-02-03 22:23:00\');\n        -> 6\nmysql> SELECT WEEKDAY(\'2007-11-06\');\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(226,'WEEKOFYEAR',15,'Syntax:\nWEEKOFYEAR(date)\n\nReturns the calendar week of the date as a number in the range from 1\nto 53. WEEKOFYEAR() is a compatibility function that is equivalent to\nWEEK(date,3).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT WEEKOFYEAR(\'2008-02-20\');\n        -> 8\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(227,'YEAR',15,'Syntax:\nYEAR(date)\n\nReturns the year for date, in the range 1000 to 9999, or 0 for the\n\"zero\" date.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT YEAR(\'1987-01-01\');\n        -> 1987\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(228,'YEARWEEK',15,'Syntax:\nYEARWEEK(date), YEARWEEK(date,mode)\n\nReturns year and week for a date. The year in the result may be\ndifferent from the year in the date argument for the first and the last\nweek of the year.\n\nThe mode argument works exactly like the mode argument to WEEK(). For\nthe single-argument syntax, a mode value of 0 is used. Unlike WEEK(),\nthe value of default_week_format does not influence YEARWEEK().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT YEARWEEK(\'1987-01-01\');\n        -> 198652\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(229,'MATCH AGAINST',13,'Syntax:\nMATCH (col1,col2,...) AGAINST (expr [search_modifier])\n\nMySQL has support for full-text indexing and searching:\n\no A full-text index in MySQL is an index of type FULLTEXT.\n\no Full-text indexes can be used only with InnoDB or MyISAM tables, and\n  can be created only for CHAR, VARCHAR, or TEXT columns.\n\no As of MySQL 5.7.6, MySQL provides a built-in full-text ngram parser\n  that supports Chinese, Japanese, and Korean (CJK), and an installable\n  MeCab full-text parser plugin for Japanese. Parsing differences are\n  outlined in\n  https://dev.mysql.com/doc/refman/5.7/en/fulltext-search-ngram.html,\n  and\n  https://dev.mysql.com/doc/refman/5.7/en/fulltext-search-mecab.html.\n\no A FULLTEXT index definition can be given in the CREATE TABLE\n  statement when a table is created, or added later using ALTER TABLE\n  or CREATE INDEX.\n\no For large data sets, it is much faster to load your data into a table\n  that has no FULLTEXT index and then create the index after that, than\n  to load data into a table that has an existing FULLTEXT index.\n\nFull-text searching is performed using MATCH() ... AGAINST syntax.\nMATCH() takes a comma-separated list that names the columns to be\nsearched. AGAINST takes a string to search for, and an optional\nmodifier that indicates what type of search to perform. The search\nstring must be a string value that is constant during query evaluation.\nThis rules out, for example, a table column because that can differ for\neach row.\n\nThere are three types of full-text searches:\n\no A natural language search interprets the search string as a phrase in\n  natural human language (a phrase in free text). There are no special\n  operators, with the exception of double quote (\") characters. The\n  stopword list applies. For more information about stopword lists, see\n  https://dev.mysql.com/doc/refman/5.7/en/fulltext-stopwords.html.\n\n  Full-text searches are natural language searches if the IN NATURAL\n  LANGUAGE MODE modifier is given or if no modifier is given. For more\n  information, see\n  https://dev.mysql.com/doc/refman/5.7/en/fulltext-natural-language.htm\n  l.\n\no A boolean search interprets the search string using the rules of a\n  special query language. The string contains the words to search for.\n  It can also contain operators that specify requirements such that a\n  word must be present or absent in matching rows, or that it should be\n  weighted higher or lower than usual. Certain common words (stopwords)\n  are omitted from the search index and do not match if present in the\n  search string. The IN BOOLEAN MODE modifier specifies a boolean\n  search. For more information, see\n  https://dev.mysql.com/doc/refman/5.7/en/fulltext-boolean.html.\n\no A query expansion search is a modification of a natural language\n  search. The search string is used to perform a natural language\n  search. Then words from the most relevant rows returned by the search\n  are added to the search string and the search is done again. The\n  query returns the rows from the second search. The IN NATURAL\n  LANGUAGE MODE WITH QUERY EXPANSION or WITH QUERY EXPANSION modifier\n  specifies a query expansion search. For more information, see\n  https://dev.mysql.com/doc/refman/5.7/en/fulltext-query-expansion.html\n  .\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/fulltext-search.html\n\n','mysql> SELECT id, body, MATCH (title,body) AGAINST\n    (\'Security implications of running MySQL as root\'\n    IN NATURAL LANGUAGE MODE) AS score\n    FROM articles WHERE MATCH (title,body) AGAINST\n    (\'Security implications of running MySQL as root\'\n    IN NATURAL LANGUAGE MODE);\n+----+-------------------------------------+-----------------+\n| id | body                                | score           |\n+----+-------------------------------------+-----------------+\n|  4 | 1. Never run mysqld as root. 2. ... | 1.5219271183014 |\n|  6 | When configured properly, MySQL ... | 1.3114095926285 |\n+----+-------------------------------------+-----------------+\n2 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/fulltext-search.html'),(230,'BINARY OPERATOR',13,'Syntax:\nBINARY expr\n\nThe BINARY operator converts the expression to a binary string. A\ncommon use for BINARY is to force a character string comparison to be\ndone byte by byte rather than character by character, in effect\nbecoming case-sensitive. The BINARY operator also causes trailing\nspaces in comparisons to be significant.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html\n\n','mysql> SELECT \'a\' = \'A\';\n        -> 1\nmysql> SELECT BINARY \'a\' = \'A\';\n        -> 0\nmysql> SELECT \'a\' = \'a \';\n        -> 1\nmysql> SELECT BINARY \'a\' = \'a \';\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html'),(231,'CAST',13,'Syntax:\nCAST(expr AS type)\n\nThe CAST() function takes an expression of any type and produces a\nresult value of the specified type, similar to CONVERT(). For more\ninformation, see the description of CONVERT().\n\nCAST() is standard SQL syntax.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html'),(232,'CONVERT',13,'Syntax:\nCONVERT(expr,type), CONVERT(expr USING transcoding_name)\n\nThe CONVERT() function takes an expression of any type and produces a\nresult value of the specified type.\n\nDiscussion of CONVERT(expr, type) syntax here also applies to CAST(expr\nAS type), which is equivalent.\n\nCONVERT(... USING ...) is standard SQL syntax. The non-USING form of\nCONVERT() is ODBC syntax.\n\nCONVERT() with USING converts data between different character sets. In\nMySQL, transcoding names are the same as the corresponding character\nset names. For example, this statement converts the string \'abc\' in the\ndefault character set to the corresponding string in the utf8 character\nset:\n\nSELECT CONVERT(\'abc\' USING utf8);\n\nCONVERT() without USING and CAST() take an expression and a type value\nspecifying the result type. These type values are permitted:\n\no BINARY[(N)]\n\n  Produces a string with the BINARY data type. See\n  https://dev.mysql.com/doc/refman/5.7/en/binary-varbinary.html for a\n  description of how this affects comparisons. If the optional length N\n  is given, BINARY(N) causes the cast to use no more than N bytes of\n  the argument. Values shorter than N bytes are padded with 0x00 bytes\n  to a length of N.\n\no CHAR[(N)] [charset_info]\n\n  Produces a string with the CHAR data type. If the optional length N\n  is given, CHAR(N) causes the cast to use no more than N characters of\n  the argument. No padding occurs for values shorter than N characters.\n\n  With no charset_info clause, CHAR produces a string with the default\n  character set. To specify the character set explicitly, these\n  charset_info values are permitted:\n\n  o CHARACTER SET charset_name: Produces a string with the given\n    character set.\n\n  o ASCII: Shorthand for CHARACTER SET latin1.\n\n  o UNICODE: Shorthand for CHARACTER SET ucs2.\n\n  In all cases, the string has the default collation for the character\n  set.\n\no DATE\n\n  Produces a DATE value.\n\no DATETIME\n\n  Produces a DATETIME value.\n\no DECIMAL[(M[,D])]\n\n  Produces a DECIMAL value. If the optional M and D values are given,\n  they specify the maximum number of digits (the precision) and the\n  number of digits following the decimal point (the scale).\n\no JSON (added in MySQL 5.7.8)\n\n  Produces a JSON value. For details on the rules for conversion of\n  values between JSON and other types, see\n  https://dev.mysql.com/doc/refman/5.7/en/json.html#json-comparison.\n\no NCHAR[(N)]\n\n  Like CHAR, but produces a string with the national character set. See\n  https://dev.mysql.com/doc/refman/5.7/en/charset-national.html.\n\n  Unlike CHAR, NCHAR does not permit trailing character set information\n  to be specified.\n\no SIGNED [INTEGER]\n\n  Produces a signed integer value.\n\no TIME\n\n  Produces a TIME value.\n\no UNSIGNED [INTEGER]\n\n  Produces an unsigned integer value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html'),(233,'EXTRACTVALUE',13,'Syntax:\nExtractValue(xml_frag, xpath_expr)\n\nExtractValue() takes two string arguments, a fragment of XML markup\nxml_frag and an XPath expression xpath_expr (also known as a locator);\nit returns the text (CDATA) of the first text node which is a child of\nthe element or elements matched by the XPath expression.\n\nUsing this function is the equivalent of performing a match using the\nxpath_expr after appending /text(). In other words,\nExtractValue(\'<a><b>Sakila</b></a>\', \'/a/b\') and\nExtractValue(\'<a><b>Sakila</b></a>\', \'/a/b/text()\') produce the same\nresult.\n\nIf multiple matches are found, the content of the first child text node\nof each matching element is returned (in the order matched) as a\nsingle, space-delimited string.\n\nIf no matching text node is found for the expression (including the\nimplicit /text())---for whatever reason, as long as xpath_expr is\nvalid, and xml_frag consists of elements which are properly nested and\nclosed---an empty string is returned. No distinction is made between a\nmatch on an empty element and no match at all. This is by design.\n\nIf you need to determine whether no matching element was found in\nxml_frag or such an element was found but contained no child text\nnodes, you should test the result of an expression that uses the XPath\ncount() function. For example, both of these statements return an empty\nstring, as shown here:\n\nmysql> SELECT ExtractValue(\'<a><b/></a>\', \'/a/b\');\n+-------------------------------------+\n| ExtractValue(\'<a><b/></a>\', \'/a/b\') |\n+-------------------------------------+\n|                                     |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT ExtractValue(\'<a><c/></a>\', \'/a/b\');\n+-------------------------------------+\n| ExtractValue(\'<a><c/></a>\', \'/a/b\') |\n+-------------------------------------+\n|                                     |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\nHowever, you can determine whether there was actually a matching\nelement using the following:\n\nmysql> SELECT ExtractValue(\'<a><b/></a>\', \'count(/a/b)\');\n+-------------------------------------+\n| ExtractValue(\'<a><b/></a>\', \'count(/a/b)\') |\n+-------------------------------------+\n| 1                                   |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT ExtractValue(\'<a><c/></a>\', \'count(/a/b)\');\n+-------------------------------------+\n| ExtractValue(\'<a><c/></a>\', \'count(/a/b)\') |\n+-------------------------------------+\n| 0                                   |\n+-------------------------------------+\n1 row in set (0.01 sec)\n\n*Important*:\n\nExtractValue() returns only CDATA, and does not return any tags that\nmight be contained within a matching tag, nor any of their content (see\nthe result returned as val1 in the following example).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/xml-functions.html\n\n','mysql> SELECT\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'/a\') AS val1,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'/a/b\') AS val2,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'//b\') AS val3,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'/b\') AS val4,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b><b>eee</b></a>\', \'//b\') AS val5;\n\n+------+------+------+------+---------+\n| val1 | val2 | val3 | val4 | val5    |\n+------+------+------+------+---------+\n| ccc  | ddd  | ddd  |      | ddd eee |\n+------+------+------+------+---------+\n','https://dev.mysql.com/doc/refman/5.7/en/xml-functions.html'),(234,'UPDATEXML',13,'Syntax:\nUpdateXML(xml_target, xpath_expr, new_xml)\n\nThis function replaces a single portion of a given fragment of XML\nmarkup xml_target with a new XML fragment new_xml, and then returns the\nchanged XML. The portion of xml_target that is replaced matches an\nXPath expression xpath_expr supplied by the user.\n\nIf no expression matching xpath_expr is found, or if multiple matches\nare found, the function returns the original xml_target XML fragment.\nAll three arguments should be strings.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/xml-functions.html\n\n','mysql> SELECT\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'/a\', \'<e>fff</e>\') AS val1,\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'/b\', \'<e>fff</e>\') AS val2,\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'//b\', \'<e>fff</e>\') AS val3,\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'/a/d\', \'<e>fff</e>\') AS val4,\n    ->   UpdateXML(\'<a><d></d><b>ccc</b><d></d></a>\', \'/a/d\', \'<e>fff</e>\') AS val5\n    -> \\G\n\n*************************** 1. row ***************************\nval1: <e>fff</e>\nval2: <a><b>ccc</b><d></d></a>\nval3: <a><e>fff</e><d></d></a>\nval4: <a><b>ccc</b><e>fff</e></a>\nval5: <a><d></d><b>ccc</b><d></d></a>\n','https://dev.mysql.com/doc/refman/5.7/en/xml-functions.html'),(235,'|',16,'Syntax:\n|\n\nBitwise OR.\n\nThe result is an unsigned 64-bit integer.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html\n\n','mysql> SELECT 29 | 15;\n        -> 31\n','https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html'),(236,'&',16,'Syntax:\n&\n\nBitwise AND.\n\nThe result is an unsigned 64-bit integer.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html\n\n','mysql> SELECT 29 & 15;\n        -> 13\n','https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html'),(237,'^',16,'Syntax:\n^\n\nBitwise XOR.\n\nThe result is an unsigned 64-bit integer.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html\n\n','mysql> SELECT 1 ^ 1;\n        -> 0\nmysql> SELECT 1 ^ 0;\n        -> 1\nmysql> SELECT 11 ^ 3;\n        -> 8\n','https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html'),(238,'<<',16,'Syntax:\n<<\n\nShifts a longlong (BIGINT) number to the left.\n\nThe result is an unsigned 64-bit integer. The value is truncated to 64\nbits. In particular, if the shift count is greater or equal to the\nwidth of an unsigned 64-bit number, the result is zero.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html\n\n','mysql> SELECT 1 << 2;\n        -> 4\n','https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html'),(239,'>>',16,'Syntax:\n>>\n\nShifts a longlong (BIGINT) number to the right.\n\nThe result is an unsigned 64-bit integer. The value is truncated to 64\nbits. In particular, if the shift count is greater or equal to the\nwidth of an unsigned 64-bit number, the result is zero.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html\n\n','mysql> SELECT 4 >> 2;\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html'),(240,'~',16,'Syntax:\n~\n\nInvert all bits.\n\nThe result is an unsigned 64-bit integer.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html\n\n','mysql> SELECT 5 & ~1;\n        -> 4\n','https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html'),(241,'BIT_COUNT',16,'Syntax:\nBIT_COUNT(N)\n\nReturns the number of bits that are set in the argument N as an\nunsigned 64-bit integer, or NULL if the argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html\n\n','mysql> SELECT BIT_COUNT(29), BIT_COUNT(b\'101010\');\n        -> 4, 3\n','https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html'),(242,'AES_DECRYPT',17,'Syntax:\nAES_DECRYPT(crypt_str,key_str[,init_vector])\n\nThis function decrypts data using the official AES (Advanced Encryption\nStandard) algorithm. For more information, see the description of\nAES_ENCRYPT().\n\nThe optional initialization vector argument, init_vector, is available\nas of MySQL 5.7.4. As of that version, statements that use\nAES_DECRYPT() are unsafe for statement-based replication and cannot be\nstored in the query cache.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(243,'AES_ENCRYPT',17,'Syntax:\nAES_ENCRYPT(str,key_str[,init_vector])\n\nAES_ENCRYPT() and AES_DECRYPT() implement encryption and decryption of\ndata using the official AES (Advanced Encryption Standard) algorithm,\npreviously known as \"Rijndael.\" The AES standard permits various key\nlengths. By default these functions implement AES with a 128-bit key\nlength. As of MySQL 5.7.4, key lengths of 196 or 256 bits can be used,\nas described later. The key length is a trade off between performance\nand security.\n\nAES_ENCRYPT() encrypts the string str using the key string key_str and\nreturns a binary string containing the encrypted output. AES_DECRYPT()\ndecrypts the encrypted string crypt_str using the key string key_str\nand returns the original plaintext string. If either function argument\nis NULL, the function returns NULL.\n\nThe str and crypt_str arguments can be any length, and padding is\nautomatically added to str so it is a multiple of a block as required\nby block-based algorithms such as AES. This padding is automatically\nremoved by the AES_DECRYPT() function. The length of crypt_str can be\ncalculated using this formula:\n\n16 * (trunc(string_length / 16) + 1)\n\nFor a key length of 128 bits, the most secure way to pass a key to the\nkey_str argument is to create a truly random 128-bit value and pass it\nas a binary value. For example:\n\nINSERT INTO t\nVALUES (1,AES_ENCRYPT(\'text\',UNHEX(\'F3229A0B371ED2D9441B830D21A390C3\')));\n\nA passphrase can be used to generate an AES key by hashing the\npassphrase. For example:\n\nINSERT INTO t\nVALUES (1,AES_ENCRYPT(\'text\', UNHEX(SHA2(\'My secret passphrase\',512))));\n\nDo not pass a password or passphrase directly to crypt_str, hash it\nfirst. Previous versions of this documentation suggested the former\napproach, but it is no longer recommended as the examples shown here\nare more secure.\n\nIf AES_DECRYPT() detects invalid data or incorrect padding, it returns\nNULL. However, it is possible for AES_DECRYPT() to return a non-NULL\nvalue (possibly garbage) if the input data or the key is invalid.\n\nAs of MySQL 5.7.4, AES_ENCRYPT() and AES_DECRYPT() permit control of\nthe block encryption mode and take an optional init_vector\ninitialization vector argument:\n\no The block_encryption_mode system variable controls the mode for\n  block-based encryption algorithms. Its default value is aes-128-ecb,\n  which signifies encryption using a key length of 128 bits and ECB\n  mode. For a description of the permitted values of this variable, see\n  https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\no The optional init_vector argument provides an initialization vector\n  for block encryption modes that require it.\n\nFor modes that require the optional init_vector argument, it must be 16\nbytes or longer (bytes in excess of 16 are ignored). An error occurs if\ninit_vector is missing.\n\nFor modes that do not require init_vector, it is ignored and a warning\nis generated if it is specified.\n\nA random string of bytes to use for the initialization vector can be\nproduced by calling RANDOM_BYTES(16). For encryption modes that require\nan initialization vector, the same vector must be used for encryption\nand decryption.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SET block_encryption_mode = \'aes-256-cbc\';\nmysql> SET @key_str = SHA2(\'My secret passphrase\',512);\nmysql> SET @init_vector = RANDOM_BYTES(16);\nmysql> SET @crypt_str = AES_ENCRYPT(\'text\',@key_str,@init_vector);\nmysql> SELECT AES_DECRYPT(@crypt_str,@key_str,@init_vector);\n+-----------------------------------------------+\n| AES_DECRYPT(@crypt_str,@key_str,@init_vector) |\n+-----------------------------------------------+\n| text                                          |\n+-----------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(244,'COMPRESS',17,'Syntax:\nCOMPRESS(string_to_compress)\n\nCompresses a string and returns the result as a binary string. This\nfunction requires MySQL to have been compiled with a compression\nlibrary such as zlib. Otherwise, the return value is always NULL. The\ncompressed string can be uncompressed with UNCOMPRESS().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT LENGTH(COMPRESS(REPEAT(\'a\',1000)));\n        -> 21\nmysql> SELECT LENGTH(COMPRESS(\'\'));\n        -> 0\nmysql> SELECT LENGTH(COMPRESS(\'a\'));\n        -> 13\nmysql> SELECT LENGTH(COMPRESS(REPEAT(\'a\',16)));\n        -> 15\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(245,'DECODE',17,'Syntax:\nDECODE(crypt_str,pass_str)\n\nDECODE() decrypts the encrypted string crypt_str using pass_str as the\npassword. crypt_str should be a string returned from ENCODE().\n\n*Note*:\n\nThe ENCODE() and DECODE() functions are deprecated in MySQL 5.7, will\nbe removed in a future MySQL release, and should no longer be used.\nConsider using AES_ENCRYPT() and AES_DECRYPT() instead.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(246,'DES_DECRYPT',17,'Syntax:\nDES_DECRYPT(crypt_str[,key_str])\n\nDecrypts a string encrypted with DES_ENCRYPT(). If an error occurs,\nthis function returns NULL.\n\nThis function works only if MySQL has been configured with SSL support.\nSee https://dev.mysql.com/doc/refman/5.7/en/encrypted-connections.html.\n\nIf no key_str argument is given, DES_DECRYPT() examines the first byte\nof the encrypted string to determine the DES key number that was used\nto encrypt the original string, and then reads the key from the DES key\nfile to decrypt the message. For this to work, the user must have the\nSUPER privilege. The key file can be specified with the --des-key-file\nserver option.\n\nIf you pass this function a key_str argument, that string is used as\nthe key for decrypting the message.\n\nIf the crypt_str argument does not appear to be an encrypted string,\nMySQL returns the given crypt_str.\n\n*Note*:\n\nThe DES_ENCRYPT() and DES_DECRYPT() functions are deprecated as of\nMySQL 5.7.6, will be removed in a future MySQL release, and should no\nlonger be used. Consider using AES_ENCRYPT() and AES_DECRYPT() instead.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(247,'DES_ENCRYPT',17,'Syntax:\nDES_ENCRYPT(str[,{key_num|key_str}])\n\nEncrypts the string with the given key using the Triple-DES algorithm.\n\nThis function works only if MySQL has been configured with SSL support.\nSee https://dev.mysql.com/doc/refman/5.7/en/encrypted-connections.html.\n\nThe encryption key to use is chosen based on the second argument to\nDES_ENCRYPT(), if one was given. With no argument, the first key from\nthe DES key file is used. With a key_num argument, the given key number\n(0 to 9) from the DES key file is used. With a key_str argument, the\ngiven key string is used to encrypt str.\n\nThe key file can be specified with the --des-key-file server option.\n\nThe return string is a binary string where the first character is\nCHAR(128 | key_num). If an error occurs, DES_ENCRYPT() returns NULL.\n\nThe 128 is added to make it easier to recognize an encrypted key. If\nyou use a string key, key_num is 127.\n\nThe string length for the result is given by this formula:\n\nnew_len = orig_len + (8 - (orig_len % 8)) + 1\n\nEach line in the DES key file has the following format:\n\nkey_num des_key_str\n\nEach key_num value must be a number in the range from 0 to 9. Lines in\nthe file may be in any order. des_key_str is the string that is used to\nencrypt the message. There should be at least one space between the\nnumber and the key. The first key is the default key that is used if\nyou do not specify any key argument to DES_ENCRYPT().\n\nYou can tell MySQL to read new key values from the key file with the\nFLUSH DES_KEY_FILE statement. This requires the RELOAD privilege.\n\nOne benefit of having a set of default keys is that it gives\napplications a way to check for the existence of encrypted column\nvalues, without giving the end user the right to decrypt those values.\n\n*Note*:\n\nThe DES_ENCRYPT() and DES_DECRYPT() functions are deprecated as of\nMySQL 5.7.6, will be removed in a future MySQL release, and should no\nlonger be used. Consider using AES_ENCRYPT() and AES_DECRYPT() instead.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT customer_address FROM customer_table \n     > WHERE crypted_credit_card = DES_ENCRYPT(\'credit_card_number\');\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(248,'ENCODE',17,'Syntax:\nENCODE(str,pass_str)\n\nENCODE() encrypts str using pass_str as the password. The result is a\nbinary string of the same length as str. To decrypt the result, use\nDECODE().\n\n*Note*:\n\nThe ENCODE() and DECODE() functions are deprecated in MySQL 5.7, will\nbe removed in a future MySQL release, and should no longer be used.\n\nIf you still need to use ENCODE(), a salt value must be used with it to\nreduce risk. For example:\n\nENCODE(\'cleartext\', CONCAT(\'my_random_salt\',\'my_secret_password\'))\n\nA new random salt value must be used whenever a password is updated.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(249,'ENCRYPT',17,'Syntax:\nENCRYPT(str[,salt])\n\nEncrypts str using the Unix crypt() system call and returns a binary\nstring. The salt argument must be a string with at least two characters\nor the result will be NULL. If no salt argument is given, a random\nvalue is used.\n\n*Note*:\n\nThe ENCRYPT() function is deprecated as of MySQL 5.7.6, will be removed\nin a future MySQL release, and should no longer be used. For one-way\nhashing, consider using SHA2() instead.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT ENCRYPT(\'hello\');\n        -> \'VxuFAJXVARROc\'\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(250,'MD5',17,'Syntax:\nMD5(str)\n\nCalculates an MD5 128-bit checksum for the string. The value is\nreturned as a string of 32 hexadecimal digits, or NULL if the argument\nwas NULL. The return value can, for example, be used as a hash key. See\nthe notes at the beginning of this section about storing hash values\nefficiently.\n\nThe return value is a string in the connection character set.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT MD5(\'testing\');\n        -> \'ae2b1fca515949e5d54fb22b8ed95575\'\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(251,'OLD_PASSWORD',17,'Syntax:\nOLD_PASSWORD(str)\n\nOLD_PASSWORD() was added when the implementation of PASSWORD() was\nchanged in MySQL 4.1 to improve security. OLD_PASSWORD() returned the\nvalue of the pre-4.1 implementation of PASSWORD() as a string, and was\nintended to permit you to reset passwords for any pre-4.1 clients that\nneed to connect to your MySQL server without locking them out. See\nhttps://dev.mysql.com/doc/refman/5.7/en/password-hashing.html.\n\nPasswords that use the pre-4.1 hashing method are less secure than\npasswords that use the native password hashing method. Support for\npre-4.1 passwords was removed in MySQL 5.7.5, as was OLD_PASSWORD().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(252,'PASSWORD',17,'Syntax:\nPASSWORD(str)\n\n*Note*:\n\nThis function is deprecated as of MySQL 5.7.6 and will be removed in a\nfuture MySQL release.\n\nReturns a hashed password string calculated from the cleartext password\nstr. The return value is a string in the connection character set, or\nNULL if the argument is NULL. This function is the SQL interface to the\nalgorithm used by the server to encrypt MySQL passwords for storage in\nthe mysql.user grant table.\n\nThe old_passwords system variable controls the password hashing method\nused by the PASSWORD() function. It also influences password hashing\nperformed by CREATE USER and GRANT statements that specify a password\nusing an IDENTIFIED BY clause.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(253,'RANDOM_BYTES',17,'Syntax:\nRANDOM_BYTES(len)\n\nThis function returns a binary string of len random bytes generated\nusing the random number generator of the SSL library. Permitted values\nof len range from 1 to 1024. For values outside that range,\nRANDOM_BYTES() generates a warning and returns NULL.\n\nRANDOM_BYTES() can be used to provide the initialization vector for the\nAES_DECRYPT() and AES_ENCRYPT() functions. For use in that context, len\nmust be at least 16. Larger values are permitted, but bytes in excess\nof 16 are ignored.\n\nRANDOM_BYTES() generates a random value, which makes its result\nnondeterministic. Consequently, statements that use this function are\nunsafe for statement-based replication and cannot be stored in the\nquery cache.\n\nThis function is available as of MySQL 5.7.4.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(254,'SHA1',17,'Syntax:\nSHA1(str), SHA(str)\n\nCalculates an SHA-1 160-bit checksum for the string, as described in\nRFC 3174 (Secure Hash Algorithm). The value is returned as a string of\n40 hexadecimal digits, or NULL if the argument was NULL. One of the\npossible uses for this function is as a hash key. See the notes at the\nbeginning of this section about storing hash values efficiently. SHA()\nis synonymous with SHA1().\n\nThe return value is a string in the connection character set.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT SHA1(\'abc\');\n        -> \'a9993e364706816aba3e25717850c26c9cd0d89d\'\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(255,'SHA2',17,'Syntax:\nSHA2(str, hash_length)\n\nCalculates the SHA-2 family of hash functions (SHA-224, SHA-256,\nSHA-384, and SHA-512). The first argument is the plaintext string to be\nhashed. The second argument indicates the desired bit length of the\nresult, which must have a value of 224, 256, 384, 512, or 0 (which is\nequivalent to 256). If either argument is NULL or the hash length is\nnot one of the permitted values, the return value is NULL. Otherwise,\nthe function result is a hash value containing the desired number of\nbits. See the notes at the beginning of this section about storing hash\nvalues efficiently.\n\nThe return value is a string in the connection character set.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT SHA2(\'abc\', 224);\n        -> \'23097d223405d8228642a477bda255b32aadbce4bda0b3f7e36c9da7\'\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(256,'UNCOMPRESS',17,'Syntax:\nUNCOMPRESS(string_to_uncompress)\n\nUncompresses a string compressed by the COMPRESS() function. If the\nargument is not a compressed value, the result is NULL. This function\nrequires MySQL to have been compiled with a compression library such as\nzlib. Otherwise, the return value is always NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT UNCOMPRESS(COMPRESS(\'any string\'));\n        -> \'any string\'\nmysql> SELECT UNCOMPRESS(\'any string\');\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(257,'UNCOMPRESSED_LENGTH',17,'Syntax:\nUNCOMPRESSED_LENGTH(compressed_string)\n\nReturns the length that the compressed string had before being\ncompressed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT UNCOMPRESSED_LENGTH(COMPRESS(REPEAT(\'a\',30)));\n        -> 30\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(258,'VALIDATE_PASSWORD_STRENGTH',17,'Syntax:\nVALIDATE_PASSWORD_STRENGTH(str)\n\nGiven an argument representing a plaintext password, this function\nreturns an integer to indicate how strong the password is. The return\nvalue ranges from 0 (weak) to 100 (strong).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(259,'GET_LOCK',18,'Syntax:\nGET_LOCK(str,timeout)\n\nTries to obtain a lock with a name given by the string str, using a\ntimeout of timeout seconds. A negative timeout value means infinite\ntimeout. The lock is exclusive. While held by one session, other\nsessions cannot obtain a lock of the same name.\n\nReturns 1 if the lock was obtained successfully, 0 if the attempt timed\nout (for example, because another client has previously locked the\nname), or NULL if an error occurred (such as running out of memory or\nthe thread was killed with mysqladmin kill).\n\nA lock obtained with GET_LOCK() is released explicitly by executing\nRELEASE_LOCK() or implicitly when your session terminates (either\nnormally or abnormally). Locks obtained with GET_LOCK() are not\nreleased when transactions commit or roll back.\n\nIn MySQL 5.7, GET_LOCK() was reimplemented using the metadata locking\n(MDL) subsystem and its capabilities were extended. Multiple\nsimultaneous locks can be acquired and GET_LOCK() does not release any\nexisting locks.\n\nIt is even possible for a given session to acquire multiple locks for\nthe same name. Other sessions cannot acquire a lock with that name\nuntil the acquiring session releases all its locks for the name.\n\nAs a result of the MDL reimplementation, uniquely named locks acquired\nwith GET_LOCK() appear in the Performance Schema metadata_locks table.\nThe OBJECT_TYPE column says USER LEVEL LOCK and the OBJECT_NAME column\nindicates the lock name. In the case that multiple locks are acquired\nfor the same name, only the first lock for the name registers a row in\nthe metadata_locks table. Subsequent locks for the name increment a\ncounter in the lock but do not acquire additional metadata locks. The\nmetadata_locks row for the lock is deleted when the last lock instance\non the name is released.\n\nThe capability of acquiring multiple locks means there is the\npossibility of deadlock among clients. When this happens, the server\nchooses a caller and terminates its lock-acquisition request with an\nER_USER_LOCK_DEADLOCK error. This error does not cause transactions to\nroll back.\n\nBefore MySQL 5.7, only a single simultaneous lock can be acquired and\nGET_LOCK() releases any existing lock. The difference in lock\nacquisition behavior as of MySQL 5.7 can be seen by the following\nexample. Suppose that you execute these statements:\n\nSELECT GET_LOCK(\'lock1\',10);\nSELECT GET_LOCK(\'lock2\',10);\nSELECT RELEASE_LOCK(\'lock2\');\nSELECT RELEASE_LOCK(\'lock1\');\n\nIn MySQL 5.7 or later, the second GET_LOCK() acquires a second lock and\nboth RELEASE_LOCK() calls return 1 (success). Before MySQL 5.7, the\nsecond GET_LOCK() releases the first lock (\'lock1\') and the second\nRELEASE_LOCK() returns NULL (failure) because there is no \'lock1\' to\nrelease.\n\nMySQL 5.7 and later enforces a maximum length on lock names of 64\ncharacters. Previously, no limit was enforced.\n\nGET_LOCK() can be used to implement application locks or to simulate\nrecord locks. Names are locked on a server-wide basis. If a name has\nbeen locked within one session, GET_LOCK() blocks any request by\nanother session for a lock with the same name. This enables clients\nthat agree on a given lock name to use the name to perform cooperative\nadvisory locking. But be aware that it also enables a client that is\nnot among the set of cooperating clients to lock a name, either\ninadvertently or deliberately, and thus prevent any of the cooperating\nclients from locking that name. One way to reduce the likelihood of\nthis is to use lock names that are database-specific or\napplication-specific. For example, use lock names of the form\ndb_name.str or app_name.str.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html'),(260,'IS_FREE_LOCK',18,'Syntax:\nIS_FREE_LOCK(str)\n\nChecks whether the lock named str is free to use (that is, not locked).\nReturns 1 if the lock is free (no one is using the lock), 0 if the lock\nis in use, and NULL if an error occurs (such as an incorrect argument).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html'),(261,'IS_USED_LOCK',18,'Syntax:\nIS_USED_LOCK(str)\n\nChecks whether the lock named str is in use (that is, locked). If so,\nit returns the connection identifier of the client session that holds\nthe lock. Otherwise, it returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html'),(262,'RELEASE_ALL_LOCKS',18,'Syntax:\nRELEASE_ALL_LOCKS()\n\nReleases all named locks held by the current session and returns the\nnumber of locks released (0 if there were none)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html'),(263,'RELEASE_LOCK',18,'Syntax:\nRELEASE_LOCK(str)\n\nReleases the lock named by the string str that was obtained with\nGET_LOCK(). Returns 1 if the lock was released, 0 if the lock was not\nestablished by this thread (in which case the lock is not released),\nand NULL if the named lock did not exist. The lock does not exist if it\nwas never obtained by a call to GET_LOCK() or if it has previously been\nreleased.\n\nThe DO statement is convenient to use with RELEASE_LOCK(). See [HELP\nDO].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html'),(264,'BENCHMARK',19,'Syntax:\nBENCHMARK(count,expr)\n\nThe BENCHMARK() function executes the expression expr repeatedly count\ntimes. It may be used to time how quickly MySQL processes the\nexpression. The result value is always 0. The intended use is from\nwithin the mysql client, which reports query execution times:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT BENCHMARK(1000000,AES_ENCRYPT(\'hello\',\'goodbye\'));\n+---------------------------------------------------+\n| BENCHMARK(1000000,AES_ENCRYPT(\'hello\',\'goodbye\')) |\n+---------------------------------------------------+\n|                                                 0 |\n+---------------------------------------------------+\n1 row in set (4.74 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(265,'CHARSET',19,'Syntax:\nCHARSET(str)\n\nReturns the character set of the string argument.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT CHARSET(\'abc\');\n        -> \'latin1\'\nmysql> SELECT CHARSET(CONVERT(\'abc\' USING utf8));\n        -> \'utf8\'\nmysql> SELECT CHARSET(USER());\n        -> \'utf8\'\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(266,'COERCIBILITY',19,'Syntax:\nCOERCIBILITY(str)\n\nReturns the collation coercibility value of the string argument.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT COERCIBILITY(\'abc\' COLLATE latin1_swedish_ci);\n        -> 0\nmysql> SELECT COERCIBILITY(USER());\n        -> 3\nmysql> SELECT COERCIBILITY(\'abc\');\n        -> 4\nmysql> SELECT COERCIBILITY(1000);\n        -> 5\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(267,'COLLATION',19,'Syntax:\nCOLLATION(str)\n\nReturns the collation of the string argument.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT COLLATION(\'abc\');\n        -> \'latin1_swedish_ci\'\nmysql> SELECT COLLATION(_utf8\'abc\');\n        -> \'utf8_general_ci\'\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(268,'CONNECTION_ID',19,'Syntax:\nCONNECTION_ID()\n\nReturns the connection ID (thread ID) for the connection. Every\nconnection has an ID that is unique among the set of currently\nconnected clients.\n\nThe value returned by CONNECTION_ID() is the same type of value as\ndisplayed in the ID column of the INFORMATION_SCHEMA.PROCESSLIST table,\nthe Id column of SHOW PROCESSLIST output, and the PROCESSLIST_ID column\nof the Performance Schema threads table.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT CONNECTION_ID();\n        -> 23786\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(269,'CURRENT_USER',19,'Syntax:\nCURRENT_USER, CURRENT_USER()\n\nReturns the user name and host name combination for the MySQL account\nthat the server used to authenticate the current client. This account\ndetermines your access privileges. The return value is a string in the\nutf8 character set.\n\nThe value of CURRENT_USER() can differ from the value of USER().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT USER();\n        -> \'davida@localhost\'\nmysql> SELECT * FROM mysql.user;\nERROR 1044: Access denied for user \'\'@\'localhost\' to\ndatabase \'mysql\'\nmysql> SELECT CURRENT_USER();\n        -> \'@localhost\'\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(270,'DATABASE',19,'Syntax:\nDATABASE()\n\nReturns the default (current) database name as a string in the utf8\ncharacter set. If there is no default database, DATABASE() returns\nNULL. Within a stored routine, the default database is the database\nthat the routine is associated with, which is not necessarily the same\nas the database that is the default in the calling context.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT DATABASE();\n        -> \'test\'\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(271,'FOUND_ROWS',19,'Syntax:\nFOUND_ROWS()\n\nA SELECT statement may include a LIMIT clause to restrict the number of\nrows the server returns to the client. In some cases, it is desirable\nto know how many rows the statement would have returned without the\nLIMIT, but without running the statement again. To obtain this row\ncount, include an SQL_CALC_FOUND_ROWS option in the SELECT statement,\nand then invoke FOUND_ROWS() afterward:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT SQL_CALC_FOUND_ROWS * FROM tbl_name\n    -> WHERE id > 100 LIMIT 10;\nmysql> SELECT FOUND_ROWS();\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(272,'LAST_INSERT_ID',19,'Syntax:\nLAST_INSERT_ID(), LAST_INSERT_ID(expr)\n\nWith no argument, LAST_INSERT_ID() returns a BIGINT UNSIGNED (64-bit)\nvalue representing the first automatically generated value successfully\ninserted for an AUTO_INCREMENT column as a result of the most recently\nexecuted INSERT statement. The value of LAST_INSERT_ID() remains\nunchanged if no rows are successfully inserted.\n\nWith an argument, LAST_INSERT_ID() returns an unsigned integer.\n\nFor example, after inserting a row that generates an AUTO_INCREMENT\nvalue, you can get the value like this:\n\nmysql> SELECT LAST_INSERT_ID();\n        -> 195\n\nThe currently executing statement does not affect the value of\nLAST_INSERT_ID(). Suppose that you generate an AUTO_INCREMENT value\nwith one statement, and then refer to LAST_INSERT_ID() in a\nmultiple-row INSERT statement that inserts rows into a table with its\nown AUTO_INCREMENT column. The value of LAST_INSERT_ID() will remain\nstable in the second statement; its value for the second and later rows\nis not affected by the earlier row insertions. (However, if you mix\nreferences to LAST_INSERT_ID() and LAST_INSERT_ID(expr), the effect is\nundefined.)\n\nIf the previous statement returned an error, the value of\nLAST_INSERT_ID() is undefined. For transactional tables, if the\nstatement is rolled back due to an error, the value of LAST_INSERT_ID()\nis left undefined. For manual ROLLBACK, the value of LAST_INSERT_ID()\nis not restored to that before the transaction; it remains as it was at\nthe point of the ROLLBACK.\n\nPrior to MySQL 5.7.3, this function was not replicated correctly if\nreplication filtering rules were in use. (Bug #17234370, Bug #69861)\n\nWithin the body of a stored routine (procedure or function) or a\ntrigger, the value of LAST_INSERT_ID() changes the same way as for\nstatements executed outside the body of these kinds of objects. The\neffect of a stored routine or trigger upon the value of\nLAST_INSERT_ID() that is seen by following statements depends on the\nkind of routine:\n\no If a stored procedure executes statements that change the value of\n  LAST_INSERT_ID(), the changed value is seen by statements that follow\n  the procedure call.\n\no For stored functions and triggers that change the value, the value is\n  restored when the function or trigger ends, so following statements\n  will not see a changed value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(273,'ROW_COUNT',19,'Syntax:\nROW_COUNT()\n\nROW_COUNT() returns a value as follows:\n\no DDL statements: 0. This applies to statements such as CREATE TABLE or\n  DROP TABLE.\n\no DML statements other than SELECT: The number of affected rows. This\n  applies to statements such as UPDATE, INSERT, or DELETE (as before),\n  but now also to statements such as ALTER TABLE and LOAD DATA.\n\no SELECT: -1 if the statement returns a result set, or the number of\n  rows \"affected\" if it does not. For example, for SELECT * FROM t1,\n  ROW_COUNT() returns -1. For SELECT * FROM t1 INTO OUTFILE\n  \'file_name\', ROW_COUNT() returns the number of rows written to the\n  file.\n\no SIGNAL statements: 0.\n\nFor UPDATE statements, the affected-rows value by default is the number\nof rows actually changed. If you specify the CLIENT_FOUND_ROWS flag to\nmysql_real_connect() when connecting to mysqld, the affected-rows value\nis the number of rows \"found\"; that is, matched by the WHERE clause.\n\nFor REPLACE statements, the affected-rows value is 2 if the new row\nreplaced an old row, because in this case, one row was inserted after\nthe duplicate was deleted.\n\nFor INSERT ... ON DUPLICATE KEY UPDATE statements, the affected-rows\nvalue per row is 1 if the row is inserted as a new row, 2 if an\nexisting row is updated, and 0 if an existing row is set to its current\nvalues. If you specify the CLIENT_FOUND_ROWS flag, the affected-rows\nvalue is 1 (not 0) if an existing row is set to its current values.\n\nThe ROW_COUNT() value is similar to the value from the\nmysql_affected_rows() C API function and the row count that the mysql\nclient displays following statement execution.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> INSERT INTO t VALUES(1),(2),(3);\nQuery OK, 3 rows affected (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 0\n\nmysql> SELECT ROW_COUNT();\n+-------------+\n| ROW_COUNT() |\n+-------------+\n|           3 |\n+-------------+\n1 row in set (0.00 sec)\n\nmysql> DELETE FROM t WHERE i IN(1,2);\nQuery OK, 2 rows affected (0.00 sec)\n\nmysql> SELECT ROW_COUNT();\n+-------------+\n| ROW_COUNT() |\n+-------------+\n|           2 |\n+-------------+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(274,'SCHEMA',19,'Syntax:\nSCHEMA()\n\nThis function is a synonym for DATABASE().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(275,'SESSION_USER',19,'Syntax:\nSESSION_USER()\n\nSESSION_USER() is a synonym for USER().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(276,'SYSTEM_USER',19,'Syntax:\nSYSTEM_USER()\n\nSYSTEM_USER() is a synonym for USER().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(277,'USER',19,'Syntax:\nUSER()\n\nReturns the current MySQL user name and host name as a string in the\nutf8 character set.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT USER();\n        -> \'davida@localhost\'\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(278,'VERSION',19,'Syntax:\nVERSION()\n\nReturns a string that indicates the MySQL server version. The string\nuses the utf8 character set. The value might have a suffix in addition\nto the version number. See the description of the version system\nvariable in\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT VERSION();\n        -> \'5.7.28-standard\'\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(279,'GEOMCOLLFROMTEXT',21,'GeomCollFromText(wkt[, srid]), GeometryCollectionFromText(wkt[, srid])\n\nST_GeomCollFromText(), ST_GeometryCollectionFromText(),\nST_GeomCollFromTxt(), GeomCollFromText(), and\nGeometryCollectionFromText() are synonyms. For more information, see\nthe description of ST_GeomCollFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(280,'GEOMFROMTEXT',21,'GeomFromText(wkt[, srid]), GeometryFromText(wkt[, srid])\n\nST_GeomFromText(), ST_GeometryFromText(), GeomFromText(), and\nGeometryFromText() are synonyms. For more information, see the\ndescription of ST_GeomFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(281,'LINEFROMTEXT',21,'LineFromText(wkt[, srid]), LineStringFromText(wkt[, srid])\n\nST_LineFromText(), ST_LineStringFromText(), LineFromText(), and\nLineStringFromText() are synonyms. For more information, see the\ndescription of ST_LineFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(282,'MLINEFROMTEXT',21,'MLineFromText(wkt[, srid]), MultiLineStringFromText(wkt[, srid])\n\nST_MLineFromText(), ST_MultiLineStringFromText(), MLineFromText(), and\nMultiLineStringFromText() are synonyms. For more information, see the\ndescription of ST_MLineFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(283,'MPOINTFROMTEXT',21,'MPointFromText(wkt[, srid]), MultiPointFromText(wkt[, srid])\n\nST_MPointFromText(), ST_MultiPointFromText(), MPointFromText(), and\nMultiPointFromText() are synonyms. For more information, see the\ndescription of ST_MPointFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(284,'MPOLYFROMTEXT',21,'MPolyFromText(wkt[, srid]), MultiPolygonFromText(wkt[, srid])\n\nST_MPolyFromText(), ST_MultiPolygonFromText(), MPolyFromText(), and\nMultiPolygonFromText() are synonyms. For more information, see the\ndescription of ST_MPolyFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(285,'POINTFROMTEXT',21,'PointFromText(wkt[, srid])\n\nST_PointFromText() and PointFromText() are synonyms. For more\ninformation, see the description of ST_PointFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(286,'POLYFROMTEXT',21,'PolyFromText(wkt[, srid]), PolygonFromText(wkt[, srid])\n\nST_PolyFromText(), ST_PolygonFromText(), PolyFromText(), and\nPolygonFromText() are synonyms. For more information, see the\ndescription of ST_PolyFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(287,'ST_GEOMCOLLFROMTEXT',21,'ST_GeomCollFromText(wkt[, srid]), ST_GeometryCollectionFromText(wkt[,\nsrid]), ST_GeomCollFromTxt(wkt[, srid])\n\nConstructs a GeometryCollection value using its WKT representation and\nSRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','mysql> SET @g = \"MULTILINESTRING((10 10, 11 11), (9 9, 10 10))\";\nmysql> SELECT ST_AsText(ST_GeomCollFromText(@g));\n+--------------------------------------------+\n| ST_AsText(ST_GeomCollFromText(@g))         |\n+--------------------------------------------+\n| MULTILINESTRING((10 10,11 11),(9 9,10 10)) |\n+--------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(288,'ST_GEOMFROMTEXT',21,'ST_GeomFromText(wkt[, srid]), ST_GeometryFromText(wkt[, srid])\n\nConstructs a geometry value of any type using its WKT representation\nand SRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(289,'ST_LINEFROMTEXT',21,'ST_LineFromText(wkt[, srid]), ST_LineStringFromText(wkt[, srid])\n\nConstructs a LineString value using its WKT representation and SRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(290,'ST_MLINEFROMTEXT',21,'ST_MLineFromText(wkt[, srid]), ST_MultiLineStringFromText(wkt[, srid])\n\nConstructs a MultiLineString value using its WKT representation and\nSRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(291,'ST_MPOINTFROMTEXT',21,'ST_MPointFromText(wkt[, srid]), ST_MultiPointFromText(wkt[, srid])\n\nConstructs a MultiPoint value using its WKT representation and SRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nAs of MySQL 5.7.9, spatial functions such as ST_MPointFromText() and\nST_GeomFromText() that accept WKT-format representations of MultiPoint\nvalues permit individual points within values to be surrounded by\nparentheses. For example, both of the following function calls are\nvalid, whereas before MySQL 5.7.9 the second one produces an error:\n\nST_MPointFromText(\'MULTIPOINT (1 1, 2 2, 3 3)\')\nST_MPointFromText(\'MULTIPOINT ((1 1), (2 2), (3 3))\')\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(292,'ST_MPOLYFROMTEXT',21,'ST_MPolyFromText(wkt[, srid]), ST_MultiPolygonFromText(wkt[, srid])\n\nConstructs a MultiPolygon value using its WKT representation and SRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(293,'ST_POINTFROMTEXT',21,'ST_PointFromText(wkt[, srid])\n\nConstructs a Point value using its WKT representation and SRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(294,'ST_POLYFROMTEXT',21,'ST_PolyFromText(wkt[, srid]), ST_PolygonFromText(wkt[, srid])\n\nConstructs a Polygon value using its WKT representation and SRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(295,'GEOMCOLLFROMWKB',22,'GeomCollFromWKB(wkb[, srid]), GeometryCollectionFromWKB(wkb[, srid])\n\nST_GeomCollFromWKB(), ST_GeometryCollectionFromWKB(),\nGeomCollFromWKB(), and GeometryCollectionFromWKB() are synonyms. For\nmore information, see the description of ST_GeomCollFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(296,'GEOMFROMWKB',22,'GeomFromWKB(wkb[, srid]), GeometryFromWKB(wkb[, srid])\n\nST_GeomFromWKB(), ST_GeometryFromWKB(), GeomFromWKB(), and\nGeometryFromWKB() are synonyms. For more information, see the\ndescription of ST_GeomFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(297,'LINEFROMWKB',22,'LineFromWKB(wkb[, srid]), LineStringFromWKB(wkb[, srid])\n\nST_LineFromWKB(), ST_LineStringFromWKB(), LineFromWKB(), and\nLineStringFromWKB() are synonyms. For more information, see the\ndescription of ST_LineFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(298,'MLINEFROMWKB',22,'MLineFromWKB(wkb[, srid]), MultiLineStringFromWKB(wkb[, srid])\n\nST_MLineFromWKB(), ST_MultiLineStringFromWKB(), MLineFromWKB(), and\nMultiLineStringFromWKB() are synonyms. For more information, see the\ndescription of ST_MLineFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(299,'MPOINTFROMWKB',22,'MPointFromWKB(wkb[, srid]), MultiPointFromWKB(wkb[, srid])\n\nST_MPointFromWKB(), ST_MultiPointFromWKB(), MPointFromWKB(), and\nMultiPointFromWKB() are synonyms. For more information, see the\ndescription of ST_MPointFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(300,'MPOLYFROMWKB',22,'MPolyFromWKB(wkb[, srid]), MultiPolygonFromWKB(wkb[, srid])\n\nST_MPolyFromWKB(), ST_MultiPolygonFromWKB(), MPolyFromWKB(), and\nMultiPolygonFromWKB() are synonyms. For more information, see the\ndescription of ST_MPolyFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(301,'POINTFROMWKB',22,'PointFromWKB(wkb[, srid])\n\nST_PointFromWKB() and PointFromWKB() are synonyms. For more\ninformation, see the description of ST_PointFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(302,'POLYFROMWKB',22,'PolyFromWKB(wkb[, srid]), PolygonFromWKB(wkb[, srid])\n\nST_PolyFromWKB(), ST_PolygonFromWKB(), PolyFromWKB(), and\nPolygonFromWKB() are synonyms. For more information, see the\ndescription of ST_PolyFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(303,'ST_GEOMCOLLFROMWKB',22,'ST_GeomCollFromWKB(wkb[, srid]), ST_GeometryCollectionFromWKB(wkb[,\nsrid])\n\nConstructs a GeometryCollection value using its WKB representation and\nSRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(304,'ST_GEOMFROMWKB',22,'ST_GeomFromWKB(wkb[, srid]), ST_GeometryFromWKB(wkb[, srid])\n\nConstructs a geometry value of any type using its WKB representation\nand SRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(305,'ST_LINEFROMWKB',22,'ST_LineFromWKB(wkb[, srid]), ST_LineStringFromWKB(wkb[, srid])\n\nConstructs a LineString value using its WKB representation and SRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(306,'ST_MLINEFROMWKB',22,'ST_MLineFromWKB(wkb[, srid]), ST_MultiLineStringFromWKB(wkb[, srid])\n\nConstructs a MultiLineString value using its WKB representation and\nSRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(307,'ST_MPOINTFROMWKB',22,'ST_MPointFromWKB(wkb[, srid]), ST_MultiPointFromWKB(wkb[, srid])\n\nConstructs a MultiPoint value using its WKB representation and SRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(308,'ST_MPOLYFROMWKB',22,'ST_MPolyFromWKB(wkb[, srid]), ST_MultiPolygonFromWKB(wkb[, srid])\n\nConstructs a MultiPolygon value using its WKB representation and SRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(309,'ST_POINTFROMWKB',22,'ST_PointFromWKB(wkb[, srid])\n\nConstructs a Point value using its WKB representation and SRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(310,'ST_POLYFROMWKB',22,'ST_PolyFromWKB(wkb[, srid]), ST_PolygonFromWKB(wkb[, srid])\n\nConstructs a Polygon value using its WKB representation and SRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(311,'GEOMETRYCOLLECTION',23,'GeometryCollection(g [, g] ...)\n\nConstructs a GeometryCollection value from the geometry arguments.\n\nGeometryCollection() returns all the proper geometries contained in the\narguments even if a nonsupported geometry is present.\n\nGeometryCollection() with no arguments is permitted as a way to create\nan empty geometry.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html'),(312,'LINESTRING',23,'LineString(pt [, pt] ...)\n\nConstructs a LineString value from a number of Point or WKB Point\narguments. If the number of arguments is less than two, the return\nvalue is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html'),(313,'MULTILINESTRING',23,'MultiLineString(ls [, ls] ...)\n\nConstructs a MultiLineString value using LineString or WKB LineString\narguments.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html'),(314,'MULTIPOINT',23,'MultiPoint(pt [, pt2] ...)\n\nConstructs a MultiPoint value using Point or WKB Point arguments.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html'),(315,'MULTIPOLYGON',23,'MultiPolygon(poly [, poly] ...)\n\nConstructs a MultiPolygon value from a set of Polygon or WKB Polygon\narguments.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html'),(316,'POINT',23,'Point(x, y)\n\nConstructs a Point using its coordinates.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html'),(317,'POLYGON',23,'Polygon(ls [, ls] ...)\n\nConstructs a Polygon value from a number of LineString or WKB\nLineString arguments. If any argument does not represent a LinearRing\n(that is, not a closed and simple LineString), the return value is\nNULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html'),(318,'ASBINARY',22,'AsBinary(g), AsWKB(g)\n\nST_AsBinary(), ST_AsWKB(), AsBinary(), and AsWKB() are synonyms. For\nmore information, see the description of ST_AsBinary().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html'),(319,'ASTEXT',22,'AsText(g), AsWKT(g)\n\nST_AsText(), ST_AsWKT(), AsText(), and AsWKT() are synonyms. For more\ninformation, see the description of ST_AsText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html'),(320,'ST_ASBINARY',22,'ST_AsBinary(g), ST_AsWKB(g)\n\nConverts a value in internal geometry format to its WKB representation\nand returns the binary result.\n\nIf the argument is NULL, the return value is NULL. If the argument is\nnot a syntactically well-formed geometry, an ER_GIS_INVALID_DATA error\noccurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html\n\n','SELECT ST_AsBinary(g) FROM geom;\n','https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html'),(321,'ST_ASTEXT',22,'ST_AsText(g), ST_AsWKT(g)\n\nConverts a value in internal geometry format to its WKT representation\nand returns the string result.\n\nIf the argument is NULL, the return value is NULL. If the argument is\nnot a syntactically well-formed geometry, an ER_GIS_INVALID_DATA error\noccurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html\n\n','mysql> SET @g = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_AsText(ST_GeomFromText(@g));\n+--------------------------------+\n| ST_AsText(ST_GeomFromText(@g)) |\n+--------------------------------+\n| LINESTRING(1 1,2 2,3 3)        |\n+--------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html'),(322,'DIMENSION',24,'Dimension(g)\n\nST_Dimension() and Dimension() are synonyms. For more information, see\nthe description of ST_Dimension().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(323,'ENVELOPE',24,'Envelope(g)\n\nST_Envelope() and Envelope() are synonyms. For more information, see\nthe description of ST_Envelope().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(324,'GEOMETRYTYPE',24,'GeometryType(g)\n\nST_GeometryType() and GeometryType() are synonyms. For more\ninformation, see the description of ST_GeometryType().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(325,'ISEMPTY',24,'IsEmpty(g)\n\nST_IsEmpty() and IsEmpty() are synonyms. For more information, see the\ndescription of ST_IsEmpty().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(326,'ISSIMPLE',24,'IsSimple(g)\n\nST_IsSimple() and IsSimple() are synonyms. For more information, see\nthe description of ST_IsSimple().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(327,'SRID',24,'SRID(g)\n\nST_SRID() and SRID() are synonyms. For more information, see the\ndescription of ST_SRID().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(328,'ST_DIMENSION',24,'ST_Dimension(g)\n\nReturns the inherent dimension of the geometry value g, or NULL if the\nargument is NULL. The dimension can be −1, 0, 1, or 2. The meaning of\nthese values is given in\nhttps://dev.mysql.com/doc/refman/5.7/en/gis-class-geometry.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','mysql> SELECT ST_Dimension(ST_GeomFromText(\'LineString(1 1,2 2)\'));\n+------------------------------------------------------+\n| ST_Dimension(ST_GeomFromText(\'LineString(1 1,2 2)\')) |\n+------------------------------------------------------+\n|                                                    1 |\n+------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(329,'ST_ENVELOPE',24,'ST_Envelope(g)\n\nReturns the minimum bounding rectangle (MBR) for the geometry value g,\nor NULL if the argument is NULL. The result is returned as a Polygon\nvalue that is defined by the corner points of the bounding box:\n\nPOLYGON((MINX MINY, MAXX MINY, MAXX MAXY, MINX MAXY, MINX MINY))\n\nmysql> SELECT ST_AsText(ST_Envelope(ST_GeomFromText(\'LineString(1 1,2 2)\')));\n+----------------------------------------------------------------+\n| ST_AsText(ST_Envelope(ST_GeomFromText(\'LineString(1 1,2 2)\'))) |\n+----------------------------------------------------------------+\n| POLYGON((1 1,2 1,2 2,1 2,1 1))                                 |\n+----------------------------------------------------------------+\n\nAs of MySQL 5.7.6, if the argument is a point or a vertical or\nhorizontal line segment, ST_Envelope() returns the point or the line\nsegment as its MBR rather than returning an invalid polygon:\n\nmysql> SELECT ST_AsText(ST_Envelope(ST_GeomFromText(\'LineString(1 1,1 2)\')));\n+----------------------------------------------------------------+\n| ST_AsText(ST_Envelope(ST_GeomFromText(\'LineString(1 1,1 2)\'))) |\n+----------------------------------------------------------------+\n| LINESTRING(1 1,1 2)                                            |\n+----------------------------------------------------------------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(330,'ST_GEOMETRYTYPE',24,'ST_GeometryType(g)\n\nReturns a binary string indicating the name of the geometry type of\nwhich the geometry instance g is a member, or NULL if the argument is\nNULL. The name corresponds to one of the instantiable Geometry\nsubclasses.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','mysql> SELECT ST_GeometryType(ST_GeomFromText(\'POINT(1 1)\'));\n+------------------------------------------------+\n| ST_GeometryType(ST_GeomFromText(\'POINT(1 1)\')) |\n+------------------------------------------------+\n| POINT                                          |\n+------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(331,'ST_ISEMPTY',24,'ST_IsEmpty(g)\n\nThis function is a placeholder that returns 0 for any valid geometry\nvalue, 1 for any invalid geometry value, or NULL if the argument is\nNULL.\n\nMySQL does not support GIS EMPTY values such as POINT EMPTY.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(332,'ST_ISSIMPLE',24,'ST_IsSimple(g)\n\nReturns 1 if the geometry value g has no anomalous geometric points,\nsuch as self-intersection or self-tangency. ST_IsSimple() returns 0 if\nthe argument is not simple, and NULL if the argument is NULL.\n\nThe descriptions of the instantiable geometric classes given under\nhttps://dev.mysql.com/doc/refman/5.7/en/opengis-geometry-model.html\nincludes the specific conditions that cause class instances to be\nclassified as not simple.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(333,'ST_SRID',24,'ST_SRID(g)\n\nReturns an integer indicating the spatial reference system ID\nassociated with the geometry value g, or NULL if the argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','mysql> SELECT ST_SRID(ST_GeomFromText(\'LineString(1 1,2 2)\',101));\n+-----------------------------------------------------+\n| ST_SRID(ST_GeomFromText(\'LineString(1 1,2 2)\',101)) |\n+-----------------------------------------------------+\n|                                                 101 |\n+-----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(334,'ST_X',25,'ST_X(p)\n\nReturns the X-coordinate value for the Point object p as a\ndouble-precision number.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html\n\n','mysql> SELECT ST_X(Point(56.7, 53.34));\n+--------------------------+\n| ST_X(Point(56.7, 53.34)) |\n+--------------------------+\n|                     56.7 |\n+--------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html'),(335,'ST_Y',25,'ST_Y(p)\n\nReturns the Y-coordinate value for the Point object p as a\ndouble-precision number.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html\n\n','mysql> SELECT ST_Y(Point(56.7, 53.34));\n+--------------------------+\n| ST_Y(Point(56.7, 53.34)) |\n+--------------------------+\n|                    53.34 |\n+--------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html'),(336,'X',25,'X(p)\n\nST_X() and X() are synonyms. For more information, see the description\nof ST_X().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html'),(337,'Y',25,'Y(p)\n\nST_Y() and Y() are synonyms. For more information, see the description\nof ST_Y().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html'),(338,'ENDPOINT',26,'EndPoint(ls)\n\nST_EndPoint() and EndPoint() are synonyms. For more information, see\nthe description of ST_EndPoint().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(339,'GLENGTH',26,'GLength(ls)\n\nGLength() is a nonstandard name. It corresponds to the OpenGIS\nST_Length() function. (There is an existing SQL function Length() that\ncalculates the length of string values.)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(340,'ISCLOSED',26,'IsClosed(ls)\n\nST_IsClosed() and IsClosed() are synonyms. For more information, see\nthe description of ST_IsClosed().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(341,'NUMPOINTS',26,'NumPoints(ls)\n\nST_NumPoints() and NumPoints() are synonyms. For more information, see\nthe description of ST_NumPoints().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(342,'POINTN',26,'PointN(ls, N)\n\nST_PointN() and PointN() are synonyms. For more information, see the\ndescription of ST_PointN().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(343,'ST_ENDPOINT',26,'ST_EndPoint(ls)\n\nReturns the Point that is the endpoint of the LineString value ls. If\nthe argument is NULL or an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_AsText(ST_EndPoint(ST_GeomFromText(@ls)));\n+----------------------------------------------+\n| ST_AsText(ST_EndPoint(ST_GeomFromText(@ls))) |\n+----------------------------------------------+\n| POINT(3 3)                                   |\n+----------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(344,'ST_ISCLOSED',26,'ST_IsClosed(ls)\n\nFor a LineString value ls, ST_IsClosed() returns 1 if ls is closed\n(that is, its ST_StartPoint() and ST_EndPoint() values are the same).\nIf the argument is NULL or an empty geometry, the return value is NULL.\n\nFor a MultiLineString value ls, ST_IsClosed() returns 1 if ls is closed\n(that is, the ST_StartPoint() and ST_EndPoint() values are the same for\neach LineString in ls).\n\nST_IsClosed() returns 0 if ls is not closed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls1 = \'LineString(1 1,2 2,3 3,2 2)\';\nmysql> SET @ls2 = \'LineString(1 1,2 2,3 3,1 1)\';\n\nmysql> SELECT ST_IsClosed(ST_GeomFromText(@ls1));\n+------------------------------------+\n| ST_IsClosed(ST_GeomFromText(@ls1)) |\n+------------------------------------+\n|                                  0 |\n+------------------------------------+\n\nmysql> SELECT ST_IsClosed(ST_GeomFromText(@ls2));\n+------------------------------------+\n| ST_IsClosed(ST_GeomFromText(@ls2)) |\n+------------------------------------+\n|                                  1 |\n+------------------------------------+\n\nmysql> SET @ls3 = \'MultiLineString((1 1,2 2,3 3),(4 4,5 5))\';\n\nmysql> SELECT ST_IsClosed(ST_GeomFromText(@ls3));\n+------------------------------------+\n| ST_IsClosed(ST_GeomFromText(@ls3)) |\n+------------------------------------+\n|                                  0 |\n+------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(345,'ST_LENGTH',26,'ST_Length(ls)\n\nReturns a double-precision number indicating the length of the\nLineString or MultiLineString value ls in its associated spatial\nreference system. The length of a MultiLineString value is equal to the\nsum of the lengths of its elements. If the argument is NULL or an empty\ngeometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_Length(ST_GeomFromText(@ls));\n+---------------------------------+\n| ST_Length(ST_GeomFromText(@ls)) |\n+---------------------------------+\n|              2.8284271247461903 |\n+---------------------------------+\n\nmysql> SET @mls = \'MultiLineString((1 1,2 2,3 3),(4 4,5 5))\';\nmysql> SELECT ST_Length(ST_GeomFromText(@mls));\n+----------------------------------+\n| ST_Length(ST_GeomFromText(@mls)) |\n+----------------------------------+\n|                4.242640687119286 |\n+----------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(346,'ST_NUMPOINTS',26,'ST_NumPoints(ls)\n\nReturns the number of Point objects in the LineString value ls. If the\nargument is NULL or an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_NumPoints(ST_GeomFromText(@ls));\n+------------------------------------+\n| ST_NumPoints(ST_GeomFromText(@ls)) |\n+------------------------------------+\n|                                  3 |\n+------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(347,'ST_POINTN',26,'ST_PointN(ls, N)\n\nReturns the N-th Point in the Linestring value ls. Points are numbered\nbeginning with 1. If any argument is NULL or the geometry argument is\nan empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_AsText(ST_PointN(ST_GeomFromText(@ls),2));\n+----------------------------------------------+\n| ST_AsText(ST_PointN(ST_GeomFromText(@ls),2)) |\n+----------------------------------------------+\n| POINT(2 2)                                   |\n+----------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(348,'ST_STARTPOINT',26,'ST_StartPoint(ls)\n\nReturns the Point that is the start point of the LineString value ls.\nIf the argument is NULL or an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_AsText(ST_StartPoint(ST_GeomFromText(@ls)));\n+------------------------------------------------+\n| ST_AsText(ST_StartPoint(ST_GeomFromText(@ls))) |\n+------------------------------------------------+\n| POINT(1 1)                                     |\n+------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(349,'STARTPOINT',26,'StartPoint(ls)\n\nST_StartPoint() and StartPoint() are synonyms. For more information,\nsee the description of ST_StartPoint().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(350,'AREA',27,'Area({poly|mpoly})\n\nST_Area() and Area() are synonyms. For more information, see the\ndescription of ST_Area().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(351,'CENTROID',27,'Centroid({poly|mpoly})\n\nST_Centroid() and Centroid() are synonyms. For more information, see\nthe description of ST_Centroid().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(352,'EXTERIORRING',27,'ExteriorRing(poly)\n\nST_ExteriorRing() and ExteriorRing() are synonyms. For more\ninformation, see the description of ST_ExteriorRing().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(353,'INTERIORRINGN',27,'InteriorRingN(poly, N)\n\nST_InteriorRingN() and InteriorRingN() are synonyms. For more\ninformation, see the description of ST_InteriorRingN().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(354,'NUMINTERIORRINGS',27,'NumInteriorRings(poly)\n\nST_NumInteriorRings() and NumInteriorRings() are synonyms. For more\ninformation, see the description of ST_NumInteriorRings().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(355,'ST_AREA',27,'ST_Area({poly|mpoly})\n\nReturns a double-precision number indicating the area of the Polygon or\nMultiPolygon argument, as measured in its spatial reference system. For\narguments of dimension 0 or 1, the result is 0. If the argument is an\nempty geometry the return value is 0. If the argument is NULL the\nreturn value is NULL.\n\nThe result is the sum of the area values of all components for a\ngeometry collection. If a geometry collection is empty, its area is\nreturned as 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','mysql> SET @poly =\n       \'Polygon((0 0,0 3,3 0,0 0),(1 1,1 2,2 1,1 1))\';\nmysql> SELECT ST_Area(ST_GeomFromText(@poly));\n+---------------------------------+\n| ST_Area(ST_GeomFromText(@poly)) |\n+---------------------------------+\n|                               4 |\n+---------------------------------+\n\nmysql> SET @mpoly =\n       \'MultiPolygon(((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1)))\';\nmysql> SELECT ST_Area(ST_GeomFromText(@mpoly));\n+----------------------------------+\n| ST_Area(ST_GeomFromText(@mpoly)) |\n+----------------------------------+\n|                                8 |\n+----------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(356,'ST_CENTROID',27,'ST_Centroid({poly|mpoly})\n\nReturns the mathematical centroid for the Polygon or MultiPolygon\nargument as a Point. The result is not guaranteed to be on the\nMultiPolygon. If the argument is NULL or an empty geometry, the return\nvalue is NULL.\n\nThis function processes geometry collections by computing the centroid\npoint for components of highest dimension in the collection. Such\ncomponents are extracted and made into a single MultiPolygon,\nMultiLineString, or MultiPoint for centroid computation. If the\nargument is an empty geometry collection, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','mysql> SET @poly =\n       ST_GeomFromText(\'POLYGON((0 0,10 0,10 10,0 10,0 0),(5 5,7 5,7 7,5 7,5 5))\');\nmysql> SELECT ST_GeometryType(@poly),ST_AsText(ST_Centroid(@poly));\n+------------------------+--------------------------------------------+\n| ST_GeometryType(@poly) | ST_AsText(ST_Centroid(@poly))              |\n+------------------------+--------------------------------------------+\n| POLYGON                | POINT(4.958333333333333 4.958333333333333) |\n+------------------------+--------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(357,'ST_EXTERIORRING',27,'ST_ExteriorRing(poly)\n\nReturns the exterior ring of the Polygon value poly as a LineString. If\nthe argument is NULL or an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','mysql> SET @poly =\n       \'Polygon((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1))\';\nmysql> SELECT ST_AsText(ST_ExteriorRing(ST_GeomFromText(@poly)));\n+----------------------------------------------------+\n| ST_AsText(ST_ExteriorRing(ST_GeomFromText(@poly))) |\n+----------------------------------------------------+\n| LINESTRING(0 0,0 3,3 3,3 0,0 0)                    |\n+----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(358,'ST_INTERIORRINGN',27,'ST_InteriorRingN(poly, N)\n\nReturns the N-th interior ring for the Polygon value poly as a\nLineString. Rings are numbered beginning with 1. If the argument is\nNULL or an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','mysql> SET @poly =\n       \'Polygon((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1))\';\nmysql> SELECT ST_AsText(ST_InteriorRingN(ST_GeomFromText(@poly),1));\n+-------------------------------------------------------+\n| ST_AsText(ST_InteriorRingN(ST_GeomFromText(@poly),1)) |\n+-------------------------------------------------------+\n| LINESTRING(1 1,1 2,2 2,2 1,1 1)                       |\n+-------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(359,'ST_NUMINTERIORRINGS',27,'ST_NumInteriorRing(poly), ST_NumInteriorRings(poly)\n\nReturns the number of interior rings in the Polygon value poly. If the\nargument is NULL or an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','mysql> SET @poly =\n       \'Polygon((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1))\';\nmysql> SELECT ST_NumInteriorRings(ST_GeomFromText(@poly));\n+---------------------------------------------+\n| ST_NumInteriorRings(ST_GeomFromText(@poly)) |\n+---------------------------------------------+\n|                                           1 |\n+---------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(360,'GEOMETRYN',28,'GeometryN(gc, N)\n\nST_GeometryN() and GeometryN() are synonyms. For more information, see\nthe description of ST_GeometryN().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html'),(361,'NUMGEOMETRIES',28,'NumGeometries(gc)\n\nST_NumGeometries() and NumGeometries() are synonyms. For more\ninformation, see the description of ST_NumGeometries().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html'),(362,'ST_GEOMETRYN',28,'ST_GeometryN(gc, N)\n\nReturns the N-th geometry in the GeometryCollection value gc.\nGeometries are numbered beginning with 1. If any argument is NULL or\nthe geometry argument is an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html\n\n','mysql> SET @gc = \'GeometryCollection(Point(1 1),LineString(2 2, 3 3))\';\nmysql> SELECT ST_AsText(ST_GeometryN(ST_GeomFromText(@gc),1));\n+-------------------------------------------------+\n| ST_AsText(ST_GeometryN(ST_GeomFromText(@gc),1)) |\n+-------------------------------------------------+\n| POINT(1 1)                                      |\n+-------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html'),(363,'ST_NUMGEOMETRIES',28,'ST_NumGeometries(gc)\n\nReturns the number of geometries in the GeometryCollection value gc. If\nthe argument is NULL or an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html\n\n','mysql> SET @gc = \'GeometryCollection(Point(1 1),LineString(2 2, 3 3))\';\nmysql> SELECT ST_NumGeometries(ST_GeomFromText(@gc));\n+----------------------------------------+\n| ST_NumGeometries(ST_GeomFromText(@gc)) |\n+----------------------------------------+\n|                                      2 |\n+----------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html'),(364,'BUFFER',28,'Buffer(g, d[, strategy1[, strategy2[, strategy3]]])\n\nST_Buffer() and Buffer() are synonyms. For more information, see the\ndescription of ST_Buffer().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(365,'CONVEXHULL',28,'ConvexHull(g)\n\nST_ConvexHull() and ConvexHull() are synonyms. For more information,\nsee the description of ST_ConvexHull().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(366,'ST_BUFFER',28,'ST_Buffer(g, d[, strategy1[, strategy2[, strategy3]]])\n\nReturns a geometry that represents all points whose distance from the\ngeometry value g is less than or equal to a distance of d, or NULL if\nany argument is NULL. The SRID of the geometry argument must be 0\nbecause ST_Buffer() supports only the Cartesian coordinate system. If\nany geometry argument is not a syntactically well-formed geometry, an\nER_GIS_INVALID_DATA error occurs.\n\nIf the geometry argument is empty, ST_Buffer() returns an empty\ngeometry.\n\nIf the distance is 0, ST_Buffer() returns the geometry argument\nunchanged:\n\nmysql> SET @pt = ST_GeomFromText(\'POINT(0 0)\');\nmysql> SELECT ST_AsText(ST_Buffer(@pt, 0));\n+------------------------------+\n| ST_AsText(ST_Buffer(@pt, 0)) |\n+------------------------------+\n| POINT(0 0)                   |\n+------------------------------+\n\nST_Buffer() supports negative distances for Polygon and MultiPolygon\nvalues, and for geometry collections containing Polygon or MultiPolygon\nvalues. The result may be an empty geometry. An ER_WRONG_ARGUMENTS\nerror occurs for ST_Buffer() with a negative distance for Point,\nMultiPoint, LineString, and MultiLineString values, and for geometry\ncollections not containing any Polygon or MultiPolygon values.\n\nAs of MySQL 5.7.7, ST_Buffer() permits up to three optional strategy\narguments following the distance argument. Strategies influence buffer\ncomputation. These arguments are byte string values produced by the\nST_Buffer_Strategy() function, to be used for point, join, and end\nstrategies:\n\no Point strategies apply to Point and MultiPoint geometries. If no\n  point strategy is specified, the default is\n  ST_Buffer_Strategy(\'point_circle\', 32).\n\no Join strategies apply to LineString, MultiLineString, Polygon, and\n  MultiPolygon geometries. If no join strategy is specified, the\n  default is ST_Buffer_Strategy(\'join_round\', 32).\n\no End strategies apply to LineString and MultiLineString geometries. If\n  no end strategy is specified, the default is\n  ST_Buffer_Strategy(\'end_round\', 32).\n\nUp to one strategy of each type may be specified, and they may be given\nin any order. If multiple strategies of a given type are specified, an\nER_WRONG_ARGUMENTS error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','mysql> SET @pt = ST_GeomFromText(\'POINT(0 0)\');\nmysql> SET @pt_strategy = ST_Buffer_Strategy(\'point_square\');\nmysql> SELECT ST_AsText(ST_Buffer(@pt, 2, @pt_strategy));\n+--------------------------------------------+\n| ST_AsText(ST_Buffer(@pt, 2, @pt_strategy)) |\n+--------------------------------------------+\n| POLYGON((-2 -2,2 -2,2 2,-2 2,-2 -2))       |\n+--------------------------------------------+\n\nmysql> SET @ls = ST_GeomFromText(\'LINESTRING(0 0,0 5,5 5)\');\nmysql> SET @end_strategy = ST_Buffer_Strategy(\'end_flat\');\nmysql> SET @join_strategy = ST_Buffer_Strategy(\'join_round\', 10);\nmysql> SELECT ST_AsText(ST_Buffer(@ls, 5, @end_strategy, @join_strategy))\n+---------------------------------------------------------------+\n| ST_AsText(ST_Buffer(@ls, 5, @end_strategy, @join_strategy))   |\n+---------------------------------------------------------------+\n| POLYGON((5 5,5 10,0 10,-3.5355339059327373 8.535533905932738, |\n| -5 5,-5 0,0 0,5 0,5 5))                                       |\n+---------------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(367,'ST_BUFFER_STRATEGY',28,'ST_Buffer_Strategy(strategy[, points_per_circle])\n\nThis function returns a strategy byte string for use with ST_Buffer()\nto influence buffer computation. If any argument is NULL, the return\nvalue is NULL. If any argument is invalid, an ER_WRONG_ARGUMENTS error\noccurs.\n\nInformation about strategies is available at Boost.org\n(http://www.boost.org).\n\nThe first argument must be a string indicating a strategy option:\n\no For point strategies, permitted values are \'point_circle\' and\n  \'point_square\'.\n\no For join strategies, permitted values are \'join_round\' and\n  \'join_miter\'.\n\no For end strategies, permitted values are \'end_round\' and \'end_flat\'.\n\nIf the first argument is \'point_circle\', \'join_round\', \'join_miter\', or\n\'end_round\', the points_per_circle argument must be given as a positive\nnumeric value. The maximum points_per_circle value is the value of the\nmax_points_in_geometry system variable as of MySQL 5.7.8, 65,536 before\nthat. If the first argument is \'point_square\' or \'end_flat\', the\npoints_per_circle argument must not be given or an ER_WRONG_ARGUMENTS\nerror occurs.\n\nFor examples, see the description of ST_Buffer().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(368,'ST_CONVEXHULL',28,'ST_ConvexHull(g)\n\nReturns a geometry that represents the convex hull of the geometry\nvalue g. If the argument is NULL, the return value is NULL.\n\nThis function computes a geometry\'s convex hull by first checking\nwhether its vertex points are colinear. The function returns a linear\nhull if so, a polygon hull otherwise. This function processes geometry\ncollections by extracting all vertex points of all components of the\ncollection, creating a MultiPoint value from them, and computing its\nconvex hull. If the argument is an empty geometry collection, the\nreturn value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','mysql> SET @g = \'MULTIPOINT(5 0,25 0,15 10,15 25)\';\nmysql> SELECT ST_AsText(ST_ConvexHull(ST_GeomFromText(@g)));\n+-----------------------------------------------+\n| ST_AsText(ST_ConvexHull(ST_GeomFromText(@g))) |\n+-----------------------------------------------+\n| POLYGON((5 0,25 0,15 25,5 0))                 |\n+-----------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(369,'ST_DIFFERENCE',28,'ST_Difference(g1, g2)\n\nReturns a geometry that represents the point set difference of the\ngeometry values g1 and g2. If any argument is NULL, the return value is\nNULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','mysql> SET @g1 = Point(1,1), @g2 = Point(2,2);\nmysql> SELECT ST_AsText(ST_Difference(@g1, @g2));\n+------------------------------------+\n| ST_AsText(ST_Difference(@g1, @g2)) |\n+------------------------------------+\n| POINT(1 1)                         |\n+------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(370,'ST_INTERSECTION',28,'ST_Intersection(g1, g2)\n\nReturns a geometry that represents the point set intersection of the\ngeometry values g1 and g2. If any argument is NULL, the return value is\nNULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','mysql> SET @g1 = ST_GeomFromText(\'LineString(1 1, 3 3)\');\nmysql> SET @g2 = ST_GeomFromText(\'LineString(1 3, 3 1)\');\nmysql> SELECT ST_AsText(ST_Intersection(@g1, @g2));\n+--------------------------------------+\n| ST_AsText(ST_Intersection(@g1, @g2)) |\n+--------------------------------------+\n| POINT(2 2)                           |\n+--------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(371,'ST_SYMDIFFERENCE',28,'ST_SymDifference(g1, g2)\n\nReturns a geometry that represents the point set symmetric difference\nof the geometry values g1 and g2, which is defined as:\n\ng1 symdifference g2 := (g1 union g2) difference (g1 intersection g2)\n\nOr, in function call notation:\n\nST_SymDifference(g1, g2) = ST_Difference(ST_Union(g1, g2), ST_Intersection(g1, g2))\n\nIf any argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','mysql> SET @g1 = Point(1,1), @g2 = Point(2,2);\nmysql> SELECT ST_AsText(ST_SymDifference(@g1, @g2));\n+---------------------------------------+\n| ST_AsText(ST_SymDifference(@g1, @g2)) |\n+---------------------------------------+\n| MULTIPOINT((1 1),(2 2))               |\n+---------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(372,'ST_UNION',28,'ST_Union(g1, g2)\n\nReturns a geometry that represents the point set union of the geometry\nvalues g1 and g2. If any argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','mysql> SET @g1 = ST_GeomFromText(\'LineString(1 1, 3 3)\');\nmysql> SET @g2 = ST_GeomFromText(\'LineString(1 3, 3 1)\');\nmysql> SELECT ST_AsText(ST_Union(@g1, @g2));\n+--------------------------------------+\n| ST_AsText(ST_Union(@g1, @g2))        |\n+--------------------------------------+\n| MULTILINESTRING((1 1,3 3),(1 3,3 1)) |\n+--------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(373,'CROSSES',29,'Crosses(g1, g2)\n\nST_Crosses() and Crosses() are synonyms. For more information, see the\ndescription of ST_Crosses().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(374,'DISTANCE',29,'Distance(g1, g2)\n\nST_Distance() and Distance() are synonyms. For more information, see\nthe description of ST_Distance().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(375,'ST_CONTAINS',29,'ST_Contains(g1, g2)\n\nReturns 1 or 0 to indicate whether g1 completely contains g2. This\ntests the opposite relationship as ST_Within().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(376,'ST_CROSSES',29,'ST_Crosses(g1, g2)\n\nThe term spatially crosses denotes a spatial relation between two given\ngeometries that has the following properties:\n\no The two geometries intersect.\n\no Their intersection results in a geometry that has a dimension that is\n  one less than the maximum dimension of the two given geometries.\n\no Their intersection is not equal to either of the two given\n  geometries.\n\nThis function returns 1 or 0 to indicate whether g1 spatially crosses\ng2. If g1 is a Polygon or a MultiPolygon, or if g2 is a Point or a\nMultiPoint, the return value is NULL.\n\nThis function returns 0 if called with an inapplicable geometry\nargument type combination. For example, it returns 0 if the first\nargument is a Polygon or MultiPolygon and/or the second argument is a\nPoint or MultiPoint.\n\nReturns 1 if g1 spatially crosses g2. Returns NULL if g1 is a Polygon\nor a MultiPolygon, or if g2 is a Point or a MultiPoint. Otherwise,\nreturns 0.\n\nThis function returns 0 if called with an inapplicable geometry\nargument type combination. For example, it returns 0 if the first\nargument is a Polygon or MultiPolygon and/or the second argument is a\nPoint or MultiPoint.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(377,'ST_DISJOINT',29,'ST_Disjoint(g1, g2)\n\nReturns 1 or 0 to indicate whether g1 is spatially disjoint from (does\nnot intersect) g2.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(378,'ST_DISTANCE',29,'ST_Distance(g1, g2)\n\nReturns the distance between g1 and g2. If either argument is NULL or\nan empty geometry, the return value is NULL.\n\nThis function processes geometry collections by returning the shortest\ndistance among all combinations of the components of the two geometry\narguments.\n\nIf an intermediate or final result produces NaN or a negative number,\nan ER_GIS_INVALID_DATA error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','mysql> SET @g1 = Point(1,1);\nmysql> SET @g2 = Point(2,2);\nmysql> SELECT ST_Distance(@g1, @g2);\n+-----------------------+\n| ST_Distance(@g1, @g2) |\n+-----------------------+\n|    1.4142135623730951 |\n+-----------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(379,'ST_EQUALS',29,'ST_Equals(g1, g2)\n\nReturns 1 or 0 to indicate whether g1 is spatially equal to g2.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','mysql> SET @g1 = Point(1,1), @g2 = Point(2,2);\nmysql> SELECT ST_Equals(@g1, @g1), ST_Equals(@g1, @g2);\n+---------------------+---------------------+\n| ST_Equals(@g1, @g1) | ST_Equals(@g1, @g2) |\n+---------------------+---------------------+\n|                   1 |                   0 |\n+---------------------+---------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(380,'ST_INTERSECTS',29,'ST_Intersects(g1, g2)\n\nReturns 1 or 0 to indicate whether g1 spatially intersects g2.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(381,'ST_OVERLAPS',29,'ST_Overlaps(g1, g2)\n\nTwo geometries spatially overlap if they intersect and their\nintersection results in a geometry of the same dimension but not equal\nto either of the given geometries.\n\nThis function returns 1 or 0 to indicate whether g1 spatially overlaps\ng2.\n\nThis function returns 0 if called with an inapplicable geometry\nargument type combination. For example, it returns 0 if called with\ngeometries of different dimensions or any argument is a Point.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(382,'ST_TOUCHES',29,'ST_Touches(g1, g2)\n\nTwo geometries spatially touch if their interiors do not intersect, but\nthe boundary of one of the geometries intersects either the boundary or\nthe interior of the other.\n\nThis function returns 1 or 0 to indicate whether g1 spatially touches\ng2.\n\nThis function returns 0 if called with an inapplicable geometry\nargument type combination. For example, it returns 0 if either of the\narguments is a Point or MultiPoint.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(383,'ST_WITHIN',29,'ST_Within(g1, g2)\n\nReturns 1 or 0 to indicate whether g1 is spatially within g2. This\ntests the opposite relationship as ST_Contains().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(384,'TOUCHES',29,'Touches(g1, g2)\n\nST_Touches() and Touches() are synonyms. For more information, see the\ndescription of ST_Touches().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(385,'MBRCONTAINS',30,'MBRContains(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangle of g1\ncontains the minimum bounding rectangle of g2. This tests the opposite\nrelationship as MBRWithin().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','mysql> SET @g1 = ST_GeomFromText(\'Polygon((0 0,0 3,3 3,3 0,0 0))\');\nmysql> SET @g2 = ST_GeomFromText(\'Point(1 1)\');\nmysql> SELECT MBRContains(@g1,@g2), MBRWithin(@g2,@g1);\n+----------------------+--------------------+\n| MBRContains(@g1,@g2) | MBRWithin(@g2,@g1) |\n+----------------------+--------------------+\n|                    1 |                  1 |\n+----------------------+--------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(386,'MBRCOVEREDBY',30,'MBRCoveredBy(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangle of g1\nis covered by the minimum bounding rectangle of g2. This tests the\nopposite relationship as MBRCovers().\n\nMBRCoveredBy() handles its arguments as follows:\n\no If either argument is NULL or an empty geometry, the return value is\n  NULL.\n\no If either argument is not a syntactically well-formed geometry byte\n  string, an ER_GIS_INVALID_DATA error occurs.\n\no Otherwise, the return value is non-NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','mysql> SET @g1 = ST_GeomFromText(\'Polygon((0 0,0 3,3 3,3 0,0 0))\');\nmysql> SET @g2 = ST_GeomFromText(\'Point(1 1)\');\nmysql> SELECT MBRCovers(@g1,@g2), MBRCoveredby(@g1,@g2);\n+--------------------+-----------------------+\n| MBRCovers(@g1,@g2) | MBRCoveredby(@g1,@g2) |\n+--------------------+-----------------------+\n|                  1 |                     0 |\n+--------------------+-----------------------+\nmysql> SELECT MBRCovers(@g2,@g1), MBRCoveredby(@g2,@g1);\n+--------------------+-----------------------+\n| MBRCovers(@g2,@g1) | MBRCoveredby(@g2,@g1) |\n+--------------------+-----------------------+\n|                  0 |                     1 |\n+--------------------+-----------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(387,'MBRCOVERS',30,'MBRCovers(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangle of g1\ncovers the minimum bounding rectangle of g2. This tests the opposite\nrelationship as MBRCoveredBy(). See the description of MBRCoveredBy()\nfor examples.\n\nMBRCovers() handles its arguments as follows:\n\no If either argument is NULL or an empty geometry, the return value is\n  NULL.\n\no If either argument is not a syntactically well-formed geometry byte\n  string, an ER_GIS_INVALID_DATA error occurs.\n\no Otherwise, the return value is non-NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(388,'MBRDISJOINT',30,'MBRDisjoint(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangles of\nthe two geometries g1 and g2 are disjoint (do not intersect).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(389,'MBREQUAL',30,'MBREqual(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangles of\nthe two geometries g1 and g2 are the same.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(390,'MBREQUALS',30,'MBREquals(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangles of\nthe two geometries g1 and g2 are the same.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(391,'MBRINTERSECTS',30,'MBRIntersects(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangles of\nthe two geometries g1 and g2 intersect.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(392,'MBROVERLAPS',30,'MBROverlaps(g1, g2)\n\nTwo geometries spatially overlap if they intersect and their\nintersection results in a geometry of the same dimension but not equal\nto either of the given geometries.\n\nThis function returns 1 or 0 to indicate whether the minimum bounding\nrectangles of the two geometries g1 and g2 overlap.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(393,'MBRTOUCHES',30,'MBRTouches(g1, g2)\n\nTwo geometries spatially touch if their interiors do not intersect, but\nthe boundary of one of the geometries intersects either the boundary or\nthe interior of the other.\n\nThis function returns 1 or 0 to indicate whether the minimum bounding\nrectangles of the two geometries g1 and g2 touch.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(394,'MBRWITHIN',30,'MBRWithin(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangle of g1\nis within the minimum bounding rectangle of g2. This tests the opposite\nrelationship as MBRContains().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','mysql> SET @g1 = ST_GeomFromText(\'Polygon((0 0,0 3,3 3,3 0,0 0))\');\nmysql> SET @g2 = ST_GeomFromText(\'Polygon((0 0,0 5,5 5,5 0,0 0))\');\nmysql> SELECT MBRWithin(@g1,@g2), MBRWithin(@g2,@g1);\n+--------------------+--------------------+\n| MBRWithin(@g1,@g2) | MBRWithin(@g2,@g1) |\n+--------------------+--------------------+\n|                  1 |                  0 |\n+--------------------+--------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(395,'CONTAINS',30,'Contains(g1, g2)\n\nMBRContains() and Contains() are synonyms. For more information, see\nthe description of MBRContains().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(396,'DISJOINT',30,'Disjoint(g1, g2)\n\nMBRDisjoint() and Disjoint() are synonyms. For more information, see\nthe description of MBRDisjoint().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(397,'EQUALS',30,'Equals(g1, g2)\n\nMBREquals() and Equals() are synonyms. For more information, see the\ndescription of MBREquals().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(398,'INTERSECTS',30,'Intersects(g1, g2)\n\nMBRIntersects() and Intersects() are synonyms. For more information,\nsee the description of MBRIntersects().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(399,'OVERLAPS',30,'Overlaps(g1, g2)\n\nMBROverlaps() and Overlaps() are synonyms. For more information, see\nthe description of MBROverlaps().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(400,'WITHIN',30,'Within(g1, g2)\n\nMBRWithin() and Within() are synonyms. For more information, see the\ndescription of MBRWithin().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(401,'ST_GEOHASH',30,'ST_GeoHash(longitude, latitude, max_length), ST_GeoHash(point,\nmax_length)\n\nReturns a geohash string in the connection character set and collation.\n\nIf any argument is NULL, the return value is NULL. If any argument is\ninvalid, an error occurs.\n\nFor the first syntax, the longitude must be a number in the range\n[−180, 180], and the latitude must be a number in the range [−90,\n90]. For the second syntax, a POINT value is required, where the X and\nY coordinates are in the valid ranges for longitude and latitude,\nrespectively.\n\nThe resulting string is no longer than max_length characters, which has\nan upper limit of 100. The string might be shorter than max_length\ncharacters because the algorithm that creates the geohash value\ncontinues until it has created a string that is either an exact\nrepresentation of the location or max_length characters, whichever\ncomes first.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html\n\n','mysql> SELECT ST_GeoHash(180,0,10), ST_GeoHash(-180,-90,15);\n+----------------------+-------------------------+\n| ST_GeoHash(180,0,10) | ST_GeoHash(-180,-90,15) |\n+----------------------+-------------------------+\n| xbpbpbpbpb           | 000000000000000         |\n+----------------------+-------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html'),(402,'ST_LATFROMGEOHASH',30,'ST_LatFromGeoHash(geohash_str)\n\nReturns the latitude from a geohash string value, as a DOUBLE value in\nthe range [−90, 90].\n\nIf the argument is NULL, the return value is NULL. If the argument is\ninvalid, an error occurs.\n\nThe ST_LatFromGeoHash() decoding function reads no more than 433\ncharacters from the geohash_str argument. That represents the upper\nlimit on information in the internal representation of coordinate\nvalues. Characters past the 433rd are ignored, even if they are\notherwise illegal and produce an error.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html\n\n','mysql> SELECT ST_LatFromGeoHash(ST_GeoHash(45,-20,10));\n+------------------------------------------+\n| ST_LatFromGeoHash(ST_GeoHash(45,-20,10)) |\n+------------------------------------------+\n|                                      -20 |\n+------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html'),(403,'ST_LONGFROMGEOHASH',30,'ST_LongFromGeoHash(geohash_str)\n\nReturns the longitude from a geohash string value, as a DOUBLE value in\nthe range [−180, 180].\n\nIf the argument is NULL, the return value is NULL. If the argument is\ninvalid, an error occurs.\n\nThe remarks in the description of ST_LatFromGeoHash() regarding the\nmaximum number of characters processed from the geohash_str argument\nalso apply to ST_LongFromGeoHash().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html\n\n','mysql> SELECT ST_LongFromGeoHash(ST_GeoHash(45,-20,10));\n+-------------------------------------------+\n| ST_LongFromGeoHash(ST_GeoHash(45,-20,10)) |\n+-------------------------------------------+\n|                                        45 |\n+-------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html'),(404,'ST_POINTFROMGEOHASH',30,'ST_PointFromGeoHash(geohash_str, srid)\n\nReturns a POINT value containing the decoded geohash value, given a\ngeohash string value.\n\nThe X and Y coordinates of the point are the longitude in the range\n[−180, 180] and the latitude in the range [−90, 90], respectively.\n\nIf any argument is NULL, the return value is NULL. If any argument is\ninvalid, an error occurs.\n\nThe srid argument is an unsigned 32-bit integer.\n\nThe remarks in the description of ST_LatFromGeoHash() regarding the\nmaximum number of characters processed from the geohash_str argument\nalso apply to ST_PointFromGeoHash().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html\n\n','mysql> SET @gh = ST_GeoHash(45,-20,10);\nmysql> SELECT ST_AsText(ST_PointFromGeoHash(@gh,0));\n+---------------------------------------+\n| ST_AsText(ST_PointFromGeoHash(@gh,0)) |\n+---------------------------------------+\n| POINT(45 -20)                         |\n+---------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html'),(405,'ST_ASGEOJSON',30,'ST_AsGeoJSON(g [, max_dec_digits [, options]])\n\nGenerates a GeoJSON object from the geometry g. The object string has\nthe connection character set and collation.\n\nIf any argument is NULL, the return value is NULL. If any non-NULL\nargument is invalid, an error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-geojson-functions.html\n\n','mysql> SELECT ST_AsGeoJSON(ST_GeomFromText(\'POINT(11.11111 12.22222)\'),2);\n+-------------------------------------------------------------+\n| ST_AsGeoJSON(ST_GeomFromText(\'POINT(11.11111 12.22222)\'),2) |\n+-------------------------------------------------------------+\n| {\"type\": \"Point\", \"coordinates\": [11.11, 12.22]}            |\n+-------------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-geojson-functions.html'),(406,'ST_GEOMFROMGEOJSON',30,'ST_GeomFromGeoJSON(str [, options [, srid]])\n\nParses a string str representing a GeoJSON object and returns a\ngeometry.\n\nIf any argument is NULL, the return value is NULL. If any non-NULL\nargument is invalid, an error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-geojson-functions.html\n\n','mysql> SET @json = \'{ \"type\": \"Point\", \"coordinates\": [102.0, 0.0]}\';\nmysql> SELECT ST_AsText(ST_GeomFromGeoJSON(@json));\n+--------------------------------------+\n| ST_AsText(ST_GeomFromGeoJSON(@json)) |\n+--------------------------------------+\n| POINT(102 0)                         |\n+--------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-geojson-functions.html'),(407,'ST_DISTANCE_SPHERE',30,'ST_Distance_Sphere(g1, g2 [, radius])\n\nReturns the mimimum spherical distance between two points and/or\nmultipoints on a sphere, in meters, or NULL if any geometry argument is\nNULL or empty.\n\nCalculations use a spherical earth and a configurable radius. The\noptional radius argument should be given in meters. If omitted, the\ndefault radius is 6,370,986 meters. An ER_WRONG_ARGUMENTS error occurs\nif the radius argument is present but not positive.\n\nThe geometry arguments should consist of points that specify\n(longitude, latitude) coordinate values:\n\no Longitude and latitude are the first and second coordinates of the\n  point, respectively.\n\no Both coordinates are in degrees.\n\no Longitude values must be in the range (-180, 180]. Positive values\n  are east of the prime meridian.\n\no Latitude values must be in the range [-90, 90]. Positive values are\n  north of the equator.\n\nSupported argument combinations are (Point, Point), (Point,\nMultiPoint), and (MultiPoint, Point). An ER_GIS_UNSUPPORTED_ARGUMENT\nerror occurs for other combinations.\n\nIf any geometry argument is not a syntactically well-formed geometry\nbyte string, an ER_GIS_INVALID_DATA error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html\n\n','mysql> SET @pt1 = ST_GeomFromText(\'POINT(0 0)\');\nmysql> SET @pt2 = ST_GeomFromText(\'POINT(180 0)\');\nmysql> SELECT ST_Distance_Sphere(@pt1, @pt2);\n+--------------------------------+\n| ST_Distance_Sphere(@pt1, @pt2) |\n+--------------------------------+\n|             20015042.813723423 |\n+--------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html'),(408,'ST_ISVALID',30,'ST_IsValid(g)\n\nReturns 1 if the argument is syntactically well-formed and is\ngeometrically valid, 0 if the argument is not syntactically well-formed\nor is not geometrically valid. If the argument is NULL, the return\nvalue is NULL. Geometry validity is defined by the OGC specification.\n\nThe only valid empty geometry is represented in the form of an empty\ngeometry collection value. ST_IsValid() returns 1 in this case.\n\nST_IsValid() works only for the Cartesian coordinate system and\nrequires a geometry argument with an SRID of 0. An ER_WRONG_ARGUMENTS\nerror occurs otherwise.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html\n\n','mysql> SET @ls1 = ST_GeomFromText(\'LINESTRING(0 0,-0.00 0,0.0 0)\');\nmysql> SET @ls2 = ST_GeomFromText(\'LINESTRING(0 0, 1 1)\');\nmysql> SELECT ST_IsValid(@ls1);\n+------------------+\n| ST_IsValid(@ls1) |\n+------------------+\n|                0 |\n+------------------+\nmysql> SELECT ST_IsValid(@ls2);\n+------------------+\n| ST_IsValid(@ls2) |\n+------------------+\n|                1 |\n+------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html'),(409,'ST_MAKEENVELOPE',30,'ST_MakeEnvelope(pt1, pt2)\n\nReturns the rectangle that forms the envelope around two points, as a\nPoint, LineString, or Polygon. If any argument is NULL, the return\nvalue is NULL.\n\nCalculations are done using the Cartesian coordinate system rather than\non a sphere, spheroid, or on earth.\n\nGiven two points pt1 and pt2, ST_MakeEnvelope() creates the result\ngeometry on an abstract plane like this:\n\no If pt1 and pt2 are equal, the result is the point pt1.\n\no Otherwise, if (pt1, pt2) is a vertical or horizontal line segment,\n  the result is the line segment (pt1, pt2).\n\no Otherwise, the result is a polygon using pt1 and pt2 as diagonal\n  points.\n\nThe result geometry has an SRID of 0.\n\nST_MakeEnvelope() requires Point geometry arguments with an SRID of 0.\nAn ER_WRONG_ARGUMENTS error occurs otherwise.\n\nIf any argument is not a syntactically well-formed geometry byte\nstring, or if any coordinate value of the two points is infinite or\nNaN, an ER_GIS_INVALID_DATA error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html\n\n','mysql> SET @pt1 = ST_GeomFromText(\'POINT(0 0)\');\nmysql> SET @pt2 = ST_GeomFromText(\'POINT(1 1)\');\nmysql> SELECT ST_AsText(ST_MakeEnvelope(@pt1, @pt2));\n+----------------------------------------+\n| ST_AsText(ST_MakeEnvelope(@pt1, @pt2)) |\n+----------------------------------------+\n| POLYGON((0 0,1 0,1 1,0 1,0 0))         |\n+----------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html'),(410,'ST_SIMPLIFY',30,'ST_Simplify(g, max_distance)\n\nSimplifies a geometry using the Douglas-Peucker algorithm and returns a\nsimplified value of the same type. If any argument is NULL, the return\nvalue is NULL.\n\nThe geometry may be any geometry type, although the Douglas-Peucker\nalgorithm may not actually process every type. A geometry collection is\nprocessed by giving its components one by one to the simplification\nalgorithm, and the returned geometries are put into a geometry\ncollection as result.\n\nThe max_distance argument is the distance (in units of the input\ncoordinates) of a vertex to other segments to be removed. Vertices\nwithin this distance of the simplified linestring are removed. If the\nmax_distance argument is not positive, or is NaN, an ER_WRONG_ARGUMENTS\nerror occurs.\n\nAccording to Boost.Geometry, geometries might become invalid as a\nresult of the simplification process, and the process might create\nself-intersections. To check the validity of the result, pass it to\nST_IsValid().\n\nIf the geometry argument is not a syntactically well-formed geometry\nbyte string, an ER_GIS_INVALID_DATA error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html\n\n','mysql> SET @g = ST_GeomFromText(\'LINESTRING(0 0,0 1,1 1,1 2,2 2,2 3,3 3)\');\nmysql> SELECT ST_AsText(ST_Simplify(@g, 0.5));\n+---------------------------------+\n| ST_AsText(ST_Simplify(@g, 0.5)) |\n+---------------------------------+\n| LINESTRING(0 0,0 1,1 1,2 3,3 3) |\n+---------------------------------+\nmysql> SELECT ST_AsText(ST_Simplify(@g, 1.0));\n+---------------------------------+\n| ST_AsText(ST_Simplify(@g, 1.0)) |\n+---------------------------------+\n| LINESTRING(0 0,3 3)             |\n+---------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html'),(411,'ST_VALIDATE',30,'ST_Validate(g)\n\nValidates a geometry according to the OGC specification. A geometry can\nbe syntactically well-formed (WKB value plus SRID) but geometrically\ninvalid. For example, this polygon is geometrically invalid: POLYGON((0\n0, 0 0, 0 0, 0 0, 0 0))\n\nST_Validate() returns the geometry if it is syntactically well-formed\nand is geometrically valid, NULL if the argument is not syntactically\nwell-formed or is not geometrically valid or is NULL.\n\nST_Validate() can be used to filter out invalid geometry data, although\nat a cost. For applications that require more precise results not\ntainted by invalid data, this penalty may be worthwhile.\n\nIf the geometry argument is valid, it is returned as is, except that if\nan input Polygon or MultiPolygon has clockwise rings, those rings are\nreversed before checking for validity. If the geometry is valid, the\nvalue with the reversed rings is returned.\n\nThe only valid empty geometry is represented in the form of an empty\ngeometry collection value. ST_Validate() returns it directly without\nfurther checks in this case.\n\nST_Validate() works only for the Cartesian coordinate system and\nrequires a geometry argument with an SRID of 0. An ER_WRONG_ARGUMENTS\nerror occurs otherwise.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html\n\n','mysql> SET @ls1 = ST_GeomFromText(\'LINESTRING(0 0)\');\nmysql> SET @ls2 = ST_GeomFromText(\'LINESTRING(0 0, 1 1)\');\nmysql> SELECT ST_AsText(ST_Validate(@ls1));\n+------------------------------+\n| ST_AsText(ST_Validate(@ls1)) |\n+------------------------------+\n| NULL                         |\n+------------------------------+\nmysql> SELECT ST_AsText(ST_Validate(@ls2));\n+------------------------------+\n| ST_AsText(ST_Validate(@ls2)) |\n+------------------------------+\n| LINESTRING(0 0,1 1)          |\n+------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html'),(412,'JSON_ARRAY',30,'Syntax:\nJSON_ARRAY([val[, val] ...])\n\nEvaluates a (possibly empty) list of values and returns a JSON array\ncontaining those values.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-creation-functions.html\n\n','mysql> SELECT JSON_ARRAY(1, \"abc\", NULL, TRUE, CURTIME());\n+---------------------------------------------+\n| JSON_ARRAY(1, \"abc\", NULL, TRUE, CURTIME()) |\n+---------------------------------------------+\n| [1, \"abc\", null, true, \"11:30:24.000000\"]   |\n+---------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-creation-functions.html'),(413,'JSON_OBJECT',30,'Syntax:\nJSON_OBJECT([key, val[, key, val] ...])\n\nEvaluates a (possibly empty) list of key-value pairs and returns a JSON\nobject containing those pairs. An error occurs if any key name is NULL\nor the number of arguments is odd.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-creation-functions.html\n\n','mysql> SELECT JSON_OBJECT(\'id\', 87, \'name\', \'carrot\');\n+-----------------------------------------+\n| JSON_OBJECT(\'id\', 87, \'name\', \'carrot\') |\n+-----------------------------------------+\n| {\"id\": 87, \"name\": \"carrot\"}            |\n+-----------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-creation-functions.html'),(414,'JSON_QUOTE',30,'Syntax:\nJSON_QUOTE(string)\n\nQuotes a string as a JSON value by wrapping it with double quote\ncharacters and escaping interior quote and other characters, then\nreturning the result as a utf8mb4 string. Returns NULL if the argument\nis NULL.\n\nThis function is typically used to produce a valid JSON string literal\nfor inclusion within a JSON document.\n\nCertain special characters are escaped with backslashes per the escape\nsequences shown in\nhttps://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.htm\nl#json-unquote-character-escape-sequences.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-creation-functions.html\n\n','mysql> SELECT JSON_QUOTE(\'null\'), JSON_QUOTE(\'\"null\"\');\n+--------------------+----------------------+\n| JSON_QUOTE(\'null\') | JSON_QUOTE(\'\"null\"\') |\n+--------------------+----------------------+\n| \"null\"             | \"\\\"null\\\"\"           |\n+--------------------+----------------------+\nmysql> SELECT JSON_QUOTE(\'[1, 2, 3]\');\n+-------------------------+\n| JSON_QUOTE(\'[1, 2, 3]\') |\n+-------------------------+\n| \"[1, 2, 3]\"             |\n+-------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-creation-functions.html'),(415,'JSON_CONTAINS',30,'Syntax:\nJSON_CONTAINS(target, candidate[, path])\n\nIndicates by returning 1 or 0 whether a given candidate JSON document\nis contained within a target JSON document, or---if a path argument was\nsupplied---whether the candidate is found at a specific path within the\ntarget. Returns NULL if any argument is NULL, or if the path argument\ndoes not identify a section of the target document. An error occurs if\ntarget or candidate is not a valid JSON document, or if the path\nargument is not a valid path expression or contains a * or ** wildcard.\n\nTo check only whether any data exists at the path, use\nJSON_CONTAINS_PATH() instead.\n\nThe following rules define containment:\n\no A candidate scalar is contained in a target scalar if and only if\n  they are comparable and are equal. Two scalar values are comparable\n  if they have the same JSON_TYPE() types, with the exception that\n  values of types INTEGER and DECIMAL are also comparable to each\n  other.\n\no A candidate array is contained in a target array if and only if every\n  element in the candidate is contained in some element of the target.\n\no A candidate nonarray is contained in a target array if and only if\n  the candidate is contained in some element of the target.\n\no A candidate object is contained in a target object if and only if for\n  each key in the candidate there is a key with the same name in the\n  target and the value associated with the candidate key is contained\n  in the value associated with the target key.\n\nOtherwise, the candidate value is not contained in the target document.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html\n\n','mysql> SET @j = \'{\"a\": 1, \"b\": 2, \"c\": {\"d\": 4}}\';\nmysql> SET @j2 = \'1\';\nmysql> SELECT JSON_CONTAINS(@j, @j2, \'$.a\');\n+-------------------------------+\n| JSON_CONTAINS(@j, @j2, \'$.a\') |\n+-------------------------------+\n|                             1 |\n+-------------------------------+\nmysql> SELECT JSON_CONTAINS(@j, @j2, \'$.b\');\n+-------------------------------+\n| JSON_CONTAINS(@j, @j2, \'$.b\') |\n+-------------------------------+\n|                             0 |\n+-------------------------------+\n\nmysql> SET @j2 = \'{\"d\": 4}\';\nmysql> SELECT JSON_CONTAINS(@j, @j2, \'$.a\');\n+-------------------------------+\n| JSON_CONTAINS(@j, @j2, \'$.a\') |\n+-------------------------------+\n|                             0 |\n+-------------------------------+\nmysql> SELECT JSON_CONTAINS(@j, @j2, \'$.c\');\n+-------------------------------+\n| JSON_CONTAINS(@j, @j2, \'$.c\') |\n+-------------------------------+\n|                             1 |\n+-------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html'),(416,'JSON_CONTAINS_PATH',30,'Syntax:\nJSON_CONTAINS_PATH(json_doc, one_or_all, path[, path] ...)\n\nReturns 0 or 1 to indicate whether a JSON document contains data at a\ngiven path or paths. Returns NULL if any argument is NULL. An error\noccurs if the json_doc argument is not a valid JSON document, any path\nargument is not a valid path expression, or one_or_all is not \'one\' or\n\'all\'.\n\nTo check for a specific value at a path, use JSON_CONTAINS() instead.\n\nThe return value is 0 if no specified path exists within the document.\nOtherwise, the return value depends on the one_or_all argument:\n\no \'one\': 1 if at least one path exists within the document, 0\n  otherwise.\n\no \'all\': 1 if all paths exist within the document, 0 otherwise.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html\n\n','mysql> SET @j = \'{\"a\": 1, \"b\": 2, \"c\": {\"d\": 4}}\';\nmysql> SELECT JSON_CONTAINS_PATH(@j, \'one\', \'$.a\', \'$.e\');\n+---------------------------------------------+\n| JSON_CONTAINS_PATH(@j, \'one\', \'$.a\', \'$.e\') |\n+---------------------------------------------+\n|                                           1 |\n+---------------------------------------------+\nmysql> SELECT JSON_CONTAINS_PATH(@j, \'all\', \'$.a\', \'$.e\');\n+---------------------------------------------+\n| JSON_CONTAINS_PATH(@j, \'all\', \'$.a\', \'$.e\') |\n+---------------------------------------------+\n|                                           0 |\n+---------------------------------------------+\nmysql> SELECT JSON_CONTAINS_PATH(@j, \'one\', \'$.c.d\');\n+----------------------------------------+\n| JSON_CONTAINS_PATH(@j, \'one\', \'$.c.d\') |\n+----------------------------------------+\n|                                      1 |\n+----------------------------------------+\nmysql> SELECT JSON_CONTAINS_PATH(@j, \'one\', \'$.a.d\');\n+----------------------------------------+\n| JSON_CONTAINS_PATH(@j, \'one\', \'$.a.d\') |\n+----------------------------------------+\n|                                      0 |\n+----------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html'),(417,'JSON_EXTRACT',30,'Syntax:\nJSON_EXTRACT(json_doc, path[, path] ...)\n\nReturns data from a JSON document, selected from the parts of the\ndocument matched by the path arguments. Returns NULL if any argument is\nNULL or no paths locate a value in the document. An error occurs if the\njson_doc argument is not a valid JSON document or any path argument is\nnot a valid path expression.\n\nThe return value consists of all values matched by the path arguments.\nIf it is possible that those arguments could return multiple values,\nthe matched values are autowrapped as an array, in the order\ncorresponding to the paths that produced them. Otherwise, the return\nvalue is the single matched value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html\n\n','mysql> SELECT JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[1]\');\n+--------------------------------------------+\n| JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[1]\') |\n+--------------------------------------------+\n| 20                                         |\n+--------------------------------------------+\nmysql> SELECT JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[1]\', \'$[0]\');\n+----------------------------------------------------+\n| JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[1]\', \'$[0]\') |\n+----------------------------------------------------+\n| [20, 10]                                           |\n+----------------------------------------------------+\nmysql> SELECT JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[2][*]\');\n+-----------------------------------------------+\n| JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[2][*]\') |\n+-----------------------------------------------+\n| [30, 40]                                      |\n+-----------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html'),(418,'->',30,'Syntax:\ncolumn->path\n\nIn MySQL 5.7.9 and later, the -> operator serves as an alias for the\nJSON_EXTRACT() function when used with two arguments, a column\nidentifier on the left and a JSON path on the right that is evaluated\nagainst the JSON document (the column value). You can use such\nexpressions in place of column identifiers wherever they occur in SQL\nstatements.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html\n\n','mysql> SELECT c, JSON_EXTRACT(c, \"$.id\"), g\n     > FROM jemp\n     > WHERE JSON_EXTRACT(c, \"$.id\") > 1\n     > ORDER BY JSON_EXTRACT(c, \"$.name\");\n+-------------------------------+-----------+------+\n| c                             | c->\"$.id\" | g    |\n+-------------------------------+-----------+------+\n| {\"id\": \"3\", \"name\": \"Barney\"} | \"3\"       |    3 |\n| {\"id\": \"4\", \"name\": \"Betty\"}  | \"4\"       |    4 |\n| {\"id\": \"2\", \"name\": \"Wilma\"}  | \"2\"       |    2 |\n+-------------------------------+-----------+------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT c, c->\"$.id\", g\n     > FROM jemp\n     > WHERE c->\"$.id\" > 1\n     > ORDER BY c->\"$.name\";\n+-------------------------------+-----------+------+\n| c                             | c->\"$.id\" | g    |\n+-------------------------------+-----------+------+\n| {\"id\": \"3\", \"name\": \"Barney\"} | \"3\"       |    3 |\n| {\"id\": \"4\", \"name\": \"Betty\"}  | \"4\"       |    4 |\n| {\"id\": \"2\", \"name\": \"Wilma\"}  | \"2\"       |    2 |\n+-------------------------------+-----------+------+\n3 rows in set (0.00 sec)\n\nmysql> ALTER TABLE jemp ADD COLUMN n INT;\nQuery OK, 0 rows affected (0.68 sec)\nRecords: 0  Duplicates: 0  Warnings: 0\n\nmysql> UPDATE jemp SET n=1 WHERE c->\"$.id\" = \"4\";\nQuery OK, 1 row affected (0.04 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT c, c->\"$.id\", g, n\n     > FROM jemp\n     > WHERE JSON_EXTRACT(c, \"$.id\") > 1\n     > ORDER BY c->\"$.name\";\n+-------------------------------+-----------+------+------+\n| c                             | c->\"$.id\" | g    | n    |\n+-------------------------------+-----------+------+------+\n| {\"id\": \"3\", \"name\": \"Barney\"} | \"3\"       |    3 | NULL |\n| {\"id\": \"4\", \"name\": \"Betty\"}  | \"4\"       |    4 |    1 |\n| {\"id\": \"2\", \"name\": \"Wilma\"}  | \"2\"       |    2 | NULL |\n+-------------------------------+-----------+------+------+\n3 rows in set (0.00 sec)\n\nmysql> DELETE FROM jemp WHERE c->\"$.id\" = \"4\";\nQuery OK, 1 row affected (0.04 sec)\n\nmysql> SELECT c, c->\"$.id\", g, n\n     > FROM jemp\n     > WHERE JSON_EXTRACT(c, \"$.id\") > 1\n     > ORDER BY c->\"$.name\";\n+-------------------------------+-----------+------+------+\n| c                             | c->\"$.id\" | g    | n    |\n+-------------------------------+-----------+------+------+\n| {\"id\": \"3\", \"name\": \"Barney\"} | \"3\"       |    3 | NULL |\n| {\"id\": \"2\", \"name\": \"Wilma\"}  | \"2\"       |    2 | NULL |\n+-------------------------------+-----------+------+------+\n2 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html'),(419,'->>',30,'Syntax:\ncolumn->>path\n\nThis is an improved, unquoting extraction operator available in MySQL\n5.7.13 and later. Whereas the -> operator simply extracts a value, the\n->> operator in addition unquotes the extracted result. In other words,\ngiven a JSON column value column and a path expression path, the\nfollowing three expressions return the same value:\n\no JSON_UNQUOTE( JSON_EXTRACT(column, path) )\n\no JSON_UNQUOTE(column -> path)\n\no column->>path\n\nThe ->> operator can be used wherever JSON_UNQUOTE(JSON_EXTRACT())\nwould be allowed. This includes (but is not limited to) SELECT lists,\nWHERE and HAVING clauses, and ORDER BY and GROUP BY clauses.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html\n\n','mysql> SELECT * FROM jemp WHERE g > 2;\n+-------------------------------+------+\n| c                             | g    |\n+-------------------------------+------+\n| {\"id\": \"3\", \"name\": \"Barney\"} |    3 |\n| {\"id\": \"4\", \"name\": \"Betty\"}  |    4 |\n+-------------------------------+------+\n2 rows in set (0.01 sec)\n\nmysql> SELECT c->\'$.name\' AS name\n    ->     FROM jemp WHERE g > 2;\n+----------+\n| name     |\n+----------+\n| \"Barney\" |\n| \"Betty\"  |\n+----------+\n2 rows in set (0.00 sec)\n\nmysql> SELECT JSON_UNQUOTE(c->\'$.name\') AS name\n    ->     FROM jemp WHERE g > 2;\n+--------+\n| name   |\n+--------+\n| Barney |\n| Betty  |\n+--------+\n2 rows in set (0.00 sec)\n\nmysql> SELECT c->>\'$.name\' AS name\n    ->     FROM jemp WHERE g > 2;\n+--------+\n| name   |\n+--------+\n| Barney |\n| Betty  |\n+--------+\n2 rows in set (0.00 sec)\n\nmysql> CREATE TABLE tj10 (a JSON, b INT);\nQuery OK, 0 rows affected (0.26 sec)\n\nmysql> INSERT INTO tj10 VALUES\n    ->     (\'[3,10,5,\"x\",44]\', 33),\n    ->     (\'[3,10,5,17,[22,\"y\",66]]\', 0);\nQuery OK, 2 rows affected (0.04 sec)\nRecords: 2  Duplicates: 0  Warnings: 0\n\nmysql> SELECT a->\"$[3]\", a->\"$[4][1]\" FROM tj10;\n+-----------+--------------+\n| a->\"$[3]\" | a->\"$[4][1]\" |\n+-----------+--------------+\n| \"x\"       | NULL         |\n| 17        | \"y\"          |\n+-----------+--------------+\n2 rows in set (0.00 sec)\n\nmysql> SELECT a->>\"$[3]\", a->>\"$[4][1]\" FROM tj10;\n+------------+---------------+\n| a->>\"$[3]\" | a->>\"$[4][1]\" |\n+------------+---------------+\n| x          | NULL          |\n| 17         | y             |\n+------------+---------------+\n2 rows in set (0.00 sec)\n\nmysql> EXPLAIN SELECT c->>\'$.name\' AS name\n    ->     FROM jemp WHERE g > 2\\G\n*************************** 1. row ***************************\n           id: 1\n  select_type: SIMPLE\n        table: jemp\n   partitions: NULL\n         type: range\npossible_keys: i\n          key: i\n      key_len: 5\n          ref: NULL\n         rows: 2\n     filtered: 100.00\n        Extra: Using where\n1 row in set, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS\\G\n*************************** 1. row ***************************\n  Level: Note\n   Code: 1003\nMessage: /* select#1 */ select\njson_unquote(json_extract(`jtest`.`jemp`.`c`,\'$.name\')) AS `name` from\n`jtest`.`jemp` where (`jtest`.`jemp`.`g` > 2)\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html'),(420,'JSON_KEYS',30,'Syntax:\nJSON_KEYS(json_doc[, path])\n\nReturns the keys from the top-level value of a JSON object as a JSON\narray, or, if a path argument is given, the top-level keys from the\nselected path. Returns NULL if any argument is NULL, the json_doc\nargument is not an object, or path, if given, does not locate an\nobject. An error occurs if the json_doc argument is not a valid JSON\ndocument or the path argument is not a valid path expression or\ncontains a * or ** wildcard.\n\nThe result array is empty if the selected object is empty. If the\ntop-level value has nested subobjects, the return value does not\ninclude keys from those subobjects.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html\n\n','mysql> SELECT JSON_KEYS(\'{\"a\": 1, \"b\": {\"c\": 30}}\');\n+---------------------------------------+\n| JSON_KEYS(\'{\"a\": 1, \"b\": {\"c\": 30}}\') |\n+---------------------------------------+\n| [\"a\", \"b\"]                            |\n+---------------------------------------+\nmysql> SELECT JSON_KEYS(\'{\"a\": 1, \"b\": {\"c\": 30}}\', \'$.b\');\n+----------------------------------------------+\n| JSON_KEYS(\'{\"a\": 1, \"b\": {\"c\": 30}}\', \'$.b\') |\n+----------------------------------------------+\n| [\"c\"]                                        |\n+----------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html'),(421,'JSON_SEARCH',30,'Syntax:\nJSON_SEARCH(json_doc, one_or_all, search_str[, escape_char[, path]\n...])\n\nReturns the path to the given string within a JSON document. Returns\nNULL if any of the json_doc, search_str, or path arguments are NULL; no\npath exists within the document; or search_str is not found. An error\noccurs if the json_doc argument is not a valid JSON document, any path\nargument is not a valid path expression, one_or_all is not \'one\' or\n\'all\', or escape_char is not a constant expression.\n\nThe one_or_all argument affects the search as follows:\n\no \'one\': The search terminates after the first match and returns one\n  path string. It is undefined which match is considered first.\n\no \'all\': The search returns all matching path strings such that no\n  duplicate paths are included. If there are multiple strings, they are\n  autowrapped as an array. The order of the array elements is\n  undefined.\n\nWithin the search_str search string argument, the % and _ characters\nwork as for the LIKE operator: % matches any number of characters\n(including zero characters), and _ matches exactly one character.\n\nTo specify a literal % or _ character in the search string, precede it\nby the escape character. The default is \\ if the escape_char argument\nis missing or NULL. Otherwise, escape_char must be a constant that is\nempty or one character.\n\nFor more information about matching and escape character behavior, see\nthe description of LIKE in\nhttps://dev.mysql.com/doc/refman/5.7/en/string-comparison-functions.htm\nl. For escape character handling, a difference from the LIKE behavior\nis that the escape character for JSON_SEARCH() must evaluate to a\nconstant at compile time, not just at execution time. For example, if\nJSON_SEARCH() is used in a prepared statement and the escape_char\nargument is supplied using a ? parameter, the parameter value might be\nconstant at execution time, but is not at compile time.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html\n\n','mysql> SET @j = \'[\"abc\", [{\"k\": \"10\"}, \"def\"], {\"x\":\"abc\"}, {\"y\":\"bcd\"}]\';\n\nmysql> SELECT JSON_SEARCH(@j, \'one\', \'abc\');\n+-------------------------------+\n| JSON_SEARCH(@j, \'one\', \'abc\') |\n+-------------------------------+\n| \"$[0]\"                        |\n+-------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'abc\');\n+-------------------------------+\n| JSON_SEARCH(@j, \'all\', \'abc\') |\n+-------------------------------+\n| [\"$[0]\", \"$[2].x\"]            |\n+-------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'ghi\');\n+-------------------------------+\n| JSON_SEARCH(@j, \'all\', \'ghi\') |\n+-------------------------------+\n| NULL                          |\n+-------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\');\n+------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\') |\n+------------------------------+\n| \"$[1][0].k\"                  |\n+------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$\');\n+-----------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$\') |\n+-----------------------------------------+\n| \"$[1][0].k\"                             |\n+-----------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[*]\');\n+--------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[*]\') |\n+--------------------------------------------+\n| \"$[1][0].k\"                                |\n+--------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$**.k\');\n+---------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$**.k\') |\n+---------------------------------------------+\n| \"$[1][0].k\"                                 |\n+---------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[*][0].k\');\n+-------------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[*][0].k\') |\n+-------------------------------------------------+\n| \"$[1][0].k\"                                     |\n+-------------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[1]\');\n+--------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[1]\') |\n+--------------------------------------------+\n| \"$[1][0].k\"                                |\n+--------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[1][0]\');\n+-----------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[1][0]\') |\n+-----------------------------------------------+\n| \"$[1][0].k\"                                   |\n+-----------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'abc\', NULL, \'$[2]\');\n+---------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'abc\', NULL, \'$[2]\') |\n+---------------------------------------------+\n| \"$[2].x\"                                    |\n+---------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%a%\');\n+-------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%a%\') |\n+-------------------------------+\n| [\"$[0]\", \"$[2].x\"]            |\n+-------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\');\n+-------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\') |\n+-------------------------------+\n| [\"$[0]\", \"$[2].x\", \"$[3].y\"]  |\n+-------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[0]\');\n+---------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[0]\') |\n+---------------------------------------------+\n| \"$[0]\"                                      |\n+---------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[2]\');\n+---------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[2]\') |\n+---------------------------------------------+\n| \"$[2].x\"                                    |\n+---------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[1]\');\n+---------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[1]\') |\n+---------------------------------------------+\n| NULL                                        |\n+---------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\', \'\', \'$[1]\');\n+-------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\', \'\', \'$[1]\') |\n+-------------------------------------------+\n| NULL                                      |\n+-------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\', \'\', \'$[3]\');\n+-------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\', \'\', \'$[3]\') |\n+-------------------------------------------+\n| \"$[3].y\"                                  |\n+-------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html'),(422,'JSON_APPEND',30,'Syntax:\nJSON_APPEND(json_doc, path, val[, path, val] ...)\n\nAppends values to the end of the indicated arrays within a JSON\ndocument and returns the result. This function was renamed to\nJSON_ARRAY_APPEND() in MySQL 5.7.9; the alias JSON_APPEND() is now\ndeprecated in MySQL 5.7, and is removed in MySQL 8.0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(423,'JSON_ARRAY_APPEND',30,'Syntax:\nJSON_ARRAY_APPEND(json_doc, path, val[, path, val] ...)\n\nAppends values to the end of the indicated arrays within a JSON\ndocument and returns the result. Returns NULL if any argument is NULL.\nAn error occurs if the json_doc argument is not a valid JSON document\nor any path argument is not a valid path expression or contains a * or\n** wildcard.\n\nThe path-value pairs are evaluated left to right. The document produced\nby evaluating one pair becomes the new value against which the next\npair is evaluated.\n\nIf a path selects a scalar or object value, that value is autowrapped\nwithin an array and the new value is added to that array. Pairs for\nwhich the path does not identify any value in the JSON document are\nignored.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SET @j = \'[\"a\", [\"b\", \"c\"], \"d\"]\';\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$[1]\', 1);\n+----------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$[1]\', 1) |\n+----------------------------------+\n| [\"a\", [\"b\", \"c\", 1], \"d\"]        |\n+----------------------------------+\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$[0]\', 2);\n+----------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$[0]\', 2) |\n+----------------------------------+\n| [[\"a\", 2], [\"b\", \"c\"], \"d\"]      |\n+----------------------------------+\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$[1][0]\', 3);\n+-------------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$[1][0]\', 3) |\n+-------------------------------------+\n| [\"a\", [[\"b\", 3], \"c\"], \"d\"]         |\n+-------------------------------------+\n\nmysql> SET @j = \'{\"a\": 1, \"b\": [2, 3], \"c\": 4}\';\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$.b\', \'x\');\n+------------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$.b\', \'x\')  |\n+------------------------------------+\n| {\"a\": 1, \"b\": [2, 3, \"x\"], \"c\": 4} |\n+------------------------------------+\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$.c\', \'y\');\n+--------------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$.c\', \'y\')    |\n+--------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": [4, \"y\"]} |\n+--------------------------------------+\n\nmysql> SET @j = \'{\"a\": 1}\';\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$\', \'z\');\n+---------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$\', \'z\') |\n+---------------------------------+\n| [{\"a\": 1}, \"z\"]                 |\n+---------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(424,'JSON_ARRAY_INSERT',30,'Syntax:\nJSON_ARRAY_INSERT(json_doc, path, val[, path, val] ...)\n\nUpdates a JSON document, inserting into an array within the document\nand returning the modified document. Returns NULL if any argument is\nNULL. An error occurs if the json_doc argument is not a valid JSON\ndocument or any path argument is not a valid path expression or\ncontains a * or ** wildcard or does not end with an array element\nidentifier.\n\nThe path-value pairs are evaluated left to right. The document produced\nby evaluating one pair becomes the new value against which the next\npair is evaluated.\n\nPairs for which the path does not identify any array in the JSON\ndocument are ignored. If a path identifies an array element, the\ncorresponding value is inserted at that element position, shifting any\nfollowing values to the right. If a path identifies an array position\npast the end of an array, the value is inserted at the end of the\narray.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SET @j = \'[\"a\", {\"b\": [1, 2]}, [3, 4]]\';\nmysql> SELECT JSON_ARRAY_INSERT(@j, \'$[1]\', \'x\');\n+------------------------------------+\n| JSON_ARRAY_INSERT(@j, \'$[1]\', \'x\') |\n+------------------------------------+\n| [\"a\", \"x\", {\"b\": [1, 2]}, [3, 4]]  |\n+------------------------------------+\nmysql> SELECT JSON_ARRAY_INSERT(@j, \'$[100]\', \'x\');\n+--------------------------------------+\n| JSON_ARRAY_INSERT(@j, \'$[100]\', \'x\') |\n+--------------------------------------+\n| [\"a\", {\"b\": [1, 2]}, [3, 4], \"x\"]    |\n+--------------------------------------+\nmysql> SELECT JSON_ARRAY_INSERT(@j, \'$[1].b[0]\', \'x\');\n+-----------------------------------------+\n| JSON_ARRAY_INSERT(@j, \'$[1].b[0]\', \'x\') |\n+-----------------------------------------+\n| [\"a\", {\"b\": [\"x\", 1, 2]}, [3, 4]]       |\n+-----------------------------------------+\nmysql> SELECT JSON_ARRAY_INSERT(@j, \'$[2][1]\', \'y\');\n+---------------------------------------+\n| JSON_ARRAY_INSERT(@j, \'$[2][1]\', \'y\') |\n+---------------------------------------+\n| [\"a\", {\"b\": [1, 2]}, [3, \"y\", 4]]     |\n+---------------------------------------+\nmysql> SELECT JSON_ARRAY_INSERT(@j, \'$[0]\', \'x\', \'$[2][1]\', \'y\');\n+----------------------------------------------------+\n| JSON_ARRAY_INSERT(@j, \'$[0]\', \'x\', \'$[2][1]\', \'y\') |\n+----------------------------------------------------+\n| [\"x\", \"a\", {\"b\": [1, 2]}, [3, 4]]                  |\n+----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(425,'JSON_INSERT',30,'Syntax:\nJSON_INSERT(json_doc, path, val[, path, val] ...)\n\nInserts data into a JSON document and returns the result. Returns NULL\nif any argument is NULL. An error occurs if the json_doc argument is\nnot a valid JSON document or any path argument is not a valid path\nexpression or contains a * or ** wildcard.\n\nThe path-value pairs are evaluated left to right. The document produced\nby evaluating one pair becomes the new value against which the next\npair is evaluated.\n\nA path-value pair for an existing path in the document is ignored and\ndoes not overwrite the existing document value. A path-value pair for a\nnonexisting path in the document adds the value to the document if the\npath identifies one of these types of values:\n\no A member not present in an existing object. The member is added to\n  the object and associated with the new value.\n\no A position past the end of an existing array. The array is extended\n  with the new value. If the existing value is not an array, it is\n  autowrapped as an array, then extended with the new value.\n\nOtherwise, a path-value pair for a nonexisting path in the document is\nignored and has no effect.\n\nFor a comparison of JSON_INSERT(), JSON_REPLACE(), and JSON_SET(), see\nthe discussion of JSON_SET().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SET @j = \'{ \"a\": 1, \"b\": [2, 3]}\';\nmysql> SELECT JSON_INSERT(@j, \'$.a\', 10, \'$.c\', \'[true, false]\');\n+----------------------------------------------------+\n| JSON_INSERT(@j, \'$.a\', 10, \'$.c\', \'[true, false]\') |\n+----------------------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": \"[true, false]\"}        |\n+----------------------------------------------------+\n\nmysql> SELECT JSON_INSERT(@j, \'$.a\', 10, \'$.c\', CAST(\'[true, false]\' AS JSON));\n+------------------------------------------------------------------+\n| JSON_INSERT(@j, \'$.a\', 10, \'$.c\', CAST(\'[true, false]\' AS JSON)) |\n+------------------------------------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": [true, false]}                        |\n+------------------------------------------------------------------+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(426,'JSON_MERGE',30,'Syntax:\nJSON_MERGE(json_doc, json_doc[, json_doc] ...)\n\nMerges two or more JSON documents. Synonym for JSON_MERGE_PRESERVE();\ndeprecated in MySQL 5.7.22 and subject to removal in a future release.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SELECT JSON_MERGE(\'[1, 2]\', \'[true, false]\');\n+---------------------------------------+\n| JSON_MERGE(\'[1, 2]\', \'[true, false]\') |\n+---------------------------------------+\n| [1, 2, true, false]                   |\n+---------------------------------------+\n1 row in set, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS\\G\n*************************** 1. row ***************************\n  Level: Warning\n   Code: 1287\nMessage: \'JSON_MERGE\' is deprecated and will be removed in a future release. \\\n Please use JSON_MERGE_PRESERVE/JSON_MERGE_PATCH instead\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(427,'JSON_MERGE_PATCH()',30,'Syntax:\nJSON_MERGE_PATCH(json_doc, json_doc[, json_doc] ...)\n\nPerforms an RFC 7396 (https://tools.ietf.org/html/rfc7396) compliant\nmerge of two or more JSON documents and returns the merged result,\nwithout preserving members having duplicate keys. Raises an error if at\nleast one of the documents passed as arguments to this function is not\nvalid.\n\n*Note*:\n\nFor an explanation and example of the differences between this function\nand JSON_MERGE_PRESERVE(), see\nhttps://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.htm\nl#json-merge-patch-json-merge-preserve-compared.\n\nJSON_MERGE_PATCH() performs a merge as follows:\n\n1. If the first argument is not an object, the result of the merge is\n   the same as if an empty object had been merged with the second\n   argument.\n\n2. If the second argument is not an object, the result of the merge is\n   the second argument.\n\n3. If both arguments are objects, the result of the merge is an object\n   with the following members:\n\n  o All members of the first object which do not have a corresponding\n    member with the same key in the second object.\n\n  o All members of the second object which do not have a corresponding\n    key in the first object, and whose value is not the JSON null\n    literal.\n\n  o All members with a key that exists in both the first and the second\n    object, and whose value in the second object is not the JSON null\n    literal. The values of these members are the results of recursively\n    merging the value in the first object with the value in the second\n    object.\n\nFor additional information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/json.html#json-normalization.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SELECT JSON_MERGE_PATCH(\'[1, 2]\', \'[true, false]\');\n+---------------------------------------------+\n| JSON_MERGE_PATCH(\'[1, 2]\', \'[true, false]\') |\n+---------------------------------------------+\n| [true, false]                               |\n+---------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'{\"name\": \"x\"}\', \'{\"id\": 47}\');\n+-------------------------------------------------+\n| JSON_MERGE_PATCH(\'{\"name\": \"x\"}\', \'{\"id\": 47}\') |\n+-------------------------------------------------+\n| {\"id\": 47, \"name\": \"x\"}                         |\n+-------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'1\', \'true\');\n+-------------------------------+\n| JSON_MERGE_PATCH(\'1\', \'true\') |\n+-------------------------------+\n| true                          |\n+-------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'[1, 2]\', \'{\"id\": 47}\');\n+------------------------------------------+\n| JSON_MERGE_PATCH(\'[1, 2]\', \'{\"id\": 47}\') |\n+------------------------------------------+\n| {\"id\": 47}                               |\n+------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'{ \"a\": 1, \"b\":2 }\',\n     >     \'{ \"a\": 3, \"c\":4 }\');\n+-----------------------------------------------------------+\n| JSON_MERGE_PATCH(\'{ \"a\": 1, \"b\":2 }\',\'{ \"a\": 3, \"c\":4 }\') |\n+-----------------------------------------------------------+\n| {\"a\": 3, \"b\": 2, \"c\": 4}                                  |\n+-----------------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'{ \"a\": 1, \"b\":2 }\',\'{ \"a\": 3, \"c\":4 }\',\n     >     \'{ \"a\": 5, \"d\":6 }\');\n+-------------------------------------------------------------------------------+\n| JSON_MERGE_PATCH(\'{ \"a\": 1, \"b\":2 }\',\'{ \"a\": 3, \"c\":4 }\',\'{ \"a\": 5, \"d\":6 }\') |\n+-------------------------------------------------------------------------------+\n| {\"a\": 5, \"b\": 2, \"c\": 4, \"d\": 6}                                              |\n+-------------------------------------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'{\"a\":1, \"b\":2}\', \'{\"b\":null}\');\n+--------------------------------------------------+\n| JSON_MERGE_PATCH(\'{\"a\":1, \"b\":2}\', \'{\"b\":null}\') |\n+--------------------------------------------------+\n| {\"a\": 1}                                         |\n+--------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'{\"a\":{\"x\":1}}\', \'{\"a\":{\"y\":2}}\');\n+----------------------------------------------------+\n| JSON_MERGE_PATCH(\'{\"a\":{\"x\":1}}\', \'{\"a\":{\"y\":2}}\') |\n+----------------------------------------------------+\n| {\"a\": {\"x\": 1, \"y\": 2}}                            |\n+----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(428,'JSON_MERGE_PRESERVE()',30,'Syntax:\nJSON_MERGE_PRESERVE(json_doc, json_doc[, json_doc] ...)\n\nMerges two or more JSON documents and returns the merged result.\nReturns NULL if any argument is NULL. An error occurs if any argument\nis not a valid JSON document.\n\nMerging takes place according to the following rules. For additional\ninformation, see\nhttps://dev.mysql.com/doc/refman/5.7/en/json.html#json-normalization.\n\no Adjacent arrays are merged to a single array.\n\no Adjacent objects are merged to a single object.\n\no A scalar value is autowrapped as an array and merged as an array.\n\no An adjacent array and object are merged by autowrapping the object as\n  an array and merging the two arrays.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SELECT JSON_MERGE_PRESERVE(\'[1, 2]\', \'[true, false]\');\n+------------------------------------------------+\n| JSON_MERGE_PRESERVE(\'[1, 2]\', \'[true, false]\') |\n+------------------------------------------------+\n| [1, 2, true, false]                            |\n+------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PRESERVE(\'{\"name\": \"x\"}\', \'{\"id\": 47}\');\n+----------------------------------------------------+\n| JSON_MERGE_PRESERVE(\'{\"name\": \"x\"}\', \'{\"id\": 47}\') |\n+----------------------------------------------------+\n| {\"id\": 47, \"name\": \"x\"}                            |\n+----------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PRESERVE(\'1\', \'true\');\n+----------------------------------+\n| JSON_MERGE_PRESERVE(\'1\', \'true\') |\n+----------------------------------+\n| [1, true]                        |\n+----------------------------------+\n\nmysql> SELECT JSON_MERGE_PRESERVE(\'[1, 2]\', \'{\"id\": 47}\');\n+---------------------------------------------+\n| JSON_MERGE_PRESERVE(\'[1, 2]\', \'{\"id\": 47}\') |\n+---------------------------------------------+\n| [1, 2, {\"id\": 47}]                          |\n+---------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PRESERVE(\'{ \"a\": 1, \"b\": 2 }\',\n     >    \'{ \"a\": 3, \"c\": 4 }\');\n+--------------------------------------------------------------+\n| JSON_MERGE_PRESERVE(\'{ \"a\": 1, \"b\": 2 }\',\'{ \"a\": 3, \"c\":4 }\') |\n+--------------------------------------------------------------+\n| {\"a\": [1, 3], \"b\": 2, \"c\": 4}                                |\n+--------------------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PRESERVE(\'{ \"a\": 1, \"b\": 2 }\',\'{ \"a\": 3, \"c\": 4 }\',\n     >    \'{ \"a\": 5, \"d\": 6 }\');\n+----------------------------------------------------------------------------------+\n| JSON_MERGE_PRESERVE(\'{ \"a\": 1, \"b\": 2 }\',\'{ \"a\": 3, \"c\": 4 }\',\'{ \"a\": 5, \"d\": 6 }\') |\n+----------------------------------------------------------------------------------+\n| {\"a\": [1, 3, 5], \"b\": 2, \"c\": 4, \"d\": 6}                                         |\n+----------------------------------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(429,'JSON_REMOVE',30,'Syntax:\nJSON_REMOVE(json_doc, path[, path] ...)\n\nRemoves data from a JSON document and returns the result. Returns NULL\nif any argument is NULL. An error occurs if the json_doc argument is\nnot a valid JSON document or any path argument is not a valid path\nexpression or is $ or contains a * or ** wildcard.\n\nThe path arguments are evaluated left to right. The document produced\nby evaluating one path becomes the new value against which the next\npath is evaluated.\n\nIt is not an error if the element to be removed does not exist in the\ndocument; in that case, the path does not affect the document.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SET @j = \'[\"a\", [\"b\", \"c\"], \"d\"]\';\nmysql> SELECT JSON_REMOVE(@j, \'$[1]\');\n+-------------------------+\n| JSON_REMOVE(@j, \'$[1]\') |\n+-------------------------+\n| [\"a\", \"d\"]              |\n+-------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(430,'JSON_REPLACE',30,'Syntax:\nJSON_REPLACE(json_doc, path, val[, path, val] ...)\n\nReplaces existing values in a JSON document and returns the result.\nReturns NULL if any argument is NULL. An error occurs if the json_doc\nargument is not a valid JSON document or any path argument is not a\nvalid path expression or contains a * or ** wildcard.\n\nThe path-value pairs are evaluated left to right. The document produced\nby evaluating one pair becomes the new value against which the next\npair is evaluated.\n\nA path-value pair for an existing path in the document overwrites the\nexisting document value with the new value. A path-value pair for a\nnonexisting path in the document is ignored and has no effect.\n\nFor a comparison of JSON_INSERT(), JSON_REPLACE(), and JSON_SET(), see\nthe discussion of JSON_SET().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SET @j = \'{ \"a\": 1, \"b\": [2, 3]}\';\nmysql> SELECT JSON_REPLACE(@j, \'$.a\', 10, \'$.c\', \'[true, false]\');\n+-----------------------------------------------------+\n| JSON_REPLACE(@j, \'$.a\', 10, \'$.c\', \'[true, false]\') |\n+-----------------------------------------------------+\n| {\"a\": 10, \"b\": [2, 3]}                              |\n+-----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(431,'JSON_SET',30,'Syntax:\nJSON_SET(json_doc, path, val[, path, val] ...)\n\nInserts or updates data in a JSON document and returns the result.\nReturns NULL if any argument is NULL or path, if given, does not locate\nan object. An error occurs if the json_doc argument is not a valid JSON\ndocument or any path argument is not a valid path expression or\ncontains a * or ** wildcard.\n\nThe path-value pairs are evaluated left to right. The document produced\nby evaluating one pair becomes the new value against which the next\npair is evaluated.\n\nA path-value pair for an existing path in the document overwrites the\nexisting document value with the new value. A path-value pair for a\nnonexisting path in the document adds the value to the document if the\npath identifies one of these types of values:\n\no A member not present in an existing object. The member is added to\n  the object and associated with the new value.\n\no A position past the end of an existing array. The array is extended\n  with the new value. If the existing value is not an array, it is\n  autowrapped as an array, then extended with the new value.\n\nOtherwise, a path-value pair for a nonexisting path in the document is\nignored and has no effect.\n\nThe JSON_SET(), JSON_INSERT(), and JSON_REPLACE() functions are\nrelated:\n\no JSON_SET() replaces existing values and adds nonexisting values.\n\no JSON_INSERT() inserts values without replacing existing values.\n\no JSON_REPLACE() replaces only existing values.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SET @j = \'{ \"a\": 1, \"b\": [2, 3]}\';\nmysql> SELECT JSON_SET(@j, \'$.a\', 10, \'$.c\', \'[true, false]\');\n+-------------------------------------------------+\n| JSON_SET(@j, \'$.a\', 10, \'$.c\', \'[true, false]\') |\n+-------------------------------------------------+\n| {\"a\": 10, \"b\": [2, 3], \"c\": \"[true, false]\"}    |\n+-------------------------------------------------+\nmysql> SELECT JSON_INSERT(@j, \'$.a\', 10, \'$.c\', \'[true, false]\');\n+----------------------------------------------------+\n| JSON_INSERT(@j, \'$.a\', 10, \'$.c\', \'[true, false]\') |\n+----------------------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": \"[true, false]\"}        |\n+----------------------------------------------------+\nmysql> SELECT JSON_REPLACE(@j, \'$.a\', 10, \'$.c\', \'[true, false]\');\n+-----------------------------------------------------+\n| JSON_REPLACE(@j, \'$.a\', 10, \'$.c\', \'[true, false]\') |\n+-----------------------------------------------------+\n| {\"a\": 10, \"b\": [2, 3]}                              |\n+-----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(432,'JSON_UNQUOTE',30,'Syntax:\nJSON_UNQUOTE(json_val)\n\nUnquotes JSON value and returns the result as a utf8mb4 string. Returns\nNULL if the argument is NULL. An error occurs if the value starts and\nends with double quotes but is not a valid JSON string literal.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SET @j = \'\"abc\"\';\nmysql> SELECT @j, JSON_UNQUOTE(@j);\n+-------+------------------+\n| @j    | JSON_UNQUOTE(@j) |\n+-------+------------------+\n| \"abc\" | abc              |\n+-------+------------------+\nmysql> SET @j = \'[1, 2, 3]\';\nmysql> SELECT @j, JSON_UNQUOTE(@j);\n+-----------+------------------+\n| @j        | JSON_UNQUOTE(@j) |\n+-----------+------------------+\n| [1, 2, 3] | [1, 2, 3]        |\n+-----------+------------------+\n\nmysql> SELECT @@sql_mode;\n+------------+\n| @@sql_mode |\n+------------+\n|            |\n+------------+\n\nmysql> SELECT JSON_UNQUOTE(\'\"\\\\t\\\\u0032\"\');\n+------------------------------+\n| JSON_UNQUOTE(\'\"\\\\t\\\\u0032\"\') |\n+------------------------------+\n|       2                           |\n+------------------------------+\n\nmysql> SET @@sql_mode = \'NO_BACKSLASH_ESCAPES\';\nmysql> SELECT JSON_UNQUOTE(\'\"\\\\t\\\\u0032\"\');\n+------------------------------+\n| JSON_UNQUOTE(\'\"\\\\t\\\\u0032\"\') |\n+------------------------------+\n| \\t\\u0032                     |\n+------------------------------+\n\nmysql> SELECT JSON_UNQUOTE(\'\"\\t\\u0032\"\');\n+----------------------------+\n| JSON_UNQUOTE(\'\"\\t\\u0032\"\') |\n+----------------------------+\n|       2                         |\n+----------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(433,'JSON_DEPTH',30,'Syntax:\nJSON_DEPTH(json_doc)\n\nReturns the maximum depth of a JSON document. Returns NULL if the\nargument is NULL. An error occurs if the argument is not a valid JSON\ndocument.\n\nAn empty array, empty object, or scalar value has depth 1. A nonempty\narray containing only elements of depth 1 or nonempty object containing\nonly member values of depth 1 has depth 2. Otherwise, a JSON document\nhas depth greater than 2.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html\n\n','mysql> SELECT JSON_DEPTH(\'{}\'), JSON_DEPTH(\'[]\'), JSON_DEPTH(\'true\');\n+------------------+------------------+--------------------+\n| JSON_DEPTH(\'{}\') | JSON_DEPTH(\'[]\') | JSON_DEPTH(\'true\') |\n+------------------+------------------+--------------------+\n|                1 |                1 |                  1 |\n+------------------+------------------+--------------------+\nmysql> SELECT JSON_DEPTH(\'[10, 20]\'), JSON_DEPTH(\'[[], {}]\');\n+------------------------+------------------------+\n| JSON_DEPTH(\'[10, 20]\') | JSON_DEPTH(\'[[], {}]\') |\n+------------------------+------------------------+\n|                      2 |                      2 |\n+------------------------+------------------------+\nmysql> SELECT JSON_DEPTH(\'[10, {\"a\": 20}]\');\n+-------------------------------+\n| JSON_DEPTH(\'[10, {\"a\": 20}]\') |\n+-------------------------------+\n|                             3 |\n+-------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html'),(434,'JSON_LENGTH',30,'Syntax:\nJSON_LENGTH(json_doc[, path])\n\nReturns the length of a JSON document, or, if a path argument is given,\nthe length of the value within the document identified by the path.\nReturns NULL if any argument is NULL or the path argument does not\nidentify a value in the document. An error occurs if the json_doc\nargument is not a valid JSON document or the path argument is not a\nvalid path expression or contains a * or ** wildcard.\n\nThe length of a document is determined as follows:\n\no The length of a scalar is 1.\n\no The length of an array is the number of array elements.\n\no The length of an object is the number of object members.\n\no The length does not count the length of nested arrays or objects.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html\n\n','mysql> SELECT JSON_LENGTH(\'[1, 2, {\"a\": 3}]\');\n+---------------------------------+\n| JSON_LENGTH(\'[1, 2, {\"a\": 3}]\') |\n+---------------------------------+\n|                               3 |\n+---------------------------------+\nmysql> SELECT JSON_LENGTH(\'{\"a\": 1, \"b\": {\"c\": 30}}\');\n+-----------------------------------------+\n| JSON_LENGTH(\'{\"a\": 1, \"b\": {\"c\": 30}}\') |\n+-----------------------------------------+\n|                                       2 |\n+-----------------------------------------+\nmysql> SELECT JSON_LENGTH(\'{\"a\": 1, \"b\": {\"c\": 30}}\', \'$.b\');\n+------------------------------------------------+\n| JSON_LENGTH(\'{\"a\": 1, \"b\": {\"c\": 30}}\', \'$.b\') |\n+------------------------------------------------+\n|                                              1 |\n+------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html'),(435,'JSON_TYPE',30,'Syntax:\nJSON_TYPE(json_val)\n\nReturns a utf8mb4 string indicating the type of a JSON value. This can\nbe an object, an array, or a scalar type, as shown here:\n\nmysql> SET @j = \'{\"a\": [10, true]}\';\nmysql> SELECT JSON_TYPE(@j);\n+---------------+\n| JSON_TYPE(@j) |\n+---------------+\n| OBJECT        |\n+---------------+\nmysql> SELECT JSON_TYPE(JSON_EXTRACT(@j, \'$.a\'));\n+------------------------------------+\n| JSON_TYPE(JSON_EXTRACT(@j, \'$.a\')) |\n+------------------------------------+\n| ARRAY                              |\n+------------------------------------+\nmysql> SELECT JSON_TYPE(JSON_EXTRACT(@j, \'$.a[0]\'));\n+---------------------------------------+\n| JSON_TYPE(JSON_EXTRACT(@j, \'$.a[0]\')) |\n+---------------------------------------+\n| INTEGER                               |\n+---------------------------------------+\nmysql> SELECT JSON_TYPE(JSON_EXTRACT(@j, \'$.a[1]\'));\n+---------------------------------------+\n| JSON_TYPE(JSON_EXTRACT(@j, \'$.a[1]\')) |\n+---------------------------------------+\n| BOOLEAN                               |\n+---------------------------------------+\n\nJSON_TYPE() returns NULL if the argument is NULL:\n\nmysql> SELECT JSON_TYPE(NULL);\n+-----------------+\n| JSON_TYPE(NULL) |\n+-----------------+\n| NULL            |\n+-----------------+\n\nAn error occurs if the argument is not a valid JSON value:\n\nmysql> SELECT JSON_TYPE(1);\nERROR 3146 (22032): Invalid data type for JSON data in argument 1\nto function json_type; a JSON string or JSON type is required.\n\nFor a non-NULL, non-error result, the following list describes the\npossible JSON_TYPE() return values:\n\no Purely JSON types:\n\n  o OBJECT: JSON objects\n\n  o ARRAY: JSON arrays\n\n  o BOOLEAN: The JSON true and false literals\n\n  o NULL: The JSON null literal\n\no Numeric types:\n\n  o INTEGER: MySQL TINYINT, SMALLINT, MEDIUMINT and INT and BIGINT\n    scalars\n\n  o DOUBLE: MySQL DOUBLE FLOAT scalars\n\n  o DECIMAL: MySQL DECIMAL and NUMERIC scalars\n\no Temporal types:\n\n  o DATETIME: MySQL DATETIME and TIMESTAMP scalars\n\n  o DATE: MySQL DATE scalars\n\n  o TIME: MySQL TIME scalars\n\no String types:\n\n  o STRING: MySQL utf8 character type scalars: CHAR, VARCHAR, TEXT,\n    ENUM, and SET\n\no Binary types:\n\n  o BLOB: MySQL binary type scalars: BINARY, VARBINARY, BLOB\n\n  o BIT: MySQL BIT scalars\n\no All other types:\n\n  o OPAQUE (raw bits)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html'),(436,'JSON_VALID',30,'Syntax:\nJSON_VALID(val)\n\nReturns 0 or 1 to indicate whether a value is valid JSON. Returns NULL\nif the argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html\n\n','mysql> SELECT JSON_VALID(\'{\"a\": 1}\');\n+------------------------+\n| JSON_VALID(\'{\"a\": 1}\') |\n+------------------------+\n|                      1 |\n+------------------------+\nmysql> SELECT JSON_VALID(\'hello\'), JSON_VALID(\'\"hello\"\');\n+---------------------+-----------------------+\n| JSON_VALID(\'hello\') | JSON_VALID(\'\"hello\"\') |\n+---------------------+-----------------------+\n|                   0 |                     1 |\n+---------------------+-----------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html'),(437,'JSON_PRETTY',30,'JSON_PRETTY(json_val)\n\nProvides pretty-printing of JSON values similar to that implemented in\nPHP and by other languages and database systems. The value supplied\nmust be a JSON value or a valid string representation of a JSON value.\nExtraneous whitespaces and newlines present in this value have no\neffect on the output. For a NULL value, the function returns NULL. If\nthe value is not a JSON document, or if it cannot be parsed as one, the\nfunction fails with an error.\n\nFormatting of the output from this function adheres to the following\nrules:\n\no Each array element or object member appears on a separate line,\n  indented by one additional level as compared to its parent.\n\no Each level of indentation adds two leading spaces.\n\no A comma separating individual array elements or object members is\n  printed before the newline that separates the two elements or\n  members.\n\no The key and the value of an object member are separated by a colon\n  followed by a space (\': \').\n\no An empty object or array is printed on a single line. No space is\n  printed between the opening and closing brace.\n\no Special characters in string scalars and key names are escaped\n  employing the same rules used by the JSON_QUOTE() function.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-utility-functions.html\n\n','mysql> SELECT JSON_PRETTY(\'123\'); # scalar\n+--------------------+\n| JSON_PRETTY(\'123\') |\n+--------------------+\n| 123                |\n+--------------------+\n\nmysql> SELECT JSON_PRETTY(\"[1,3,5]\"); # array\n+------------------------+\n| JSON_PRETTY(\"[1,3,5]\") |\n+------------------------+\n| [\n  1,\n  3,\n  5\n]      |\n+------------------------+\n\nmysql> SELECT JSON_PRETTY(\'{\"a\":\"10\",\"b\":\"15\",\"x\":\"25\"}\'); # object\n+---------------------------------------------+\n| JSON_PRETTY(\'{\"a\":\"10\",\"b\":\"15\",\"x\":\"25\"}\') |\n+---------------------------------------------+\n| {\n  \"a\": \"10\",\n  \"b\": \"15\",\n  \"x\": \"25\"\n}   |\n+---------------------------------------------+\n\nmysql> SELECT JSON_PRETTY(\'[\"a\",1,{\"key1\":\n     >    \"value1\"},\"5\",     \"77\" ,\n     >       {\"key2\":[\"value3\",\"valueX\",\n     > \"valueY\"]},\"j\", \"2\"   ]\')\\G  # nested arrays and objects\n*************************** 1. row ***************************\nJSON_PRETTY(\'[\"a\",1,{\"key1\":\n             \"value1\"},\"5\",     \"77\" ,\n                {\"key2\":[\"value3\",\"valuex\",\n          \"valuey\"]},\"j\", \"2\"   ]\'): [\n  \"a\",\n  1,\n  {\n    \"key1\": \"value1\"\n  },\n  \"5\",\n  \"77\",\n  {\n    \"key2\": [\n      \"value3\",\n      \"valuex\",\n      \"valuey\"\n    ]\n  },\n  \"j\",\n  \"2\"\n]\n','https://dev.mysql.com/doc/refman/5.7/en/json-utility-functions.html'),(438,'JSON_STORAGE_SIZE',30,'JSON_STORAGE_SIZE(json_val)\n\nThis function returns the number of bytes used to store the binary\nrepresentation of a JSON document. When the argument is a JSON column,\nthis is the space used to store the JSON document. json_val must be a\nvalid JSON document or a string which can be parsed as one. In the case\nwhere it is string, the function returns the amount of storage space in\nthe JSON binary representation that is created by parsing the string as\nJSON and converting it to binary. It returns NULL if the argument is\nNULL.\n\nAn error results when json_val is not NULL, and is not---or cannot be\nsuccessfully parsed as---a JSON document.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-utility-functions.html\n\n','mysql> CREATE TABLE jtable (jcol JSON);\nQuery OK, 0 rows affected (0.42 sec)\n\nmysql> INSERT INTO jtable VALUES\n    ->     (\'{\"a\": 1000, \"b\": \"wxyz\", \"c\": \"[1, 3, 5, 7]\"}\');\nQuery OK, 1 row affected (0.04 sec)\n\nmysql> SELECT\n    ->     jcol,\n    ->     JSON_STORAGE_SIZE(jcol) AS Size\n    -> FROM jtable;\n+-----------------------------------------------+------+\n| jcol                                          | Size |\n+-----------------------------------------------+------+\n| {\"a\": 1000, \"b\": \"wxyz\", \"c\": \"[1, 3, 5, 7]\"} |   47 |\n+-----------------------------------------------+------+\n1 row in set (0.00 sec)\n\nmysql> UPDATE jtable\nmysql>     SET jcol = \'{\"a\": 4.55, \"b\": \"wxyz\", \"c\": \"[true, false]\"}\';\nQuery OK, 1 row affected (0.04 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT\n    ->     jcol,\n    ->     JSON_STORAGE_SIZE(jcol) AS Size\n    -> FROM jtable;\n+------------------------------------------------+------+\n| jcol                                           | Size |\n+------------------------------------------------+------+\n| {\"a\": 4.55, \"b\": \"wxyz\", \"c\": \"[true, false]\"} |   56 |\n+------------------------------------------------+------+\n1 row in set (0.00 sec)\n\nmysql> SET @j = \'[100, \"sakila\", [1, 3, 5], 425.05]\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @j, JSON_STORAGE_SIZE(@j) AS Size;\n+------------------------------------+------+\n| @j                                 | Size |\n+------------------------------------+------+\n| [100, \"sakila\", [1, 3, 5], 425.05] |   45 |\n+------------------------------------+------+\n1 row in set (0.00 sec)\n\nmysql> SET @j = JSON_SET(@j, \'$[1]\', \"json\");\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @j, JSON_STORAGE_SIZE(@j) AS Size;\n+----------------------------------+------+\n| @j                               | Size |\n+----------------------------------+------+\n| [100, \"json\", [1, 3, 5], 425.05] |   43 |\n+----------------------------------+------+\n1 row in set (0.00 sec)\n\nmysql> SET @j = JSON_SET(@j, \'$[2][0]\', JSON_ARRAY(10, 20, 30));\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @j, JSON_STORAGE_SIZE(@j) AS Size;\n+---------------------------------------------+------+\n| @j                                          | Size |\n+---------------------------------------------+------+\n| [100, \"json\", [[10, 20, 30], 3, 5], 425.05] |   56 |\n+---------------------------------------------+------+\n1 row in set (0.00 sec)\n\nmysql> SELECT\n    ->     JSON_STORAGE_SIZE(\'[100, \"sakila\", [1, 3, 5], 425.05]\') AS A,\n    ->     JSON_STORAGE_SIZE(\'{\"a\": 1000, \"b\": \"a\", \"c\": \"[1, 3, 5, 7]\"}\') AS B,\n    ->     JSON_STORAGE_SIZE(\'{\"a\": 1000, \"b\": \"wxyz\", \"c\": \"[1, 3, 5, 7]\"}\') AS C,\n    ->     JSON_STORAGE_SIZE(\'[100, \"json\", [[10, 20, 30], 3, 5], 425.05]\') AS D;\n+----+----+----+----+\n| A  | B  | C  | D  |\n+----+----+----+----+\n| 45 | 44 | 47 | 56 |\n+----+----+----+----+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/json-utility-functions.html'),(439,'GTID_SUBSET',30,'Syntax:\nGTID_SUBSET(set1,set2)\n\nGiven two sets of global transaction IDs set1 and set2, returns true if\nall GTIDs in set1 are also in set2. Returns false otherwise.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html\n\n','mysql> SELECT GTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:23\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\')\\G\n*************************** 1. row ***************************\nGTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:23\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\'): 1\n1 row in set (0.00 sec)\n\nmysql> SELECT GTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:23-25\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\')\\G\n*************************** 1. row ***************************\nGTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:23-25\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\'): 1\n1 row in set (0.00 sec)\n\nmysql> SELECT GTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:20-25\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\')\\G\n*************************** 1. row ***************************\nGTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:20-25\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\'): 0\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html'),(440,'GTID_SUBTRACT',30,'Syntax:\nGTID_SUBTRACT(set1,set2)\n\nGiven two sets of global transaction IDs set1 and set2, returns only\nthose GTIDs from set1 that are not in set2.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html\n\n','mysql> SELECT GTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21\')\\G\n*************************** 1. row ***************************\nGTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21\'): 3e11fa47-71ca-11e1-9e33-c80aa9429562:22-57\n1 row in set (0.00 sec)\n\nmysql> SELECT GTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:20-25\')\\G\n*************************** 1. row ***************************\nGTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:20-25\'): 3e11fa47-71ca-11e1-9e33-c80aa9429562:26-57\n1 row in set (0.00 sec)\n\nmysql> SELECT GTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:23-24\')\\G\n*************************** 1. row ***************************\nGTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:23-24\'): 3e11fa47-71ca-11e1-9e33-c80aa9429562:21-22:25-57\n1 row in set (0.01 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html'),(441,'WAIT_FOR_EXECUTED_GTID_SET',30,'Syntax:\nWAIT_FOR_EXECUTED_GTID_SET(gtid_set[, timeout])\n\nWait until the server has applied all of the transactions whose global\ntransaction identifiers are contained in gtid_set; that is, until the\ncondition GTID_SUBSET(gtid_subset, @@GLOBAL.gtid_executed) holds. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-gtids-concepts.html\nfor a definition of GTID sets.\n\nIf a timeout is specified, and timeout seconds elapse before all of the\ntransactions in the GTID set have been applied, the function stops\nwaiting. timeout is optional, and the default timeout is 0 seconds, in\nwhich case the function always waits until all of the transactions in\nthe GTID set have been applied.\n\nWAIT_FOR_EXECUTED_GTID_SET() monitors all the GTIDs that are applied on\nthe server, including transactions that arrive from all replication\nchannels and user clients. It does not take into account whether\nreplication channels have been started or stopped.\n\nFor more information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-gtids.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html\n\n','mysql> SELECT WAIT_FOR_EXECUTED_GTID_SET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:1-5\');\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html'),(442,'WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS',30,'Syntax:\nWAIT_UNTIL_SQL_THREAD_AFTER_GTIDS(gtid_set[, timeout][,channel])\n\nWAIT_UNTIL_SQL_THREAD_AFTER_GTIDS() is similar to\nWAIT_FOR_EXECUTED_GTID_SET() in that it waits until all of the\ntransactions whose global transaction identifiers are contained in\ngtid_set have been applied, or until timeout seconds have elapsed,\nwhichever occurs first. However, WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS()\napplies to a specific replication channel, and stops only after the\ntransactions have been applied on the specified channel, for which the\napplier must be running. In contrast, WAIT_FOR_EXECUTED_GTID_SET()\nstops after the transactions have been applied, regardless of where\nthey were applied (on any replication channel or any user client), and\nwhether or not any replication channels are running.\n\nThe channel option names which replication channel the function applies\nto. If no channel is named and no channels other than the default\nreplication channel exist, the function applies to the default\nreplication channel. If multiple replication channels exist, you must\nspecify a channel as otherwise it is not known which replication\nchannel the function applies to. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-channels.html for\nmore information on replication channels.\n\n*Note*:\n\nBecause WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS() applies to a specific\nreplication channel, if an expected transaction arrives on a different\nreplication channel or from a user client, for example in a failover or\nmanual recovery situation, the function can hang indefinitely if no\ntimeout is set. Use WAIT_FOR_EXECUTED_GTID_SET() instead to ensure\ncorrect handling of transactions in these situations.\n\nGTID sets used with WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS() are represented\nas strings and must be quoted in the same way as for\nWAIT_FOR_EXECUTED_GTID_SET(). For WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS(),\nthe return value for the function is an arbitrary positive number. If\nGTID-based replication is not active (that is, if the value of the\ngtid_mode variable is OFF), then this value is undefined and\nWAIT_UNTIL_SQL_THREAD_AFTER_GTIDS() returns NULL. If the slave is not\nrunning then the function also returns NULL.\n\ngtid_mode cannot be changed to OFF while any client is using this\nfunction to wait for GTIDs to be applied.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html'),(443,'ASYMMETRIC_DECRYPT',30,'Syntax:\nASYMMETRIC_DECRYPT(algorithm, crypt_str, key_str)\n\nDecrypts an encrypted string using the given algorithm and key string,\nand returns the resulting plaintext as a binary string. If decryption\nfails, the result is NULL.\n\nkey_str must be a valid key string in PEM format. For successful\ndecryption, it must be the public or private key string corresponding\nto the private or public key string used with ASYMMETRIC_ENCRYPT() to\nproduce the encrypted string. algorithm indicates the encryption\nalgorithm used to create the key.\n\nSupported algorithm values: \'RSA\'\n\nFor a usage example, see the description of ASYMMETRIC_ENCRYPT().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(444,'ASYMMETRIC_DERIVE',30,'Syntax:\nASYMMETRIC_DERIVE(pub_key_str, priv_key_str)\n\nDerives a symmetric key using the private key of one party and the\npublic key of another, and returns the resulting key as a binary\nstring. If key derivation fails, the result is NULL.\n\npub_key_str and priv_key_str must be valid key strings in PEM format.\nThey must be created using the DH algorithm.\n\nSuppose that you have two pairs of public and private keys:\n\nSET @dhp = CREATE_DH_PARAMETERS(1024);\nSET @priv1 = CREATE_ASYMMETRIC_PRIV_KEY(\'DH\', @dhp);\nSET @pub1 = CREATE_ASYMMETRIC_PUB_KEY(\'DH\', @priv1);\nSET @priv2 = CREATE_ASYMMETRIC_PRIV_KEY(\'DH\', @dhp);\nSET @pub2 = CREATE_ASYMMETRIC_PUB_KEY(\'DH\', @priv2);\n\nSuppose further that you use the private key from one pair and the\npublic key from the other pair to create a symmetric key string. Then\nthis symmetric key identity relationship holds:\n\nASYMMETRIC_DERIVE(@pub1, @priv2) = ASYMMETRIC_DERIVE(@pub2, @priv1)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(445,'ASYMMETRIC_ENCRYPT',30,'Syntax:\nASYMMETRIC_ENCRYPT(algorithm, str, key_str)\n\nEncrypts a string using the given algorithm and key string, and returns\nthe resulting ciphertext as a binary string. If encryption fails, the\nresult is NULL.\n\nThe str length cannot be greater than the key_str length − 11, in\nbytes\n\nkey_str must be a valid key string in PEM format. algorithm indicates\nthe encryption algorithm used to create the key.\n\nSupported algorithm values: \'RSA\'\n\nTo encrypt a string, pass a private or public key string to\nASYMMETRIC_ENCRYPT(). To recover the original unencrypted string, pass\nthe encrypted string to ASYMMETRIC_DECRYPT(), along with the public or\nprivate key string correponding to the private or public key string\nused for encryption.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','-- Generate private/public key pair\nSET @priv = CREATE_ASYMMETRIC_PRIV_KEY(\'RSA\', 1024);\nSET @pub = CREATE_ASYMMETRIC_PUB_KEY(\'RSA\', @priv);\n\n-- Encrypt using private key, decrypt using public key\nSET @ciphertext = ASYMMETRIC_ENCRYPT(\'RSA\', \'The quick brown fox\', @priv);\nSET @plaintext = ASYMMETRIC_DECRYPT(\'RSA\', @ciphertext, @pub);\n\n-- Encrypt using public key, decrypt using private key\nSET @ciphertext = ASYMMETRIC_ENCRYPT(\'RSA\', \'The quick brown fox\', @pub);\nSET @plaintext = ASYMMETRIC_DECRYPT(\'RSA\', @ciphertext, @priv);\n','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(446,'ASYMMETRIC_SIGN',30,'Syntax:\nASYMMETRIC_SIGN(algorithm, digest_str, priv_key_str, digest_type)\n\nSigns a digest string using a private key string, and returns the\nsignature as a binary string. If signing fails, the result is NULL.\n\ndigest_str is the digest string. It can be generated by calling\nCREATE_DIGEST(). digest_type indicates the digest algorithm used to\ngenerate the digest string.\n\npriv_key_str is the private key string to use for signing the digest\nstring. It must be a valid key string in PEM format. algorithm\nindicates the encryption algorithm used to create the key.\n\nSupported algorithm values: \'RSA\', \'DSA\'\n\nSupported digest_type values: \'SHA224\', \'SHA256\', \'SHA384\', \'SHA512\'\n\nFor a usage example, see the description of ASYMMETRIC_VERIFY().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(447,'ASYMMETRIC_VERIFY',30,'Syntax:\nASYMMETRIC_VERIFY(algorithm, digest_str, sig_str, pub_key_str,\ndigest_type)\n\nVerifies whether the signature string matches the digest string, and\nreturns 1 or 0 to indicate whether verification succeeded or failed.\n\ndigest_str is the digest string. It can be generated by calling\nCREATE_DIGEST(). digest_type indicates the digest algorithm used to\ngenerate the digest string.\n\nsig_str is the signature string. It can be generated by calling\nASYMMETRIC_SIGN().\n\npub_key_str is the public key string of the signer. It corresponds to\nthe private key passed to ASYMMETRIC_SIGN() to generate the signature\nstring and must be a valid key string in PEM format. algorithm\nindicates the encryption algorithm used to create the key.\n\nSupported algorithm values: \'RSA\', \'DSA\'\n\nSupported digest_type values: \'SHA224\', \'SHA256\', \'SHA384\', \'SHA512\'\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','-- Set the encryption algorithm and digest type\nSET @algo = \'RSA\';\nSET @dig_type = \'SHA224\';\n\n-- Create private/public key pair\nSET @priv = CREATE_ASYMMETRIC_PRIV_KEY(@algo, 1024);\nSET @pub = CREATE_ASYMMETRIC_PUB_KEY(@algo, @priv);\n\n-- Generate digest from string\nSET @dig = CREATE_DIGEST(@dig_type, \'The quick brown fox\');\n\n-- Generate signature for digest and verify signature against digest\nSET @sig = ASYMMETRIC_SIGN(@algo, @dig, @priv, @dig_type);\nSET @verf = ASYMMETRIC_VERIFY(@algo, @dig, @sig, @pub, @dig_type);\n','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(448,'CREATE_ASYMMETRIC_PRIV_KEY',30,'Syntax:\nCREATE_ASYMMETRIC_PRIV_KEY(algorithm, {key_len|dh_secret})\n\nCreates a private key using the given algorithm and key length or DH\nsecret, and returns the key as a binary string in PEM format. If key\ngeneration fails, the result is NULL.\n\nSupported algorithm values: \'RSA\', \'DSA\', \'DH\'\n\nSupported key_len values: The minimum key length in bits is 1,024. The\nmaximum key length depends on the algorithm: 16,384 for RSA and 10,000\nfor DSA. These key-length limits are constraints imposed by OpenSSL.\nServer administrators can impose additional limits on maximum key\nlength by setting environment variables. See\nhttps://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-usage.htm\nl.\n\nFor DH keys, pass a shared DH secret instead of a key length. To create\nthe secret, pass the key length to CREATE_DH_PARAMETERS().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','SET @priv = CREATE_ASYMMETRIC_PRIV_KEY(\'DSA\', 2048);\nSET @pub = CREATE_ASYMMETRIC_PUB_KEY(\'DSA\', @priv);\n','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(449,'CREATE_ASYMMETRIC_PUB_KEY',30,'Syntax:\nCREATE_ASYMMETRIC_PUB_KEY(algorithm, priv_key_str)\n\nDerives a public key from the given private key using the given\nalgorithm, and returns the key as a binary string in PEM format. If key\nderivation fails, the result is NULL.\n\npriv_key_str must be a valid key string in PEM format. algorithm\nindicates the encryption algorithm used to create the key.\n\nSupported algorithm values: \'RSA\', \'DSA\', \'DH\'\n\nFor a usage example, see the description of\nCREATE_ASYMMETRIC_PRIV_KEY().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(450,'CREATE_DH_PARAMETERS',30,'CREATE_DH_PARAMETERS(key_len)\n\nCreates a shared secret for generating a DH private/public key pair and\nreturns a binary string that can be passed to\nCREATE_ASYMMETRIC_PRIV_KEY(). If secret generation fails, the result is\nnull.\n\nSupported key_len values: The minimum and maximum key lengths in bits\nare 1,024 and 10,000. These key-length limits are constraints imposed\nby OpenSSL. Server administrators can impose additional limits on\nmaximum key length by setting environment variables. See\nhttps://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-usage.htm\nl.\n\nFor an example showing how to use the return value for generating\nsymmetric keys, see the description of ASYMMETRIC_DERIVE().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','SET @dhp = CREATE_DH_PARAMETERS(1024);\n','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(451,'CREATE_DIGEST',30,'Syntax:\nCREATE_DIGEST(digest_type, str)\n\nCreates a digest from the given string using the given digest type, and\nreturns the digest as a binary string. If digest generation fails, the\nresult is NULL.\n\nSupported digest_type values: \'SHA224\', \'SHA256\', \'SHA384\', \'SHA512\'\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','SET @dig = CREATE_DIGEST(\'SHA512\', The quick brown fox\');\n','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(452,'AVG',31,'Syntax:\nAVG([DISTINCT] expr)\n\nReturns the average value of expr. The DISTINCT option can be used to\nreturn the average of the distinct values of expr.\n\nIf there are no matching rows, AVG() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT student_name, AVG(test_score)\n       FROM student\n       GROUP BY student_name;\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(453,'BIT_AND',31,'Syntax:\nBIT_AND(expr)\n\nReturns the bitwise AND of all bits in expr. The calculation is\nperformed with 64-bit (BIGINT) precision.\n\nIf there are no matching rows, BIT_AND() returns a neutral value (all\nbits set to 1).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(454,'BIT_OR',31,'Syntax:\nBIT_OR(expr)\n\nReturns the bitwise OR of all bits in expr. The calculation is\nperformed with 64-bit (BIGINT) precision.\n\nIf there are no matching rows, BIT_OR() returns a neutral value (all\nbits set to 0).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(455,'BIT_XOR',31,'Syntax:\nBIT_XOR(expr)\n\nReturns the bitwise XOR of all bits in expr. The calculation is\nperformed with 64-bit (BIGINT) precision.\n\nIf there are no matching rows, BIT_XOR() returns a neutral value (all\nbits set to 0).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(456,'COUNT',31,'Syntax:\nCOUNT(expr)\n\nReturns a count of the number of non-NULL values of expr in the rows\nretrieved by a SELECT statement. The result is a BIGINT value.\n\nIf there are no matching rows, COUNT() returns 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT student.student_name,COUNT(*)\n       FROM student,course\n       WHERE student.student_id=course.student_id\n       GROUP BY student_name;\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(457,'COUNT DISTINCT',31,'Syntax:\nCOUNT(DISTINCT expr,[expr...])\n\nReturns a count of the number of rows with different non-NULL expr\nvalues.\n\nIf there are no matching rows, COUNT(DISTINCT) returns 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT COUNT(DISTINCT results) FROM student;\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(458,'GROUP_CONCAT',31,'Syntax:\nGROUP_CONCAT(expr)\n\nThis function returns a string result with the concatenated non-NULL\nvalues from a group. It returns NULL if there are no non-NULL values.\nThe full syntax is as follows:\n\nGROUP_CONCAT([DISTINCT] expr [,expr ...]\n             [ORDER BY {unsigned_integer | col_name | expr}\n                 [ASC | DESC] [,col_name ...]]\n             [SEPARATOR str_val])\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT student_name,\n         GROUP_CONCAT(test_score)\n       FROM student\n       GROUP BY student_name;\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(459,'JSON_ARRAYAGG',31,'Syntax:\nJSON_ARRAYAGG(col_or_expr)\n\nAggregates a result set as a single JSON array whose elements consist\nof the rows. The order of elements in this array is undefined. The\nfunction acts on a column or an expression that evaluates to a single\nvalue. Returns NULL if the result contains no rows, or in the event of\nan error.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT o_id, attribute, value FROM t3;\n+------+-----------+-------+\n| o_id | attribute | value |\n+------+-----------+-------+\n|    2 | color     | red   |\n|    2 | fabric    | silk  |\n|    3 | color     | green |\n|    3 | shape     | square|\n+------+-----------+-------+\n4 rows in set (0.00 sec)\n\nmysql> SELECT o_id, JSON_ARRAYAGG(attribute) AS attributes \n     > FROM t3 GROUP BY o_id;\n+------+---------------------+\n| o_id | attributes          |\n+------+---------------------+\n|    2 | [\"color\", \"fabric\"] |\n|    3 | [\"color\", \"shape\"]  |\n+------+---------------------+\n2 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(460,'JSON_OBJECTAGG',31,'Syntax:\nJSON_OBJECTAGG(key, value)\n\nTakes two column names or expressions as arguments, the first of these\nbeing used as a key and the second as a value, and returns a JSON\nobject containing key-value pairs. Returns NULL if the result contains\nno rows, or in the event of an error. An error occurs if any key name\nis NULL or the number of arguments is not equal to 2.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT o_id, attribute, value FROM t3;\n+------+-----------+-------+\n| o_id | attribute | value |\n+------+-----------+-------+\n|    2 | color     | red   |\n|    2 | fabric    | silk  |\n|    3 | color     | green |\n|    3 | shape     | square|\n+------+-----------+-------+\n4 rows in set (0.00 sec)\n\nmysql> SELECT o_id, JSON_OBJECTAGG(attribute, value) FROM t3 GROUP BY o_id;\n+------+----------------------------------------+\n| o_id | JSON_OBJECTAGG(attribute, name)        |\n+------+----------------------------------------+\n|    2 | {\"color\": \"red\", \"fabric\": \"silk\"}     |\n|    3 | {\"color\": \"green\", \"shape\": \"square\"}  |\n+------+----------------------------------------+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(461,'MAX',31,'Syntax:\nMAX([DISTINCT] expr)\n\nReturns the maximum value of expr. MAX() may take a string argument; in\nsuch cases, it returns the maximum string value. See\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-indexes.html. The\nDISTINCT keyword can be used to find the maximum of the distinct values\nof expr, however, this produces the same result as omitting DISTINCT.\n\nIf there are no matching rows, MAX() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT student_name, MIN(test_score), MAX(test_score)\n       FROM student\n       GROUP BY student_name;\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(462,'MIN',31,'Syntax:\nMIN([DISTINCT] expr)\n\nReturns the minimum value of expr. MIN() may take a string argument; in\nsuch cases, it returns the minimum string value. See\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-indexes.html. The\nDISTINCT keyword can be used to find the minimum of the distinct values\nof expr, however, this produces the same result as omitting DISTINCT.\n\nIf there are no matching rows, MIN() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT student_name, MIN(test_score), MAX(test_score)\n       FROM student\n       GROUP BY student_name;\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(463,'STD',31,'Syntax:\nSTD(expr)\n\nReturns the population standard deviation of expr. STD() is a synonym\nfor the standard SQL function STDDEV_POP(), provided as a MySQL\nextension.\n\nIf there are no matching rows, STD() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(464,'STDDEV',31,'Syntax:\nSTDDEV(expr)\n\nReturns the population standard deviation of expr. STDDEV() is a\nsynonym for the standard SQL function STDDEV_POP(), provided for\ncompatibility with Oracle.\n\nIf there are no matching rows, STDDEV() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(465,'STDDEV_POP',31,'Syntax:\nSTDDEV_POP(expr)\n\nReturns the population standard deviation of expr (the square root of\nVAR_POP()). You can also use STD() or STDDEV(), which are equivalent\nbut not standard SQL.\n\nIf there are no matching rows, STDDEV_POP() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(466,'STDDEV_SAMP',31,'Syntax:\nSTDDEV_SAMP(expr)\n\nReturns the sample standard deviation of expr (the square root of\nVAR_SAMP().\n\nIf there are no matching rows, STDDEV_SAMP() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(467,'SUM',31,'Syntax:\nSUM([DISTINCT] expr)\n\nReturns the sum of expr. If the return set has no rows, SUM() returns\nNULL. The DISTINCT keyword can be used to sum only the distinct values\nof expr.\n\nIf there are no matching rows, SUM() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(468,'VAR_POP',31,'Syntax:\nVAR_POP(expr)\n\nReturns the population standard variance of expr. It considers rows as\nthe whole population, not as a sample, so it has the number of rows as\nthe denominator. You can also use VARIANCE(), which is equivalent but\nis not standard SQL.\n\nIf there are no matching rows, VAR_POP() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(469,'VAR_SAMP',31,'Syntax:\nVAR_SAMP(expr)\n\nReturns the sample variance of expr. That is, the denominator is the\nnumber of rows minus one.\n\nIf there are no matching rows, VAR_SAMP() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(470,'VARIANCE',31,'Syntax:\nVARIANCE(expr)\n\nReturns the population standard variance of expr. VARIANCE() is a\nsynonym for the standard SQL function VAR_POP(), provided as a MySQL\nextension.\n\nIf there are no matching rows, VARIANCE() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(471,'ANY_VALUE',32,'ANY_VALUE(arg)\n\nThis function is useful for GROUP BY queries when the\nONLY_FULL_GROUP_BY SQL mode is enabled, for cases when MySQL rejects a\nquery that you know is valid for reasons that MySQL cannot determine.\nThe function return value and type are the same as the return value and\ntype of its argument, but the function result is not checked for the\nONLY_FULL_GROUP_BY SQL mode.\n\nFor example, if name is a nonindexed column, the following query fails\nwith ONLY_FULL_GROUP_BY enabled:\n\nmysql> SELECT name, address, MAX(age) FROM t GROUP BY name;\nERROR 1055 (42000): Expression #2 of SELECT list is not in GROUP\nBY clause and contains nonaggregated column \'mydb.t.address\' which\nis not functionally dependent on columns in GROUP BY clause; this\nis incompatible with sql_mode=only_full_group_by\n\nThe failure occurs because address is a nonaggregated column that is\nneither named among GROUP BY columns nor functionally dependent on\nthem. As a result, the address value for rows within each name group is\nnondeterministic. There are multiple ways to cause MySQL to accept the\nquery:\n\no Alter the table to make name a primary key or a unique NOT NULL\n  column. This enables MySQL to determine that address is functionally\n  dependent on name; that is, address is uniquely determined by name.\n  (This technique is inapplicable if NULL must be permitted as a valid\n  name value.)\n\no Use ANY_VALUE() to refer to address:\n\nSELECT name, ANY_VALUE(address), MAX(age) FROM t GROUP BY name;\n\n  In this case, MySQL ignores the nondeterminism of address values\n  within each name group and accepts the query. This may be useful if\n  you simply do not care which value of a nonaggregated column is\n  chosen for each group. ANY_VALUE() is not an aggregate function,\n  unlike functions such as SUM() or COUNT(). It simply acts to suppress\n  the test for nondeterminism.\n\no Disable ONLY_FULL_GROUP_BY. This is equivalent to using ANY_VALUE()\n  with ONLY_FULL_GROUP_BY enabled, as described in the previous item.\n\nANY_VALUE() is also useful if functional dependence exists between\ncolumns but MySQL cannot determine it. The following query is valid\nbecause age is functionally dependent on the grouping column age-1, but\nMySQL cannot tell that and rejects the query with ONLY_FULL_GROUP_BY\nenabled:\n\nSELECT age FROM t GROUP BY age-1;\n\nTo cause MySQL to accept the query, use ANY_VALUE():\n\nSELECT ANY_VALUE(age) FROM t GROUP BY age-1;\n\nANY_VALUE() can be used for queries that refer to aggregate functions\nin the absence of a GROUP BY clause:\n\nmysql> SELECT name, MAX(age) FROM t;\nERROR 1140 (42000): In aggregated query without GROUP BY, expression\n#1 of SELECT list contains nonaggregated column \'mydb.t.name\'; this\nis incompatible with sql_mode=only_full_group_by\n\nWithout GROUP BY, there is a single group and it is nondeterministic\nwhich name value to choose for the group. ANY_VALUE() tells MySQL to\naccept the query:\n\nSELECT ANY_VALUE(name), MAX(age) FROM t;\n\nIt may be that, due to some property of a given data set, you know that\na selected nonaggregated column is effectively functionally dependent\non a GROUP BY column. For example, an application may enforce\nuniqueness of one column with respect to another. In this case, using\nANY_VALUE() for the effectively functionally dependent column may make\nsense.\n\nFor additional discussion, see\nhttps://dev.mysql.com/doc/refman/5.7/en/group-by-handling.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(472,'DEFAULT',32,'Syntax:\nDEFAULT(col_name)\n\nReturns the default value for a table column. An error results if the\ncolumn has no default value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> UPDATE t SET i = DEFAULT(i)+1 WHERE id < 100;\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(473,'INET_ATON',32,'Syntax:\nINET_ATON(expr)\n\nGiven the dotted-quad representation of an IPv4 network address as a\nstring, returns an integer that represents the numeric value of the\naddress in network byte order (big endian). INET_ATON() returns NULL if\nit does not understand its argument.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT INET_ATON(\'10.0.5.9\');\n        -> 167773449\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(474,'INET_NTOA',32,'Syntax:\nINET_NTOA(expr)\n\nGiven a numeric IPv4 network address in network byte order, returns the\ndotted-quad string representation of the address as a string in the\nconnection character set. INET_NTOA() returns NULL if it does not\nunderstand its argument.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT INET_NTOA(167773449);\n        -> \'10.0.5.9\'\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(475,'INET6_ATON',32,'Syntax:\nINET6_ATON(expr)\n\nGiven an IPv6 or IPv4 network address as a string, returns a binary\nstring that represents the numeric value of the address in network byte\norder (big endian). Because numeric-format IPv6 addresses require more\nbytes than the largest integer type, the representation returned by\nthis function has the VARBINARY data type: VARBINARY(16) for IPv6\naddresses and VARBINARY(4) for IPv4 addresses. If the argument is not a\nvalid address, INET6_ATON() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT HEX(INET6_ATON(\'fdfe::5a55:caff:fefa:9089\'));\n        -> \'FDFE0000000000005A55CAFFFEFA9089\'\nmysql> SELECT HEX(INET6_ATON(\'10.0.5.9\'));\n        -> \'0A000509\'\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(476,'INET6_NTOA',32,'Syntax:\nINET6_NTOA(expr)\n\nGiven an IPv6 or IPv4 network address represented in numeric form as a\nbinary string, returns the string representation of the address as a\nstring in the connection character set. If the argument is not a valid\naddress, INET6_NTOA() returns NULL.\n\nINET6_NTOA() has these properties:\n\no It does not use operating system functions to perform conversions,\n  thus the output string is platform independent.\n\no The return string has a maximum length of 39 (4 x 8 + 7). Given this\n  statement:\n\nCREATE TABLE t AS SELECT INET6_NTOA(expr) AS c1;\n\n  The resulting table would have this definition:\n\nCREATE TABLE t (c1 VARCHAR(39) CHARACTER SET utf8 DEFAULT NULL);\n\no The return string uses lowercase letters for IPv6 addresses.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT INET6_NTOA(INET6_ATON(\'fdfe::5a55:caff:fefa:9089\'));\n        -> \'fdfe::5a55:caff:fefa:9089\'\nmysql> SELECT INET6_NTOA(INET6_ATON(\'10.0.5.9\'));\n        -> \'10.0.5.9\'\n\nmysql> SELECT INET6_NTOA(UNHEX(\'FDFE0000000000005A55CAFFFEFA9089\'));\n        -> \'fdfe::5a55:caff:fefa:9089\'\nmysql> SELECT INET6_NTOA(UNHEX(\'0A000509\'));\n        -> \'10.0.5.9\'\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(477,'IS_IPV4',32,'Syntax:\nIS_IPV4(expr)\n\nReturns 1 if the argument is a valid IPv4 address specified as a\nstring, 0 otherwise.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT IS_IPV4(\'10.0.5.9\'), IS_IPV4(\'10.0.5.256\');\n        -> 1, 0\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(478,'IS_IPV4_COMPAT',32,'Syntax:\nIS_IPV4_COMPAT(expr)\n\nThis function takes an IPv6 address represented in numeric form as a\nbinary string, as returned by INET6_ATON(). It returns 1 if the\nargument is a valid IPv4-compatible IPv6 address, 0 otherwise.\nIPv4-compatible addresses have the form ::ipv4_address.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT IS_IPV4_COMPAT(INET6_ATON(\'::10.0.5.9\'));\n        -> 1\nmysql> SELECT IS_IPV4_COMPAT(INET6_ATON(\'::ffff:10.0.5.9\'));\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(479,'IS_IPV4_MAPPED',32,'Syntax:\nIS_IPV4_MAPPED(expr)\n\nThis function takes an IPv6 address represented in numeric form as a\nbinary string, as returned by INET6_ATON(). It returns 1 if the\nargument is a valid IPv4-mapped IPv6 address, 0 otherwise. IPv4-mapped\naddresses have the form ::ffff:ipv4_address.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT IS_IPV4_MAPPED(INET6_ATON(\'::10.0.5.9\'));\n        -> 0\nmysql> SELECT IS_IPV4_MAPPED(INET6_ATON(\'::ffff:10.0.5.9\'));\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(480,'IS_IPV6',32,'Syntax:\nIS_IPV6(expr)\n\nReturns 1 if the argument is a valid IPv6 address specified as a\nstring, 0 otherwise. This function does not consider IPv4 addresses to\nbe valid IPv6 addresses.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT IS_IPV6(\'10.0.5.9\'), IS_IPV6(\'::1\');\n        -> 0, 1\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(481,'MASTER_POS_WAIT',32,'Syntax:\nMASTER_POS_WAIT(log_name,log_pos[,timeout][,channel])\n\nThis function is useful for control of master/slave synchronization. It\nblocks until the slave has read and applied all updates up to the\nspecified position in the master log. The return value is the number of\nlog events the slave had to wait for to advance to the specified\nposition. The function returns NULL if the slave SQL thread is not\nstarted, the slave\'s master information is not initialized, the\narguments are incorrect, or an error occurs. It returns -1 if the\ntimeout has been exceeded. If the slave SQL thread stops while\nMASTER_POS_WAIT() is waiting, the function returns NULL. If the slave\nis past the specified position, the function returns immediately.\n\nOn a multithreaded slave, the function waits until expiry of the limit\nset by the slave_checkpoint_group or slave_checkpoint_period system\nvariable, when the checkpoint operation is called to update the status\nof the slave. Depending on the setting for the system variables, the\nfunction might therefore return some time after the specified position\nwas reached.\n\nIf a timeout value is specified, MASTER_POS_WAIT() stops waiting when\ntimeout seconds have elapsed. timeout must be greater than 0; a zero or\nnegative timeout means no timeout.\n\nThe optional channel value enables you to name which replication\nchannel the function applies to. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-channels.html for\nmore information.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(482,'NAME_CONST',32,'Syntax:\nNAME_CONST(name,value)\n\nReturns the given value. When used to produce a result set column,\nNAME_CONST() causes the column to have the given name. The arguments\nshould be constants.\n\nmysql> SELECT NAME_CONST(\'myname\', 14);\n+--------+\n| myname |\n+--------+\n|     14 |\n+--------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(483,'SLEEP',32,'Syntax:\nSLEEP(duration)\n\nSleeps (pauses) for the number of seconds given by the duration\nargument, then returns 0. The duration may have a fractional part. If\nthe argument is NULL or negative, SLEEP() produces a warning, or an\nerror in strict SQL mode.\n\nWhen sleep returns normally (without interruption), it returns 0:\n\nmysql> SELECT SLEEP(1000);\n+-------------+\n| SLEEP(1000) |\n+-------------+\n|           0 |\n+-------------+\n\nWhen SLEEP() is the only thing invoked by a query that is interrupted,\nit returns 1 and the query itself returns no error. This is true\nwhether the query is killed or times out:\n\no This statement is interrupted using KILL QUERY from another session:\n\nmysql> SELECT SLEEP(1000);\n+-------------+\n| SLEEP(1000) |\n+-------------+\n|           1 |\n+-------------+\n\no This statement is interrupted by timing out:\n\nmysql> SELECT /*+ MAX_EXECUTION_TIME(1) */ SLEEP(1000);\n+-------------+\n| SLEEP(1000) |\n+-------------+\n|           1 |\n+-------------+\n\nWhen SLEEP() is only part of a query that is interrupted, the query\nreturns an error:\n\no This statement is interrupted using KILL QUERY from another session:\n\nmysql> SELECT 1 FROM t1 WHERE SLEEP(1000);\nERROR 1317 (70100): Query execution was interrupted\n\no This statement is interrupted by timing out:\n\nmysql> SELECT /*+ MAX_EXECUTION_TIME(1000) */ 1 FROM t1 WHERE SLEEP(1000);\nERROR 3024 (HY000): Query execution was interrupted, maximum statement\nexecution time exceeded\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(484,'UUID',32,'Syntax:\nUUID()\n\nReturns a Universal Unique Identifier (UUID) generated according to RFC\n4122, \"A Universally Unique IDentifier (UUID) URN Namespace\"\n(http://www.ietf.org/rfc/rfc4122.txt).\n\nA UUID is designed as a number that is globally unique in space and\ntime. Two calls to UUID() are expected to generate two different\nvalues, even if these calls are performed on two separate devices not\nconnected to each other.\n\n*Warning*:\n\nAlthough UUID() values are intended to be unique, they are not\nnecessarily unguessable or unpredictable. If unpredictability is\nrequired, UUID values should be generated some other way.\n\nUUID() returns a value that conforms to UUID version 1 as described in\nRFC 4122. The value is a 128-bit number represented as a utf8 string of\nfive hexadecimal numbers in aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\nformat:\n\no The first three numbers are generated from the low, middle, and high\n  parts of a timestamp. The high part also includes the UUID version\n  number.\n\no The fourth number preserves temporal uniqueness in case the timestamp\n  value loses monotonicity (for example, due to daylight saving time).\n\no The fifth number is an IEEE 802 node number that provides spatial\n  uniqueness. A random number is substituted if the latter is not\n  available (for example, because the host device has no Ethernet card,\n  or it is unknown how to find the hardware address of an interface on\n  the host operating system). In this case, spatial uniqueness cannot\n  be guaranteed. Nevertheless, a collision should have very low\n  probability.\n\n  The MAC address of an interface is taken into account only on\n  FreeBSD, Linux, and Windows. On other operating systems, MySQL uses a\n  randomly generated 48-bit number.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT UUID();\n        -> \'6ccd780c-baba-1026-9564-5b8c656024db\'\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(485,'UUID_SHORT',32,'Syntax:\nUUID_SHORT()\n\nReturns a \"short\" universal identifier as a 64-bit unsigned integer.\nValues returned by UUID_SHORT() differ from the string-format 128-bit\nidentifiers returned by the UUID() function and have different\nuniqueness properties. The value of UUID_SHORT() is guaranteed to be\nunique if the following conditions hold:\n\no The server_id value of the current server is between 0 and 255 and is\n  unique among your set of master and slave servers\n\no You do not set back the system time for your server host between\n  mysqld restarts\n\no You invoke UUID_SHORT() on average fewer than 16 million times per\n  second between mysqld restarts\n\nThe UUID_SHORT() return value is constructed this way:\n\n  (server_id & 255) << 56\n+ (server_startup_time_in_seconds << 24)\n+ incremented_variable++;\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT UUID_SHORT();\n        -> 92395783831158784\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(486,'VALUES',32,'Syntax:\nVALUES(col_name)\n\nIn an INSERT ... ON DUPLICATE KEY UPDATE statement, you can use the\nVALUES(col_name) function in the UPDATE clause to refer to column\nvalues from the INSERT portion of the statement. In other words,\nVALUES(col_name) in the UPDATE clause refers to the value of col_name\nthat would be inserted, had no duplicate-key conflict occurred. This\nfunction is especially useful in multiple-row inserts. The VALUES()\nfunction is meaningful only in the ON DUPLICATE KEY UPDATE clause of\nINSERT statements and returns NULL otherwise. See\nhttps://dev.mysql.com/doc/refman/5.7/en/insert-on-duplicate.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> INSERT INTO table (a,b,c) VALUES (1,2,3),(4,5,6)\n    -> ON DUPLICATE KEY UPDATE c=VALUES(a)+VALUES(b);\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(487,'ALTER DATABASE',33,'Syntax:\nALTER {DATABASE | SCHEMA} [db_name]\n    alter_specification ...\nALTER {DATABASE | SCHEMA} db_name\n    UPGRADE DATA DIRECTORY NAME\n\nalter_specification:\n    [DEFAULT] CHARACTER SET [=] charset_name\n  | [DEFAULT] COLLATE [=] collation_name\n\nALTER DATABASE enables you to change the overall characteristics of a\ndatabase. These characteristics are stored in the db.opt file in the\ndatabase directory. To use ALTER DATABASE, you need the ALTER privilege\non the database. ALTER SCHEMA is a synonym for ALTER DATABASE.\n\nThe database name can be omitted from the first syntax, in which case\nthe statement applies to the default database.\n\nNational Language Characteristics\n\nThe CHARACTER SET clause changes the default database character set.\nThe COLLATE clause changes the default database collation.\nhttps://dev.mysql.com/doc/refman/5.7/en/charset.html, discusses\ncharacter set and collation names.\n\nYou can see what character sets and collations are available using,\nrespectively, the SHOW CHARACTER SET and SHOW COLLATION statements. See\n[HELP SHOW CHARACTER SET], and [HELP SHOW COLLATION], for more\ninformation.\n\nIf you change the default character set or collation for a database,\nstored routines that use the database defaults must be dropped and\nrecreated so that they use the new defaults. (In a stored routine,\nvariables with character data types use the database defaults if the\ncharacter set or collation are not specified explicitly. See [HELP\nCREATE PROCEDURE].)\n\nUpgrading from Versions Older than MySQL 5.1\n\nThe syntax that includes the UPGRADE DATA DIRECTORY NAME clause updates\nthe name of the directory associated with the database to use the\nencoding implemented in MySQL 5.1 for mapping database names to\ndatabase directory names (see\nhttps://dev.mysql.com/doc/refman/5.7/en/identifier-mapping.html). This\nclause is for use under these conditions:\n\no It is intended when upgrading MySQL to 5.1 or later from older\n  versions.\n\no It is intended to update a database directory name to the current\n  encoding format if the name contains special characters that need\n  encoding.\n\no The statement is used by mysqlcheck (as invoked by mysql_upgrade).\n\nFor example, if a database in MySQL 5.0 has the name a-b-c, the name\ncontains instances of the - (dash) character. In MySQL 5.0, the\ndatabase directory is also named a-b-c, which is not necessarily safe\nfor all file systems. In MySQL 5.1 and later, the same database name is\nencoded as a@002db@002dc to produce a file system-neutral directory\nname.\n\nWhen a MySQL installation is upgraded to MySQL 5.1 or later from an\nolder version,the server displays a name such as a-b-c (which is in the\nold format) as #mysql50#a-b-c, and you must refer to the name using the\n#mysql50# prefix. Use UPGRADE DATA DIRECTORY NAME in this case to\nexplicitly tell the server to re-encode the database directory name to\nthe current encoding format:\n\nALTER DATABASE `#mysql50#a-b-c` UPGRADE DATA DIRECTORY NAME;\n\nAfter executing this statement, you can refer to the database as a-b-c\nwithout the special #mysql50# prefix.\n\n*Note*:\n\nThe UPGRADE DATA DIRECTORY NAME clause is deprecated in MySQL 5.7.6 and\nwill be removed in a future version of MySQL. If it is necessary to\nconvert MySQL 5.0 database or table names, a workaround is to upgrade a\nMySQL 5.0 installation to MySQL 5.1 before upgrading to a more recent\nrelease.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-database.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-database.html'),(488,'ALTER SCHEMA',33,'Syntax:\nALTER {DATABASE | SCHEMA} [db_name]\n    alter_specification ...\nALTER {DATABASE | SCHEMA} db_name\n    UPGRADE DATA DIRECTORY NAME\n\nalter_specification:\n    [DEFAULT] CHARACTER SET [=] charset_name\n  | [DEFAULT] COLLATE [=] collation_name\n\nALTER DATABASE enables you to change the overall characteristics of a\ndatabase. These characteristics are stored in the db.opt file in the\ndatabase directory. To use ALTER DATABASE, you need the ALTER privilege\non the database. ALTER SCHEMA is a synonym for ALTER DATABASE.\n\nThe database name can be omitted from the first syntax, in which case\nthe statement applies to the default database.\n\nNational Language Characteristics\n\nThe CHARACTER SET clause changes the default database character set.\nThe COLLATE clause changes the default database collation.\nhttps://dev.mysql.com/doc/refman/5.7/en/charset.html, discusses\ncharacter set and collation names.\n\nYou can see what character sets and collations are available using,\nrespectively, the SHOW CHARACTER SET and SHOW COLLATION statements. See\n[HELP SHOW CHARACTER SET], and [HELP SHOW COLLATION], for more\ninformation.\n\nIf you change the default character set or collation for a database,\nstored routines that use the database defaults must be dropped and\nrecreated so that they use the new defaults. (In a stored routine,\nvariables with character data types use the database defaults if the\ncharacter set or collation are not specified explicitly. See [HELP\nCREATE PROCEDURE].)\n\nUpgrading from Versions Older than MySQL 5.1\n\nThe syntax that includes the UPGRADE DATA DIRECTORY NAME clause updates\nthe name of the directory associated with the database to use the\nencoding implemented in MySQL 5.1 for mapping database names to\ndatabase directory names (see\nhttps://dev.mysql.com/doc/refman/5.7/en/identifier-mapping.html). This\nclause is for use under these conditions:\n\no It is intended when upgrading MySQL to 5.1 or later from older\n  versions.\n\no It is intended to update a database directory name to the current\n  encoding format if the name contains special characters that need\n  encoding.\n\no The statement is used by mysqlcheck (as invoked by mysql_upgrade).\n\nFor example, if a database in MySQL 5.0 has the name a-b-c, the name\ncontains instances of the - (dash) character. In MySQL 5.0, the\ndatabase directory is also named a-b-c, which is not necessarily safe\nfor all file systems. In MySQL 5.1 and later, the same database name is\nencoded as a@002db@002dc to produce a file system-neutral directory\nname.\n\nWhen a MySQL installation is upgraded to MySQL 5.1 or later from an\nolder version,the server displays a name such as a-b-c (which is in the\nold format) as #mysql50#a-b-c, and you must refer to the name using the\n#mysql50# prefix. Use UPGRADE DATA DIRECTORY NAME in this case to\nexplicitly tell the server to re-encode the database directory name to\nthe current encoding format:\n\nALTER DATABASE `#mysql50#a-b-c` UPGRADE DATA DIRECTORY NAME;\n\nAfter executing this statement, you can refer to the database as a-b-c\nwithout the special #mysql50# prefix.\n\n*Note*:\n\nThe UPGRADE DATA DIRECTORY NAME clause is deprecated in MySQL 5.7.6 and\nwill be removed in a future version of MySQL. If it is necessary to\nconvert MySQL 5.0 database or table names, a workaround is to upgrade a\nMySQL 5.0 installation to MySQL 5.1 before upgrading to a more recent\nrelease.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-database.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-database.html'),(489,'ALTER EVENT',33,'Syntax:\nALTER\n    [DEFINER = user]\n    EVENT event_name\n    [ON SCHEDULE schedule]\n    [ON COMPLETION [NOT] PRESERVE]\n    [RENAME TO new_event_name]\n    [ENABLE | DISABLE | DISABLE ON SLAVE]\n    [COMMENT \'string\']\n    [DO event_body]\n\nThe ALTER EVENT statement changes one or more of the characteristics of\nan existing event without the need to drop and recreate it. The syntax\nfor each of the DEFINER, ON SCHEDULE, ON COMPLETION, COMMENT, ENABLE /\nDISABLE, and DO clauses is exactly the same as when used with CREATE\nEVENT. (See [HELP CREATE EVENT].)\n\nAny user can alter an event defined on a database for which that user\nhas the EVENT privilege. When a user executes a successful ALTER EVENT\nstatement, that user becomes the definer for the affected event.\n\nALTER EVENT works only with an existing event:\n\nmysql> ALTER EVENT no_such_event \n     >     ON SCHEDULE \n     >       EVERY \'2:3\' DAY_HOUR;\nERROR 1517 (HY000): Unknown event \'no_such_event\'\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-event.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-event.html'),(490,'ALTER FUNCTION',33,'Syntax:\nALTER FUNCTION func_name [characteristic ...]\n\ncharacteristic:\n    COMMENT \'string\'\n  | LANGUAGE SQL\n  | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }\n  | SQL SECURITY { DEFINER | INVOKER }\n\nThis statement can be used to change the characteristics of a stored\nfunction. More than one change may be specified in an ALTER FUNCTION\nstatement. However, you cannot change the parameters or body of a\nstored function using this statement; to make such changes, you must\ndrop and re-create the function using DROP FUNCTION and CREATE\nFUNCTION.\n\nYou must have the ALTER ROUTINE privilege for the function. (That\nprivilege is granted automatically to the function creator.) If binary\nlogging is enabled, the ALTER FUNCTION statement might also require the\nSUPER privilege, as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-programs-logging.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-function.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-function.html'),(491,'ALTER INSTANCE',33,'Syntax:\nALTER INSTANCE ROTATE INNODB MASTER KEY\n\nALTER INSTANCE, introduced in MySQL 5.7.11, defines actions applicable\nto a MySQL server instance.\n\nThe ALTER INSTANCE ROTATE INNODB MASTER KEY statement is used to rotate\nthe master encryption key used for InnoDB tablespace encryption. A\nkeyring plugin must be installed and configured to use this statement.\nFor information about keyring plugins, see\nhttps://dev.mysql.com/doc/refman/5.7/en/keyring.html. Key rotation\nrequires the SUPER privilege.\n\nALTER INSTANCE ROTATE INNODB MASTER KEY supports concurrent DML.\nHowever, it cannot be run concurrently with CREATE TABLE ... ENCRYPTION\nor ALTER TABLE ... ENCRYPTION operations, and locks are taken to\nprevent conflicts that could arise from concurrent execution of these\nstatements. If one of the conflicting statements is running, it must\ncomplete before another can proceed.\n\nALTER INSTANCE actions are written to the binary log so that they can\nbe executed on replicated servers.\n\nFor additional ALTER INSTANCE ROTATE INNODB MASTER KEY usage\ninformation, see\nhttps://dev.mysql.com/doc/refman/5.7/en/innodb-tablespace-encryption.ht\nml. For information about keyring plugins, see\nhttps://dev.mysql.com/doc/refman/5.7/en/keyring.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-instance.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-instance.html'),(492,'ALTER LOGFILE GROUP',33,'Syntax:\nALTER LOGFILE GROUP logfile_group\n    ADD UNDOFILE \'file_name\'\n    [INITIAL_SIZE [=] size]\n    [WAIT]\n    ENGINE [=] engine_name\n\nThis statement adds an UNDO file named \'file_name\' to an existing log\nfile group logfile_group. An ALTER LOGFILE GROUP statement has one and\nonly one ADD UNDOFILE clause. No DROP UNDOFILE clause is currently\nsupported.\n\n*Note*:\n\nAll NDB Cluster Disk Data objects share the same namespace. This means\nthat each Disk Data object must be uniquely named (and not merely each\nDisk Data object of a given type). For example, you cannot have a\ntablespace and an undo log file with the same name, or an undo log file\nand a data file with the same name.\n\nThe optional INITIAL_SIZE parameter sets the UNDO file\'s initial size\nin bytes; if not specified, the initial size defaults to 134217728 (128\nMB). You may optionally follow size with a one-letter abbreviation for\nan order of magnitude, similar to those used in my.cnf. Generally, this\nis one of the letters M (megabytes) or G (gigabytes). (Bug #13116514,\nBug #16104705, Bug #62858)\n\nOn 32-bit systems, the maximum supported value for INITIAL_SIZE is\n4294967296 (4 GB). (Bug #29186)\n\nThe minimum allowed value for INITIAL_SIZE is 1048576 (1 MB). (Bug\n#29574)\n\n*Note*:\n\nWAIT is parsed but otherwise ignored. This keyword currently has no\neffect, and is intended for future expansion.\n\nThe ENGINE parameter (required) determines the storage engine which is\nused by this log file group, with engine_name being the name of the\nstorage engine. Currently, the only accepted values for engine_name are\n\"NDBCLUSTER\" and \"NDB\". The two values are equivalent.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-logfile-group.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-logfile-group.html'),(493,'ALTER PROCEDURE',33,'Syntax:\nALTER PROCEDURE proc_name [characteristic ...]\n\ncharacteristic:\n    COMMENT \'string\'\n  | LANGUAGE SQL\n  | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }\n  | SQL SECURITY { DEFINER | INVOKER }\n\nThis statement can be used to change the characteristics of a stored\nprocedure. More than one change may be specified in an ALTER PROCEDURE\nstatement. However, you cannot change the parameters or body of a\nstored procedure using this statement; to make such changes, you must\ndrop and re-create the procedure using DROP PROCEDURE and CREATE\nPROCEDURE.\n\nYou must have the ALTER ROUTINE privilege for the procedure. By\ndefault, that privilege is granted automatically to the procedure\ncreator. This behavior can be changed by disabling the\nautomatic_sp_privileges system variable. See\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-routines-privileges.html\n.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-procedure.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-procedure.html'),(494,'ALTER SERVER',33,'Syntax:\nALTER SERVER  server_name\n    OPTIONS (option [, option] ...)\n\nAlters the server information for server_name, adjusting any of the\noptions permitted in the CREATE SERVER statement. The corresponding\nfields in the mysql.servers table are updated accordingly. This\nstatement requires the SUPER privilege.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-server.html\n\n','ALTER SERVER s OPTIONS (USER \'sally\');\n','https://dev.mysql.com/doc/refman/5.7/en/alter-server.html'),(495,'ALTER TABLE',33,'Syntax:\nALTER TABLE tbl_name\n    [alter_specification [, alter_specification] ...]\n    [partition_options]\n\nalter_specification:\n    table_options\n  | ADD [COLUMN] col_name column_definition\n        [FIRST | AFTER col_name]\n  | ADD [COLUMN] (col_name column_definition,...)\n  | ADD {INDEX|KEY} [index_name]\n        [index_type] (key_part,...) [index_option] ...\n  | ADD {FULLTEXT|SPATIAL} [INDEX|KEY] [index_name]\n        (key_part,...) [index_option] ...\n  | ADD [CONSTRAINT [symbol]] PRIMARY KEY\n        [index_type] (key_part,...)\n        [index_option] ...\n  | ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY]\n        [index_name] [index_type] (key_part,...)\n        [index_option] ...\n  | ADD [CONSTRAINT [symbol]] FOREIGN KEY\n        [index_name] (col_name,...)\n        reference_definition\n  | ADD CHECK (expr)\n  | ALGORITHM [=] {DEFAULT|INPLACE|COPY}\n  | ALTER [COLUMN] col_name {SET DEFAULT literal | DROP DEFAULT}\n  | CHANGE [COLUMN] old_col_name new_col_name column_definition\n        [FIRST|AFTER col_name]\n  | [DEFAULT] CHARACTER SET [=] charset_name [COLLATE [=] collation_name]\n  | CONVERT TO CHARACTER SET charset_name [COLLATE collation_name]\n  | {DISABLE|ENABLE} KEYS\n  | {DISCARD|IMPORT} TABLESPACE\n  | DROP [COLUMN] col_name\n  | DROP {INDEX|KEY} index_name\n  | DROP PRIMARY KEY\n  | DROP FOREIGN KEY fk_symbol\n  | FORCE\n  | LOCK [=] {DEFAULT|NONE|SHARED|EXCLUSIVE}\n  | MODIFY [COLUMN] col_name column_definition\n        [FIRST | AFTER col_name]\n  | ORDER BY col_name [, col_name] ...\n  | RENAME {INDEX|KEY} old_index_name TO new_index_name\n  | RENAME [TO|AS] new_tbl_name\n  | {WITHOUT|WITH} VALIDATION\n  | ADD PARTITION (partition_definition)\n  | DROP PARTITION partition_names\n  | DISCARD PARTITION {partition_names | ALL} TABLESPACE\n  | IMPORT PARTITION {partition_names | ALL} TABLESPACE\n  | TRUNCATE PARTITION {partition_names | ALL}\n  | COALESCE PARTITION number\n  | REORGANIZE PARTITION partition_names INTO (partition_definitions)\n  | EXCHANGE PARTITION partition_name WITH TABLE tbl_name [{WITH|WITHOUT} VALIDATION]\n  | ANALYZE PARTITION {partition_names | ALL}\n  | CHECK PARTITION {partition_names | ALL}\n  | OPTIMIZE PARTITION {partition_names | ALL}\n  | REBUILD PARTITION {partition_names | ALL}\n  | REPAIR PARTITION {partition_names | ALL}\n  | REMOVE PARTITIONING\n  | UPGRADE PARTITIONING\n\nkey_part:\n    col_name [(length)] [ASC | DESC]\n\nindex_type:\n    USING {BTREE | HASH}\n\nindex_option:\n    KEY_BLOCK_SIZE [=] value\n  | index_type\n  | WITH PARSER parser_name\n  | COMMENT \'string\'\n\ntable_options:\n    table_option [[,] table_option] ...\n\ntable_option:\n    AUTO_INCREMENT [=] value\n  | AVG_ROW_LENGTH [=] value\n  | [DEFAULT] CHARACTER SET [=] charset_name\n  | CHECKSUM [=] {0 | 1}\n  | [DEFAULT] COLLATE [=] collation_name\n  | COMMENT [=] \'string\'\n  | COMPRESSION [=] {\'ZLIB\'|\'LZ4\'|\'NONE\'}\n  | CONNECTION [=] \'connect_string\'\n  | {DATA|INDEX} DIRECTORY [=] \'absolute path to directory\'\n  | DELAY_KEY_WRITE [=] {0 | 1}\n  | ENCRYPTION [=] {\'Y\' | \'N\'}\n  | ENGINE [=] engine_name\n  | INSERT_METHOD [=] { NO | FIRST | LAST }\n  | KEY_BLOCK_SIZE [=] value\n  | MAX_ROWS [=] value\n  | MIN_ROWS [=] value\n  | PACK_KEYS [=] {0 | 1 | DEFAULT}\n  | PASSWORD [=] \'string\'\n  | ROW_FORMAT [=] {DEFAULT|DYNAMIC|FIXED|COMPRESSED|REDUNDANT|COMPACT}\n  | STATS_AUTO_RECALC [=] {DEFAULT|0|1}\n  | STATS_PERSISTENT [=] {DEFAULT|0|1}\n  | STATS_SAMPLE_PAGES [=] value\n  | TABLESPACE tablespace_name [STORAGE {DISK|MEMORY}]\n  | UNION [=] (tbl_name[,tbl_name]...)\n\npartition_options:\n    (see CREATE TABLE options)\n\nALTER TABLE changes the structure of a table. For example, you can add\nor delete columns, create or destroy indexes, change the type of\nexisting columns, or rename columns or the table itself. You can also\nchange characteristics such as the storage engine used for the table or\nthe table comment.\n\no To use ALTER TABLE, you need ALTER, CREATE, and INSERT privileges for\n  the table. Renaming a table requires ALTER and DROP on the old table,\n  ALTER, CREATE, and INSERT on the new table.\n\no Following the table name, specify the alterations to be made. If none\n  are given, ALTER TABLE does nothing.\n\no The syntax for many of the permissible alterations is similar to\n  clauses of the CREATE TABLE statement. column_definition clauses use\n  the same syntax for ADD and CHANGE as for CREATE TABLE. For more\n  information, see [HELP CREATE TABLE].\n\no The word COLUMN is optional and can be omitted.\n\no Multiple ADD, ALTER, DROP, and CHANGE clauses are permitted in a\n  single ALTER TABLE statement, separated by commas. This is a MySQL\n  extension to standard SQL, which permits only one of each clause per\n  ALTER TABLE statement. For example, to drop multiple columns in a\n  single statement, do this:\n\nALTER TABLE t2 DROP COLUMN c, DROP COLUMN d;\n\no If a storage engine does not support an attempted ALTER TABLE\n  operation, a warning may result. Such warnings can be displayed with\n  SHOW WARNINGS. See [HELP SHOW WARNINGS]. For information on\n  troubleshooting ALTER TABLE, see\n  https://dev.mysql.com/doc/refman/5.7/en/alter-table-problems.html.\n\no For information about generated columns, see\n  https://dev.mysql.com/doc/refman/5.7/en/alter-table-generated-columns\n  .html.\n\no For usage examples, see\n  https://dev.mysql.com/doc/refman/5.7/en/alter-table-examples.html.\n\no With the mysql_info() C API function, you can find out how many rows\n  were copied by ALTER TABLE. See\n  https://dev.mysql.com/doc/refman/5.7/en/mysql-info.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-table.html'),(496,'ALTER TABLESPACE',33,'Syntax:\nALTER TABLESPACE tablespace_name\n    {ADD|DROP} DATAFILE \'file_name\'\n    [INITIAL_SIZE [=] size]\n    [WAIT]\n    ENGINE [=] engine_name\n\nThis statement is used either to add a new data file, or to drop a data\nfile from a tablespace.\n\nThe ADD DATAFILE variant enables you to specify an initial size using\nan INITIAL_SIZE clause, where size is measured in bytes; the default\nvalue is 134217728 (128 MB). You may optionally follow size with a\none-letter abbreviation for an order of magnitude, similar to those\nused in my.cnf. Generally, this is one of the letters M (megabytes) or\nG (gigabytes).\n\n*Note*:\n\nAll NDB Cluster Disk Data objects share the same namespace. This means\nthat each Disk Data object must be uniquely named (and not merely each\nDisk Data object of a given type). For example, you cannot have a\ntablespace and a data file with the same name, or an undo log file and\na tablespace with the same name.\n\nOn 32-bit systems, the maximum supported value for INITIAL_SIZE is\n4294967296 (4 GB). (Bug #29186)\n\nINITIAL_SIZE is rounded, explicitly, as for CREATE TABLESPACE.\n\nOnce a data file has been created, its size cannot be changed; however,\nyou can add more data files to the tablespace using additional ALTER\nTABLESPACE ... ADD DATAFILE statements.\n\nUsing DROP DATAFILE with ALTER TABLESPACE drops the data file\n\'file_name\' from the tablespace. You cannot drop a data file from a\ntablespace which is in use by any table; in other words, the data file\nmust be empty (no extents used). See\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-disk-data-objects\n.html. In addition, any data file to be dropped must previously have\nbeen added to the tablespace with CREATE TABLESPACE or ALTER\nTABLESPACE.\n\nBoth ALTER TABLESPACE ... ADD DATAFILE and ALTER TABLESPACE ... DROP\nDATAFILE require an ENGINE clause which specifies the storage engine\nused by the tablespace. Currently, the only accepted values for\nengine_name are NDB and NDBCLUSTER.\n\nWAIT is parsed but otherwise ignored, and so has no effect in MySQL\n5.7. It is intended for future expansion.\n\nWhen ALTER TABLESPACE ... ADD DATAFILE is used with ENGINE = NDB, a\ndata file is created on each Cluster data node. You can verify that the\ndata files were created and obtain information about them by querying\nthe INFORMATION_SCHEMA.FILES table. For example, the following query\nshows all data files belonging to the tablespace named newts:\n\nmysql> SELECT LOGFILE_GROUP_NAME, FILE_NAME, EXTRA\n    -> FROM INFORMATION_SCHEMA.FILES\n    -> WHERE TABLESPACE_NAME = \'newts\' AND FILE_TYPE = \'DATAFILE\';\n+--------------------+--------------+----------------+\n| LOGFILE_GROUP_NAME | FILE_NAME    | EXTRA          |\n+--------------------+--------------+----------------+\n| lg_3               | newdata.dat  | CLUSTER_NODE=3 |\n| lg_3               | newdata.dat  | CLUSTER_NODE=4 |\n| lg_3               | newdata2.dat | CLUSTER_NODE=3 |\n| lg_3               | newdata2.dat | CLUSTER_NODE=4 |\n+--------------------+--------------+----------------+\n2 rows in set (0.03 sec)\n\nSee https://dev.mysql.com/doc/refman/5.7/en/files-table.html.\n\nALTER TABLESPACE is useful only with Disk Data storage for NDB Cluster.\nSee\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-disk-data.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-tablespace.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-tablespace.html'),(497,'ALTER VIEW',33,'Syntax:\nALTER\n    [ALGORITHM = {UNDEFINED | MERGE | TEMPTABLE}]\n    [DEFINER = user]\n    [SQL SECURITY { DEFINER | INVOKER }]\n    VIEW view_name [(column_list)]\n    AS select_statement\n    [WITH [CASCADED | LOCAL] CHECK OPTION]\n\nThis statement changes the definition of a view, which must exist. The\nsyntax is similar to that for CREATE VIEW see [HELP CREATE VIEW]). This\nstatement requires the CREATE VIEW and DROP privileges for the view,\nand some privilege for each column referred to in the SELECT statement.\nALTER VIEW is permitted only to the definer or users with the SUPER\nprivilege.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-view.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-view.html'),(498,'CREATE DATABASE',33,'Syntax:\nCREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name\n    [create_specification] ...\n\ncreate_specification:\n    [DEFAULT] CHARACTER SET [=] charset_name\n  | [DEFAULT] COLLATE [=] collation_name\n\nCREATE DATABASE creates a database with the given name. To use this\nstatement, you need the CREATE privilege for the database. CREATE\nSCHEMA is a synonym for CREATE DATABASE.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-database.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-database.html'),(499,'CREATE SCHEMA',33,'Syntax:\nCREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name\n    [create_specification] ...\n\ncreate_specification:\n    [DEFAULT] CHARACTER SET [=] charset_name\n  | [DEFAULT] COLLATE [=] collation_name\n\nCREATE DATABASE creates a database with the given name. To use this\nstatement, you need the CREATE privilege for the database. CREATE\nSCHEMA is a synonym for CREATE DATABASE.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-database.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-database.html'),(500,'CREATE EVENT',33,'Syntax:\nCREATE\n    [DEFINER = user]\n    EVENT\n    [IF NOT EXISTS]\n    event_name\n    ON SCHEDULE schedule\n    [ON COMPLETION [NOT] PRESERVE]\n    [ENABLE | DISABLE | DISABLE ON SLAVE]\n    [COMMENT \'string\']\n    DO event_body;\n\nschedule:\n    AT timestamp [+ INTERVAL interval] ...\n  | EVERY interval\n    [STARTS timestamp [+ INTERVAL interval] ...]\n    [ENDS timestamp [+ INTERVAL interval] ...]\n\ninterval:\n    quantity {YEAR | QUARTER | MONTH | DAY | HOUR | MINUTE |\n              WEEK | SECOND | YEAR_MONTH | DAY_HOUR | DAY_MINUTE |\n              DAY_SECOND | HOUR_MINUTE | HOUR_SECOND | MINUTE_SECOND}\n\nThis statement creates and schedules a new event. The event will not\nrun unless the Event Scheduler is enabled. For information about\nchecking Event Scheduler status and enabling it if necessary, see\nhttps://dev.mysql.com/doc/refman/5.7/en/events-configuration.html.\n\nCREATE EVENT requires the EVENT privilege for the schema in which the\nevent is to be created. If the DEFINER clause is present, the\nprivileges required depend on the user value, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-objects-security.html.\n\nThe minimum requirements for a valid CREATE EVENT statement are as\nfollows:\n\no The keywords CREATE EVENT plus an event name, which uniquely\n  identifies the event in a database schema.\n\no An ON SCHEDULE clause, which determines when and how often the event\n  executes.\n\no A DO clause, which contains the SQL statement to be executed by an\n  event.\n\nThis is an example of a minimal CREATE EVENT statement:\n\nCREATE EVENT myevent\n    ON SCHEDULE AT CURRENT_TIMESTAMP + INTERVAL 1 HOUR\n    DO\n      UPDATE myschema.mytable SET mycol = mycol + 1;\n\nThe previous statement creates an event named myevent. This event\nexecutes once---one hour following its creation---by running an SQL\nstatement that increments the value of the myschema.mytable table\'s\nmycol column by 1.\n\nThe event_name must be a valid MySQL identifier with a maximum length\nof 64 characters. Event names are not case-sensitive, so you cannot\nhave two events named myevent and MyEvent in the same schema. In\ngeneral, the rules governing event names are the same as those for\nnames of stored routines. See\nhttps://dev.mysql.com/doc/refman/5.7/en/identifiers.html.\n\nAn event is associated with a schema. If no schema is indicated as part\nof event_name, the default (current) schema is assumed. To create an\nevent in a specific schema, qualify the event name with a schema using\nschema_name.event_name syntax.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-event.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-event.html'),(501,'CREATE INDEX',33,'Syntax:\nCREATE [UNIQUE | FULLTEXT | SPATIAL] INDEX index_name\n    [index_type]\n    ON tbl_name (key_part,...)\n    [index_option]\n    [algorithm_option | lock_option] ...\n\nkey_part:\n    col_name [(length)] [ASC | DESC]\n\nindex_option:\n    KEY_BLOCK_SIZE [=] value\n  | index_type\n  | WITH PARSER parser_name\n  | COMMENT \'string\'\n\nindex_type:\n    USING {BTREE | HASH}\n\nalgorithm_option:\n    ALGORITHM [=] {DEFAULT | INPLACE | COPY}\n\nlock_option:\n    LOCK [=] {DEFAULT | NONE | SHARED | EXCLUSIVE}\n\nNormally, you create all indexes on a table at the time the table\nitself is created with CREATE TABLE. See [HELP CREATE TABLE]. This\nguideline is especially important for InnoDB tables, where the primary\nkey determines the physical layout of rows in the data file. CREATE\nINDEX enables you to add indexes to existing tables.\n\nCREATE INDEX is mapped to an ALTER TABLE statement to create indexes.\nSee [HELP ALTER TABLE]. CREATE INDEX cannot be used to create a PRIMARY\nKEY; use ALTER TABLE instead. For more information about indexes, see\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-indexes.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-index.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-index.html'),(502,'CREATE LOGFILE GROUP',33,'Syntax:\nCREATE LOGFILE GROUP logfile_group\n    ADD UNDOFILE \'undo_file\'\n    [INITIAL_SIZE [=] initial_size]\n    [UNDO_BUFFER_SIZE [=] undo_buffer_size]\n    [REDO_BUFFER_SIZE [=] redo_buffer_size]\n    [NODEGROUP [=] nodegroup_id]\n    [WAIT]\n    [COMMENT [=] \'string\']\n    ENGINE [=] engine_name\n\nThis statement creates a new log file group named logfile_group having\na single UNDO file named \'undo_file\'. A CREATE LOGFILE GROUP statement\nhas one and only one ADD UNDOFILE clause. For rules covering the naming\nof log file groups, see\nhttps://dev.mysql.com/doc/refman/5.7/en/identifiers.html.\n\n*Note*:\n\nAll NDB Cluster Disk Data objects share the same namespace. This means\nthat each Disk Data object must be uniquely named (and not merely each\nDisk Data object of a given type). For example, you cannot have a\ntablespace and a log file group with the same name, or a tablespace and\na data file with the same name.\n\nThere can be only one log file group per NDB Cluster instance at any\ngiven time.\n\nThe optional INITIAL_SIZE parameter sets the UNDO file\'s initial size;\nif not specified, it defaults to 128M (128 megabytes). The optional\nUNDO_BUFFER_SIZE parameter sets the size used by the UNDO buffer for\nthe log file group; The default value for UNDO_BUFFER_SIZE is 8M (eight\nmegabytes); this value cannot exceed the amount of system memory\navailable. Both of these parameters are specified in bytes. You may\noptionally follow either or both of these with a one-letter\nabbreviation for an order of magnitude, similar to those used in\nmy.cnf. Generally, this is one of the letters M (for megabytes) or G\n(for gigabytes).\n\nMemory used for UNDO_BUFFER_SIZE comes from the global pool whose size\nis determined by the value of the SharedGlobalMemory data node\nconfiguration parameter. This includes any default value implied for\nthis option by the setting of the InitialLogFileGroup data node\nconfiguration parameter.\n\nThe maximum permitted for UNDO_BUFFER_SIZE is 629145600 (600 MB).\n\nOn 32-bit systems, the maximum supported value for INITIAL_SIZE is\n4294967296 (4 GB). (Bug #29186)\n\nThe minimum allowed value for INITIAL_SIZE is 1048576 (1 MB).\n\nThe ENGINE option determines the storage engine to be used by this log\nfile group, with engine_name being the name of the storage engine. In\nMySQL 5.7, this must be NDB (or NDBCLUSTER). If ENGINE is not set,\nMySQL tries to use the engine specified by the default_storage_engine\nserver system variable (formerly storage_engine). In any case, if the\nengine is not specified as NDB or NDBCLUSTER, the CREATE LOGFILE GROUP\nstatement appears to succeed but actually fails to create the log file\ngroup, as shown here:\n\nmysql> CREATE LOGFILE GROUP lg1\n    ->     ADD UNDOFILE \'undo.dat\' INITIAL_SIZE = 10M;\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS;\n+-------+------+------------------------------------------------------------------------------------------------+\n| Level | Code | Message                                                                                        |\n+-------+------+------------------------------------------------------------------------------------------------+\n| Error | 1478 | Table storage engine \'InnoDB\' does not support the create option \'TABLESPACE or LOGFILE GROUP\' |\n+-------+------+------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> DROP LOGFILE GROUP lg1 ENGINE = NDB;            \nERROR 1529 (HY000): Failed to drop LOGFILE GROUP\n\nmysql> CREATE LOGFILE GROUP lg1\n    ->     ADD UNDOFILE \'undo.dat\' INITIAL_SIZE = 10M\n    ->     ENGINE = NDB;\nQuery OK, 0 rows affected (2.97 sec)\n\nThe fact that the CREATE LOGFILE GROUP statement does not actually\nreturn an error when a non-NDB storage engine is named, but rather\nappears to succeed, is a known issue which we hope to address in a\nfuture release of NDB Cluster.\n\nREDO_BUFFER_SIZE, NODEGROUP, WAIT, and COMMENT are parsed but ignored,\nand so have no effect in MySQL 5.7. These options are intended for\nfuture expansion.\n\nWhen used with ENGINE [=] NDB, a log file group and associated UNDO log\nfile are created on each Cluster data node. You can verify that the\nUNDO files were created and obtain information about them by querying\nthe INFORMATION_SCHEMA.FILES table. For example:\n\nmysql> SELECT LOGFILE_GROUP_NAME, LOGFILE_GROUP_NUMBER, EXTRA\n    -> FROM INFORMATION_SCHEMA.FILES\n    -> WHERE FILE_NAME = \'undo_10.dat\';\n+--------------------+----------------------+----------------+\n| LOGFILE_GROUP_NAME | LOGFILE_GROUP_NUMBER | EXTRA          |\n+--------------------+----------------------+----------------+\n| lg_3               |                   11 | CLUSTER_NODE=3 |\n| lg_3               |                   11 | CLUSTER_NODE=4 |\n+--------------------+----------------------+----------------+\n2 rows in set (0.06 sec)\n\nCREATE LOGFILE GROUP is useful only with Disk Data storage for NDB\nCluster. See\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-disk-data.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-logfile-group.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-logfile-group.html'),(503,'CREATE PROCEDURE',33,'Syntax:\nCREATE\n    [DEFINER = user]\n    PROCEDURE sp_name ([proc_parameter[,...]])\n    [characteristic ...] routine_body\n\nCREATE\n    [DEFINER = user]\n    FUNCTION sp_name ([func_parameter[,...]])\n    RETURNS type\n    [characteristic ...] routine_body\n\nproc_parameter:\n    [ IN | OUT | INOUT ] param_name type\n\nfunc_parameter:\n    param_name type\n\ntype:\n    Any valid MySQL data type\n\ncharacteristic:\n    COMMENT \'string\'\n  | LANGUAGE SQL\n  | [NOT] DETERMINISTIC\n  | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }\n  | SQL SECURITY { DEFINER | INVOKER }\n\nroutine_body:\n    Valid SQL routine statement\n\nThese statements create stored routines. By default, a routine is\nassociated with the default database. To associate the routine\nexplicitly with a given database, specify the name as db_name.sp_name\nwhen you create it.\n\nThe CREATE FUNCTION statement is also used in MySQL to support UDFs\n(user-defined functions). See\nhttps://dev.mysql.com/doc/refman/5.7/en/adding-functions.html. A UDF\ncan be regarded as an external stored function. Stored functions share\ntheir namespace with UDFs. See\nhttps://dev.mysql.com/doc/refman/5.7/en/function-resolution.html, for\nthe rules describing how the server interprets references to different\nkinds of functions.\n\nTo invoke a stored procedure, use the CALL statement (see [HELP CALL]).\nTo invoke a stored function, refer to it in an expression. The function\nreturns a value during expression evaluation.\n\nCREATE PROCEDURE and CREATE FUNCTION require the CREATE ROUTINE\nprivilege. If the DEFINER clause is present, the privileges required\ndepend on the user value, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-objects-security.html.\nIf binary logging is enabled, CREATE FUNCTION might require the SUPER\nprivilege, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-programs-logging.html.\n\nBy default, MySQL automatically grants the ALTER ROUTINE and EXECUTE\nprivileges to the routine creator. This behavior can be changed by\ndisabling the automatic_sp_privileges system variable. See\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-routines-privileges.html\n.\n\nThe DEFINER and SQL SECURITY clauses specify the security context to be\nused when checking access privileges at routine execution time, as\ndescribed later in this section.\n\nIf the routine name is the same as the name of a built-in SQL function,\na syntax error occurs unless you use a space between the name and the\nfollowing parenthesis when defining the routine or invoking it later.\nFor this reason, avoid using the names of existing SQL functions for\nyour own stored routines.\n\nThe IGNORE_SPACE SQL mode applies to built-in functions, not to stored\nroutines. It is always permissible to have spaces after a stored\nroutine name, regardless of whether IGNORE_SPACE is enabled.\n\nThe parameter list enclosed within parentheses must always be present.\nIf there are no parameters, an empty parameter list of () should be\nused. Parameter names are not case sensitive.\n\nEach parameter is an IN parameter by default. To specify otherwise for\na parameter, use the keyword OUT or INOUT before the parameter name.\n\n*Note*:\n\nSpecifying a parameter as IN, OUT, or INOUT is valid only for a\nPROCEDURE. For a FUNCTION, parameters are always regarded as IN\nparameters.\n\nAn IN parameter passes a value into a procedure. The procedure might\nmodify the value, but the modification is not visible to the caller\nwhen the procedure returns. An OUT parameter passes a value from the\nprocedure back to the caller. Its initial value is NULL within the\nprocedure, and its value is visible to the caller when the procedure\nreturns. An INOUT parameter is initialized by the caller, can be\nmodified by the procedure, and any change made by the procedure is\nvisible to the caller when the procedure returns.\n\nFor each OUT or INOUT parameter, pass a user-defined variable in the\nCALL statement that invokes the procedure so that you can obtain its\nvalue when the procedure returns. If you are calling the procedure from\nwithin another stored procedure or function, you can also pass a\nroutine parameter or local routine variable as an OUT or INOUT\nparameter. If you are calling the procedure from within a trigger, you\ncan also pass NEW.col_name as an OUT or INOUT parameter.\n\nFor information about the effect of unhandled conditions on procedure\nparameters, see\nhttps://dev.mysql.com/doc/refman/5.7/en/conditions-and-parameters.html.\n\nRoutine parameters cannot be referenced in statements prepared within\nthe routine; see\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-program-restrictions.htm\nl.\n\nThe following example shows a simple stored procedure that uses an OUT\nparameter:\n\nmysql> delimiter //\n\nmysql> CREATE PROCEDURE simpleproc (OUT param1 INT)\n    -> BEGIN\n    ->   SELECT COUNT(*) INTO param1 FROM t;\n    -> END//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> delimiter ;\n\nmysql> CALL simpleproc(@a);\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @a;\n+------+\n| @a   |\n+------+\n| 3    |\n+------+\n1 row in set (0.00 sec)\n\nThe example uses the mysql client delimiter command to change the\nstatement delimiter from ; to // while the procedure is being defined.\nThis enables the ; delimiter used in the procedure body to be passed\nthrough to the server rather than being interpreted by mysql itself.\nSee\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-programs-defining.html.\n\nThe RETURNS clause may be specified only for a FUNCTION, for which it\nis mandatory. It indicates the return type of the function, and the\nfunction body must contain a RETURN value statement. If the RETURN\nstatement returns a value of a different type, the value is coerced to\nthe proper type. For example, if a function specifies an ENUM or SET\nvalue in the RETURNS clause, but the RETURN statement returns an\ninteger, the value returned from the function is the string for the\ncorresponding ENUM member of set of SET members.\n\nThe following example function takes a parameter, performs an operation\nusing an SQL function, and returns the result. In this case, it is\nunnecessary to use delimiter because the function definition contains\nno internal ; statement delimiters:\n\nmysql> CREATE FUNCTION hello (s CHAR(20))\nmysql> RETURNS CHAR(50) DETERMINISTIC\n    -> RETURN CONCAT(\'Hello, \',s,\'!\');\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT hello(\'world\');\n+----------------+\n| hello(\'world\') |\n+----------------+\n| Hello, world!  |\n+----------------+\n1 row in set (0.00 sec)\n\nParameter types and function return types can be declared to use any\nvalid data type. The COLLATE attribute can be used if preceded by a\nCHARACTER SET specification.\n\nThe routine_body consists of a valid SQL routine statement. This can be\na simple statement such as SELECT or INSERT, or a compound statement\nwritten using BEGIN and END. Compound statements can contain\ndeclarations, loops, and other control structure statements. The syntax\nfor these statements is described in\nhttps://dev.mysql.com/doc/refman/5.7/en/sql-syntax-compound-statements.\nhtml. In practice, stored functions tend to use compound statements,\nunless the body consists of a single RETURN statement.\n\nMySQL permits routines to contain DDL statements, such as CREATE and\nDROP. MySQL also permits stored procedures (but not stored functions)\nto contain SQL transaction statements such as COMMIT. Stored functions\nmay not contain statements that perform explicit or implicit commit or\nrollback. Support for these statements is not required by the SQL\nstandard, which states that each DBMS vendor may decide whether to\npermit them.\n\nStatements that return a result set can be used within a stored\nprocedure but not within a stored function. This prohibition includes\nSELECT statements that do not have an INTO var_list clause and other\nstatements such as SHOW, EXPLAIN, and CHECK TABLE. For statements that\ncan be determined at function definition time to return a result set, a\nNot allowed to return a result set from a function error occurs\n(ER_SP_NO_RETSET). For statements that can be determined only at\nruntime to return a result set, a PROCEDURE %s can\'t return a result\nset in the given context error occurs (ER_SP_BADSELECT).\n\nUSE statements within stored routines are not permitted. When a routine\nis invoked, an implicit USE db_name is performed (and undone when the\nroutine terminates). The causes the routine to have the given default\ndatabase while it executes. References to objects in databases other\nthan the routine default database should be qualified with the\nappropriate database name.\n\nFor additional information about statements that are not permitted in\nstored routines, see\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-program-restrictions.htm\nl.\n\nFor information about invoking stored procedures from within programs\nwritten in a language that has a MySQL interface, see [HELP CALL].\n\nMySQL stores the sql_mode system variable setting in effect when a\nroutine is created or altered, and always executes the routine with\nthis setting in force, regardless of the current server SQL mode when\nthe routine begins executing.\n\nThe switch from the SQL mode of the invoker to that of the routine\noccurs after evaluation of arguments and assignment of the resulting\nvalues to routine parameters. If you define a routine in strict SQL\nmode but invoke it in nonstrict mode, assignment of arguments to\nroutine parameters does not take place in strict mode. If you require\nthat expressions passed to a routine be assigned in strict SQL mode,\nyou should invoke the routine with strict mode in effect.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-procedure.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-procedure.html'),(504,'CREATE FUNCTION',33,'Syntax:\nCREATE\n    [DEFINER = user]\n    PROCEDURE sp_name ([proc_parameter[,...]])\n    [characteristic ...] routine_body\n\nCREATE\n    [DEFINER = user]\n    FUNCTION sp_name ([func_parameter[,...]])\n    RETURNS type\n    [characteristic ...] routine_body\n\nproc_parameter:\n    [ IN | OUT | INOUT ] param_name type\n\nfunc_parameter:\n    param_name type\n\ntype:\n    Any valid MySQL data type\n\ncharacteristic:\n    COMMENT \'string\'\n  | LANGUAGE SQL\n  | [NOT] DETERMINISTIC\n  | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }\n  | SQL SECURITY { DEFINER | INVOKER }\n\nroutine_body:\n    Valid SQL routine statement\n\nThese statements create stored routines. By default, a routine is\nassociated with the default database. To associate the routine\nexplicitly with a given database, specify the name as db_name.sp_name\nwhen you create it.\n\nThe CREATE FUNCTION statement is also used in MySQL to support UDFs\n(user-defined functions). See\nhttps://dev.mysql.com/doc/refman/5.7/en/adding-functions.html. A UDF\ncan be regarded as an external stored function. Stored functions share\ntheir namespace with UDFs. See\nhttps://dev.mysql.com/doc/refman/5.7/en/function-resolution.html, for\nthe rules describing how the server interprets references to different\nkinds of functions.\n\nTo invoke a stored procedure, use the CALL statement (see [HELP CALL]).\nTo invoke a stored function, refer to it in an expression. The function\nreturns a value during expression evaluation.\n\nCREATE PROCEDURE and CREATE FUNCTION require the CREATE ROUTINE\nprivilege. If the DEFINER clause is present, the privileges required\ndepend on the user value, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-objects-security.html.\nIf binary logging is enabled, CREATE FUNCTION might require the SUPER\nprivilege, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-programs-logging.html.\n\nBy default, MySQL automatically grants the ALTER ROUTINE and EXECUTE\nprivileges to the routine creator. This behavior can be changed by\ndisabling the automatic_sp_privileges system variable. See\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-routines-privileges.html\n.\n\nThe DEFINER and SQL SECURITY clauses specify the security context to be\nused when checking access privileges at routine execution time, as\ndescribed later in this section.\n\nIf the routine name is the same as the name of a built-in SQL function,\na syntax error occurs unless you use a space between the name and the\nfollowing parenthesis when defining the routine or invoking it later.\nFor this reason, avoid using the names of existing SQL functions for\nyour own stored routines.\n\nThe IGNORE_SPACE SQL mode applies to built-in functions, not to stored\nroutines. It is always permissible to have spaces after a stored\nroutine name, regardless of whether IGNORE_SPACE is enabled.\n\nThe parameter list enclosed within parentheses must always be present.\nIf there are no parameters, an empty parameter list of () should be\nused. Parameter names are not case sensitive.\n\nEach parameter is an IN parameter by default. To specify otherwise for\na parameter, use the keyword OUT or INOUT before the parameter name.\n\n*Note*:\n\nSpecifying a parameter as IN, OUT, or INOUT is valid only for a\nPROCEDURE. For a FUNCTION, parameters are always regarded as IN\nparameters.\n\nAn IN parameter passes a value into a procedure. The procedure might\nmodify the value, but the modification is not visible to the caller\nwhen the procedure returns. An OUT parameter passes a value from the\nprocedure back to the caller. Its initial value is NULL within the\nprocedure, and its value is visible to the caller when the procedure\nreturns. An INOUT parameter is initialized by the caller, can be\nmodified by the procedure, and any change made by the procedure is\nvisible to the caller when the procedure returns.\n\nFor each OUT or INOUT parameter, pass a user-defined variable in the\nCALL statement that invokes the procedure so that you can obtain its\nvalue when the procedure returns. If you are calling the procedure from\nwithin another stored procedure or function, you can also pass a\nroutine parameter or local routine variable as an OUT or INOUT\nparameter. If you are calling the procedure from within a trigger, you\ncan also pass NEW.col_name as an OUT or INOUT parameter.\n\nFor information about the effect of unhandled conditions on procedure\nparameters, see\nhttps://dev.mysql.com/doc/refman/5.7/en/conditions-and-parameters.html.\n\nRoutine parameters cannot be referenced in statements prepared within\nthe routine; see\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-program-restrictions.htm\nl.\n\nThe following example shows a simple stored procedure that uses an OUT\nparameter:\n\nmysql> delimiter //\n\nmysql> CREATE PROCEDURE simpleproc (OUT param1 INT)\n    -> BEGIN\n    ->   SELECT COUNT(*) INTO param1 FROM t;\n    -> END//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> delimiter ;\n\nmysql> CALL simpleproc(@a);\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @a;\n+------+\n| @a   |\n+------+\n| 3    |\n+------+\n1 row in set (0.00 sec)\n\nThe example uses the mysql client delimiter command to change the\nstatement delimiter from ; to // while the procedure is being defined.\nThis enables the ; delimiter used in the procedure body to be passed\nthrough to the server rather than being interpreted by mysql itself.\nSee\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-programs-defining.html.\n\nThe RETURNS clause may be specified only for a FUNCTION, for which it\nis mandatory. It indicates the return type of the function, and the\nfunction body must contain a RETURN value statement. If the RETURN\nstatement returns a value of a different type, the value is coerced to\nthe proper type. For example, if a function specifies an ENUM or SET\nvalue in the RETURNS clause, but the RETURN statement returns an\ninteger, the value returned from the function is the string for the\ncorresponding ENUM member of set of SET members.\n\nThe following example function takes a parameter, performs an operation\nusing an SQL function, and returns the result. In this case, it is\nunnecessary to use delimiter because the function definition contains\nno internal ; statement delimiters:\n\nmysql> CREATE FUNCTION hello (s CHAR(20))\nmysql> RETURNS CHAR(50) DETERMINISTIC\n    -> RETURN CONCAT(\'Hello, \',s,\'!\');\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT hello(\'world\');\n+----------------+\n| hello(\'world\') |\n+----------------+\n| Hello, world!  |\n+----------------+\n1 row in set (0.00 sec)\n\nParameter types and function return types can be declared to use any\nvalid data type. The COLLATE attribute can be used if preceded by a\nCHARACTER SET specification.\n\nThe routine_body consists of a valid SQL routine statement. This can be\na simple statement such as SELECT or INSERT, or a compound statement\nwritten using BEGIN and END. Compound statements can contain\ndeclarations, loops, and other control structure statements. The syntax\nfor these statements is described in\nhttps://dev.mysql.com/doc/refman/5.7/en/sql-syntax-compound-statements.\nhtml. In practice, stored functions tend to use compound statements,\nunless the body consists of a single RETURN statement.\n\nMySQL permits routines to contain DDL statements, such as CREATE and\nDROP. MySQL also permits stored procedures (but not stored functions)\nto contain SQL transaction statements such as COMMIT. Stored functions\nmay not contain statements that perform explicit or implicit commit or\nrollback. Support for these statements is not required by the SQL\nstandard, which states that each DBMS vendor may decide whether to\npermit them.\n\nStatements that return a result set can be used within a stored\nprocedure but not within a stored function. This prohibition includes\nSELECT statements that do not have an INTO var_list clause and other\nstatements such as SHOW, EXPLAIN, and CHECK TABLE. For statements that\ncan be determined at function definition time to return a result set, a\nNot allowed to return a result set from a function error occurs\n(ER_SP_NO_RETSET). For statements that can be determined only at\nruntime to return a result set, a PROCEDURE %s can\'t return a result\nset in the given context error occurs (ER_SP_BADSELECT).\n\nUSE statements within stored routines are not permitted. When a routine\nis invoked, an implicit USE db_name is performed (and undone when the\nroutine terminates). The causes the routine to have the given default\ndatabase while it executes. References to objects in databases other\nthan the routine default database should be qualified with the\nappropriate database name.\n\nFor additional information about statements that are not permitted in\nstored routines, see\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-program-restrictions.htm\nl.\n\nFor information about invoking stored procedures from within programs\nwritten in a language that has a MySQL interface, see [HELP CALL].\n\nMySQL stores the sql_mode system variable setting in effect when a\nroutine is created or altered, and always executes the routine with\nthis setting in force, regardless of the current server SQL mode when\nthe routine begins executing.\n\nThe switch from the SQL mode of the invoker to that of the routine\noccurs after evaluation of arguments and assignment of the resulting\nvalues to routine parameters. If you define a routine in strict SQL\nmode but invoke it in nonstrict mode, assignment of arguments to\nroutine parameters does not take place in strict mode. If you require\nthat expressions passed to a routine be assigned in strict SQL mode,\nyou should invoke the routine with strict mode in effect.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-procedure.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-procedure.html'),(505,'CREATE SERVER',33,'Syntax:\nCREATE SERVER server_name\n    FOREIGN DATA WRAPPER wrapper_name\n    OPTIONS (option [, option] ...)\n\noption:\n  { HOST character-literal\n  | DATABASE character-literal\n  | USER character-literal\n  | PASSWORD character-literal\n  | SOCKET character-literal\n  | OWNER character-literal\n  | PORT numeric-literal }\n\nThis statement creates the definition of a server for use with the\nFEDERATED storage engine. The CREATE SERVER statement creates a new row\nin the servers table in the mysql database. This statement requires the\nSUPER privilege.\n\nThe server_name should be a unique reference to the server. Server\ndefinitions are global within the scope of the server, it is not\npossible to qualify the server definition to a specific database.\nserver_name has a maximum length of 64 characters (names longer than 64\ncharacters are silently truncated), and is case insensitive. You may\nspecify the name as a quoted string.\n\nThe wrapper_name is an identifier and may be quoted with single\nquotation marks.\n\nFor each option you must specify either a character literal or numeric\nliteral. Character literals are UTF-8, support a maximum length of 64\ncharacters and default to a blank (empty) string. String literals are\nsilently truncated to 64 characters. Numeric literals must be a number\nbetween 0 and 9999, default value is 0.\n\n*Note*:\n\nThe OWNER option is currently not applied, and has no effect on the\nownership or operation of the server connection that is created.\n\nThe CREATE SERVER statement creates an entry in the mysql.servers table\nthat can later be used with the CREATE TABLE statement when creating a\nFEDERATED table. The options that you specify will be used to populate\nthe columns in the mysql.servers table. The table columns are\nServer_name, Host, Db, Username, Password, Port and Socket.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-server.html\n\n','CREATE SERVER s\nFOREIGN DATA WRAPPER mysql\nOPTIONS (USER \'Remote\', HOST \'198.51.100.106\', DATABASE \'test\');\n','https://dev.mysql.com/doc/refman/5.7/en/create-server.html'),(506,'CREATE TABLE',33,'Syntax:\nCREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name\n    (create_definition,...)\n    [table_options]\n    [partition_options]\n\nCREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name\n    [(create_definition,...)]\n    [table_options]\n    [partition_options]\n    [IGNORE | REPLACE]\n    [AS] query_expression\n\nCREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name\n    { LIKE old_tbl_name | (LIKE old_tbl_name) }\n\ncreate_definition:\n    col_name column_definition\n  | {INDEX|KEY} [index_name] [index_type] (key_part,...)\n      [index_option] ...\n  | {FULLTEXT|SPATIAL} [INDEX|KEY] [index_name] (key_part,...)\n      [index_option] ...\n  | [CONSTRAINT [symbol]] PRIMARY KEY\n      [index_type] (key_part,...)\n      [index_option] ...\n  | [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY]\n      [index_name] [index_type] (key_part,...)\n      [index_option] ...\n  | [CONSTRAINT [symbol]] FOREIGN KEY\n      [index_name] (col_name,...)\n      reference_definition\n  | CHECK (expr)\n\ncolumn_definition:\n    data_type [NOT NULL | NULL] [DEFAULT default_value]\n      [AUTO_INCREMENT] [UNIQUE [KEY]] [[PRIMARY] KEY]\n      [COMMENT \'string\']\n      [COLLATE collation_name]\n      [COLUMN_FORMAT {FIXED|DYNAMIC|DEFAULT}]\n      [STORAGE {DISK|MEMORY}]\n      [reference_definition]\n  | data_type\n      [COLLATE collation_name]\n      [GENERATED ALWAYS] AS (expr)\n      [VIRTUAL | STORED] [NOT NULL | NULL]\n      [UNIQUE [KEY]] [[PRIMARY] KEY]\n      [COMMENT \'string\']\n      [reference_definition]\n\ndata_type:\n    (see https://dev.mysql.com/doc/refman/5.7/en/data-types.html)\n\nkey_part:\n    col_name [(length)] [ASC | DESC]\n\nindex_type:\n    USING {BTREE | HASH}\n\nindex_option:\n    KEY_BLOCK_SIZE [=] value\n  | index_type\n  | WITH PARSER parser_name\n  | COMMENT \'string\'\n\nreference_definition:\n    REFERENCES tbl_name (key_part,...)\n      [MATCH FULL | MATCH PARTIAL | MATCH SIMPLE]\n      [ON DELETE reference_option]\n      [ON UPDATE reference_option]\n\nreference_option:\n    RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT\n\ntable_options:\n    table_option [[,] table_option] ...\n\ntable_option:\n    AUTO_INCREMENT [=] value\n  | AVG_ROW_LENGTH [=] value\n  | [DEFAULT] CHARACTER SET [=] charset_name\n  | CHECKSUM [=] {0 | 1}\n  | [DEFAULT] COLLATE [=] collation_name\n  | COMMENT [=] \'string\'\n  | COMPRESSION [=] {\'ZLIB\'|\'LZ4\'|\'NONE\'}\n  | CONNECTION [=] \'connect_string\'\n  | {DATA|INDEX} DIRECTORY [=] \'absolute path to directory\'\n  | DELAY_KEY_WRITE [=] {0 | 1}\n  | ENCRYPTION [=] {\'Y\' | \'N\'}\n  | ENGINE [=] engine_name\n  | INSERT_METHOD [=] { NO | FIRST | LAST }\n  | KEY_BLOCK_SIZE [=] value\n  | MAX_ROWS [=] value\n  | MIN_ROWS [=] value\n  | PACK_KEYS [=] {0 | 1 | DEFAULT}\n  | PASSWORD [=] \'string\'\n  | ROW_FORMAT [=] {DEFAULT|DYNAMIC|FIXED|COMPRESSED|REDUNDANT|COMPACT}\n  | STATS_AUTO_RECALC [=] {DEFAULT|0|1}\n  | STATS_PERSISTENT [=] {DEFAULT|0|1}\n  | STATS_SAMPLE_PAGES [=] value\n  | TABLESPACE tablespace_name [STORAGE {DISK|MEMORY}]\n  | UNION [=] (tbl_name[,tbl_name]...)\n\npartition_options:\n    PARTITION BY\n        { [LINEAR] HASH(expr)\n        | [LINEAR] KEY [ALGORITHM={1|2}] (column_list)\n        | RANGE{(expr) | COLUMNS(column_list)}\n        | LIST{(expr) | COLUMNS(column_list)} }\n    [PARTITIONS num]\n    [SUBPARTITION BY\n        { [LINEAR] HASH(expr)\n        | [LINEAR] KEY [ALGORITHM={1|2}] (column_list) }\n      [SUBPARTITIONS num]\n    ]\n    [(partition_definition [, partition_definition] ...)]\n\npartition_definition:\n    PARTITION partition_name\n        [VALUES\n            {LESS THAN {(expr | value_list) | MAXVALUE}\n            |\n            IN (value_list)}]\n        [[STORAGE] ENGINE [=] engine_name]\n        [COMMENT [=] \'string\' ]\n        [DATA DIRECTORY [=] \'data_dir\']\n        [INDEX DIRECTORY [=] \'index_dir\']\n        [MAX_ROWS [=] max_number_of_rows]\n        [MIN_ROWS [=] min_number_of_rows]\n        [TABLESPACE [=] tablespace_name]\n        [(subpartition_definition [, subpartition_definition] ...)]\n\nsubpartition_definition:\n    SUBPARTITION logical_name\n        [[STORAGE] ENGINE [=] engine_name]\n        [COMMENT [=] \'string\' ]\n        [DATA DIRECTORY [=] \'data_dir\']\n        [INDEX DIRECTORY [=] \'index_dir\']\n        [MAX_ROWS [=] max_number_of_rows]\n        [MIN_ROWS [=] min_number_of_rows]\n        [TABLESPACE [=] tablespace_name]\n\nquery_expression:\n    SELECT ...   (Some valid select or union statement)\n\nCREATE TABLE creates a table with the given name. You must have the\nCREATE privilege for the table.\n\nBy default, tables are created in the default database, using the\nInnoDB storage engine. An error occurs if the table exists, if there is\nno default database, or if the database does not exist.\n\nFor information about the physical representation of a table, see\nhttps://dev.mysql.com/doc/refman/5.7/en/create-table-files.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-table.html'),(507,'FOREIGN KEY',33,'MySQL supports foreign keys, which let you cross-reference related data\nacross tables, and foreign key constraints, which help keep this\nspread-out data consistent. The essential syntax for a foreign key\nconstraint definition in a CREATE TABLE or ALTER TABLE statement looks\nlike this:\n\n[CONSTRAINT [symbol]] FOREIGN KEY\n    [index_name] (col_name, ...)\n    REFERENCES tbl_name (col_name,...)\n    [ON DELETE reference_option]\n    [ON UPDATE reference_option]\n\nreference_option:\n    RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-table-foreign-keys.html\n\n','CREATE TABLE product (\n    category INT NOT NULL, id INT NOT NULL,\n    price DECIMAL,\n    PRIMARY KEY(category, id)\n)   ENGINE=INNODB;\n\nCREATE TABLE customer (\n    id INT NOT NULL,\n    PRIMARY KEY (id)\n)   ENGINE=INNODB;\n\nCREATE TABLE product_order (\n    no INT NOT NULL AUTO_INCREMENT,\n    product_category INT NOT NULL,\n    product_id INT NOT NULL,\n    customer_id INT NOT NULL,\n\n    PRIMARY KEY(no),\n    INDEX (product_category, product_id),\n    INDEX (customer_id),\n\n    FOREIGN KEY (product_category, product_id)\n      REFERENCES product(category, id)\n      ON UPDATE CASCADE ON DELETE RESTRICT,\n\n    FOREIGN KEY (customer_id)\n      REFERENCES customer(id)\n)   ENGINE=INNODB;\n','https://dev.mysql.com/doc/refman/5.7/en/create-table-foreign-keys.html'),(508,'CREATE TABLESPACE',33,'Syntax:\nCREATE TABLESPACE tablespace_name\n\n  InnoDB and NDB:\n    ADD DATAFILE \'file_name\'\n\n  InnoDB only:\n    [FILE_BLOCK_SIZE = value]\n\n  NDB only:\n    USE LOGFILE GROUP logfile_group\n    [EXTENT_SIZE [=] extent_size]\n    [INITIAL_SIZE [=] initial_size]\n    [AUTOEXTEND_SIZE [=] autoextend_size]\n    [MAX_SIZE [=] max_size]\n    [NODEGROUP [=] nodegroup_id]\n    [WAIT]\n    [COMMENT [=] \'string\']\n\n  InnoDB and NDB:\n    [ENGINE [=] engine_name]\n\nThis statement is used to create a tablespace. The precise syntax and\nsemantics depend on the storage engine used. In standard MySQL 5.7\nreleases, this is always an InnoDB tablespace. MySQL NDB Cluster 7.5\nalso supports tablespaces using the NDB storage engine in addition to\nthose using InnoDB.\n\no https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html#create\n  -tablespace-innodb\n\no https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html#create\n  -tablespace-ndb\n\no https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html#create\n  -tablespace-options\n\no https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html#create\n  -tablespace-notes\n\no https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html#create\n  -tablespace-innodb-examples\n\no https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html#create\n  -tablespace-ndb-examples\n\nConsiderations for InnoDB\n\nCREATE TABLESPACE syntax is used to create general tablespaces. A\ngeneral tablespace is a shared tablespace. It can hold multiple tables,\nand supports all table row formats. General tablespaces can be created\nin a location relative to or independent of the data directory.\n\nAfter creating an InnoDB general tablespace, you can use CREATE TABLE\ntbl_name ... TABLESPACE [=] tablespace_name or ALTER TABLE tbl_name\nTABLESPACE [=] tablespace_name to add tables to the tablespace. For\nmore information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/general-tablespaces.html.\n\nConsiderations for NDB Cluster\n\nThis statement is used to create a tablespace, which can contain one or\nmore data files, providing storage space for NDB Cluster Disk Data\ntables (see\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-disk-data.html).\nOne data file is created and added to the tablespace using this\nstatement. Additional data files may be added to the tablespace by\nusing the ALTER TABLESPACE statement (see [HELP ALTER TABLESPACE]).\n\n*Note*:\n\nAll NDB Cluster Disk Data objects share the same namespace. This means\nthat each Disk Data object must be uniquely named (and not merely each\nDisk Data object of a given type). For example, you cannot have a\ntablespace and a log file group with the same name, or a tablespace and\na data file with the same name.\n\nA log file group of one or more UNDO log files must be assigned to the\ntablespace to be created with the USE LOGFILE GROUP clause.\nlogfile_group must be an existing log file group created with CREATE\nLOGFILE GROUP (see [HELP CREATE LOGFILE GROUP]). Multiple tablespaces\nmay use the same log file group for UNDO logging.\n\nWhen setting EXTENT_SIZE or INITIAL_SIZE, you may optionally follow the\nnumber with a one-letter abbreviation for an order of magnitude,\nsimilar to those used in my.cnf. Generally, this is one of the letters\nM (for megabytes) or G (for gigabytes).\n\nINITIAL_SIZE and EXTENT_SIZE are subject to rounding as follows:\n\no EXTENT_SIZE is rounded up to the nearest whole multiple of 32K.\n\no INITIAL_SIZE is rounded down to the nearest whole multiple of 32K;\n  this result is rounded up to the nearest whole multiple of\n  EXTENT_SIZE (after any rounding).\n\nThe rounding just described is done explicitly, and a warning is issued\nby the MySQL Server when any such rounding is performed. The rounded\nvalues are also used by the NDB kernel for calculating\nINFORMATION_SCHEMA.FILES column values and other purposes. However, to\navoid an unexpected result, we suggest that you always use whole\nmultiples of 32K in specifying these options.\n\nWhen CREATE TABLESPACE is used with ENGINE [=] NDB, a tablespace and\nassociated data file are created on each Cluster data node. You can\nverify that the data files were created and obtain information about\nthem by querying the INFORMATION_SCHEMA.FILES table. (See the example\nlater in this section.)\n\n(See https://dev.mysql.com/doc/refman/5.7/en/files-table.html.)\n\nOptions\n\no ADD DATAFILE: Defines the name of a tablespace data file; this option\n  is always required. An InnoDB tablespace supports only a single data\n  file, whose name must include a .ibd extension. An NDB Cluster\n  tablespace supports multiple data files which can have any legal file\n  names; more data files can be added to an NDB Cluster tablespace\n  following its creation by using an ALTER TABLESPACE statement.\n\n  *Note*:\n\n  ALTER TABLESPACE is not supported by InnoDB.\n\n  To place the data file in a location outside of the data directory\n  (datadir), include an absolute directory path or a path relative to\n  the data directory. If you do not specify a path, the tablespace is\n  created in the data directory. An isl file is created in the data\n  directory when an InnoDB tablespace is created outside of the data\n  directory.\n\n  To avoid conflicts with implicitly created file-per-table\n  tablespaces, creating a general tablespace in a subdirectory under\n  the data directory is not supported. When creating a general\n  tablespace outside of the data directory, the directory must exist\n  prior to creating the tablespace.\n\n  The file_name, including any specified path, must be quoted with\n  single or double quotations marks. File names (not counting the file\n  extension) and directory names must be at least one byte in length.\n  Zero length file names and directory names are not supported.\n\no FILE_BLOCK_SIZE: This option---which is specific to InnoDB, and is\n  ignored by NDB---defines the block size for the tablespace data file.\n  Values can be specified in bytes or kilobytes. For example, an 8\n  kilobyte file block size can be specified as 8192 or 8K. If you do\n  not specify this option, FILE_BLOCK_SIZE defaults to the\n  innodb_page_size value. FILE_BLOCK_SIZE is required when you intend\n  to use the tablespace for storing compressed InnoDB tables\n  (ROW_FORMAT=COMPRESSED). In this case, you must define the tablespace\n  FILE_BLOCK_SIZE when creating the tablespace.\n\n  If FILE_BLOCK_SIZE is equal the innodb_page_size value, the\n  tablespace can contain only tables having an uncompressed row format\n  (COMPACT, REDUNDANT, and DYNAMIC). Tables with a COMPRESSED row\n  format have a different physical page size than uncompressed tables.\n  Therefore, compressed tables cannot coexist in the same tablespace as\n  uncompressed tables.\n\n  For a general tablespace to contain compressed tables,\n  FILE_BLOCK_SIZE must be specified, and the FILE_BLOCK_SIZE value must\n  be a valid compressed page size in relation to the innodb_page_size\n  value. Also, the physical page size of the compressed table\n  (KEY_BLOCK_SIZE) must be equal to FILE_BLOCK_SIZE/1024. For example,\n  if innodb_page_size=16K, and FILE_BLOCK_SIZE=8K, the KEY_BLOCK_SIZE\n  of the table must be 8. For more information, see\n  https://dev.mysql.com/doc/refman/5.7/en/general-tablespaces.html.\n\no USE LOGFILE GROUP: Required for NDB, this is the name of a log file\n  group previously created using CREATE LOGFILE GROUP. Not supported\n  for InnoDB, where it fails with an error.\n\no EXTENT_SIZE: This option is specific to NDB, and is not supported by\n  InnoDB, where it fails with an error. EXTENT_SIZE sets the size, in\n  bytes, of the extents used by any files belonging to the tablespace.\n  The default value is 1M. The minimum size is 32K, and theoretical\n  maximum is 2G, although the practical maximum size depends on a\n  number of factors. In most cases, changing the extent size does not\n  have any measurable effect on performance, and the default value is\n  recommended for all but the most unusual situations.\n\n  An extent is a unit of disk space allocation. One extent is filled\n  with as much data as that extent can contain before another extent is\n  used. In theory, up to 65,535 (64K) extents may used per data file;\n  however, the recommended maximum is 32,768 (32K). The recommended\n  maximum size for a single data file is 32G---that is, 32K extents x 1\n  MB per extent. In addition, once an extent is allocated to a given\n  partition, it cannot be used to store data from a different\n  partition; an extent cannot store data from more than one partition.\n  This means, for example that a tablespace having a single datafile\n  whose INITIAL_SIZE (described in the following item) is 256 MB and\n  whose EXTENT_SIZE is 128M has just two extents, and so can be used to\n  store data from at most two different disk data table partitions.\n\n  You can see how many extents remain free in a given data file by\n  querying the INFORMATION_SCHEMA.FILES table, and so derive an\n  estimate for how much space remains free in the file. For further\n  discussion and examples, see\n  https://dev.mysql.com/doc/refman/5.7/en/files-table.html.\n\no INITIAL_SIZE: This option is specific to NDB, and is not supported by\n  InnoDB, where it fails with an error.\n\n  The INITIAL_SIZE parameter sets the total size in bytes of the data\n  file that was specific using ADD DATATFILE. Once this file has been\n  created, its size cannot be changed; however, you can add more data\n  files to the tablespace using ALTER TABLESPACE ... ADD DATAFILE.\n\n  INITIAL_SIZE is optional; its default value is 134217728 (128 MB).\n\n  On 32-bit systems, the maximum supported value for INITIAL_SIZE is\n  4294967296 (4 GB).\n\no AUTOEXTEND_SIZE: Currently ignored by MySQL; reserved for possible\n  future use. Has no effect in any release of MySQL 5.7 or MySQL NDB\n  Cluster 7.5, regardless of the storage engine used.\n\no MAX_SIZE: Currently ignored by MySQL; reserved for possible future\n  use. Has no effect in any release of MySQL 5.7 or MySQL NDB Cluster\n  7.5, regardless of the storage engine used.\n\no NODEGROUP: Currently ignored by MySQL; reserved for possible future\n  use. Has no effect in any release of MySQL 5.7 or MySQL NDB Cluster\n  7.5, regardless of the storage engine used.\n\no WAIT: Currently ignored by MySQL; reserved for possible future use.\n  Has no effect in any release of MySQL 5.7 or MySQL NDB Cluster 7.5,\n  regardless of the storage engine used.\n\no COMMENT: Currently ignored by MySQL; reserved for possible future\n  use. Has no effect in any release of MySQL 5.7 or MySQL NDB Cluster\n  7.5, regardless of the storage engine used.\n\no ENGINE: Defines the storage engine which uses the tablespace, where\n  engine_name is the name of the storage engine. Currently, only the\n  InnoDB storage engine is supported by standard MySQL 5.7 releases.\n  MySQL NDB Cluster 7.5 supports both NDB and InnoDB tablespaces. The\n  value of the default_storage_engine system variable is used for\n  ENGINE if the option is not specified.\n\nNotes\n\no For the rules covering the naming of MySQL tablespaces, see\n  https://dev.mysql.com/doc/refman/5.7/en/identifiers.html. In addition\n  to these rules, the slash character (\"/\") is not permitted, nor can\n  you use names beginning with innodb_, as this prefix is reserved for\n  system use.\n\no Tablespaces do not support temporary tables.\n\no innodb_file_per_table, innodb_file_format, and innodb_file_format_max\n  settings have no influence on CREATE TABLESPACE operations.\n  innodb_file_per_table does not need to be enabled. General\n  tablespaces support all table row formats regardless of file format\n  settings. Likewise, general tablespaces support the addition of\n  tables of any row format using CREATE TABLE ... TABLESPACE,\n  regardless of file format settings.\n\no innodb_strict_mode is not applicable to general tablespaces.\n  Tablespace management rules are strictly enforced independently of\n  innodb_strict_mode. If CREATE TABLESPACE parameters are incorrect or\n  incompatible, the operation fails regardless of the\n  innodb_strict_mode setting. When a table is added to a general\n  tablespace using CREATE TABLE ... TABLESPACE or ALTER TABLE ...\n  TABLESPACE, innodb_strict_mode is ignored but the statement is\n  evaluated as if innodb_strict_mode is enabled.\n\no Use DROP TABLESPACE to remove a tablespace. All tables must be\n  dropped from a tablespace using DROP TABLE prior to dropping the\n  tablespace. Before dropping an NDB Cluster tablespace you must also\n  remove all its data files using one or more ALTER TABLESPACE ... DROP\n  DATATFILE statements. See\n  https://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-disk-data-objec\n  ts.html.\n\no All parts of an InnoDB table added to an InnoDB general tablespace\n  reside in the general tablespace, including indexes and BLOB pages.\n\n  For an NDB table assigned to a tablespace, only those columns which\n  are not indexed are stored on disk, and actually use the tablespace\n  data files. Indexes and indexed columns for all NDB tables are always\n  kept in memory.\n\no Similar to the system tablespace, truncating or dropping tables\n  stored in a general tablespace creates free space internally in the\n  general tablespace .ibd data file which can only be used for new\n  InnoDB data. Space is not released back to the operating system as it\n  is for file-per-table tablespaces.\n\no A general tablespace is not associated with any database or schema.\n\no ALTER TABLE ... DISCARD TABLESPACE and ALTER TABLE ...IMPORT\n  TABLESPACE are not supported for tables that belong to a general\n  tablespace.\n\no The server uses tablespace-level metadata locking for DDL that\n  references general tablespaces. By comparison, the server uses\n  table-level metadata locking for DDL that references file-per-table\n  tablespaces.\n\no A generated or existing tablespace cannot be changed to a general\n  tablespace.\n\no Tables stored in a general tablespace can only be opened in MySQL\n  5.7.6 or later due to the addition of new table flags.\n\no There is no conflict between general tablespace names and\n  file-per-table tablespace names. The \"/\" character, which is present\n  in file-per-table tablespace names, is not permitted in general\n  tablespace names.\n\no mysqldump and mysqlpump do not dump InnoDB CREATE TABLESPACE\n  statements.\n\nInnoDB Examples\n\nThis example demonstrates creating a general tablespace and adding\nthree uncompressed tables of different row formats.\n\nmysql> CREATE TABLESPACE `ts1` ADD DATAFILE \'ts1.ibd\' ENGINE=INNODB;\n\nmysql> CREATE TABLE t1 (c1 INT PRIMARY KEY) TABLESPACE ts1 ROW_FORMAT=REDUNDANT;\n\nmysql> CREATE TABLE t2 (c1 INT PRIMARY KEY) TABLESPACE ts1 ROW_FORMAT=COMPACT;\n\nmysql> CREATE TABLE t3 (c1 INT PRIMARY KEY) TABLESPACE ts1 ROW_FORMAT=DYNAMIC;\n\nThis example demonstrates creating a general tablespace and adding a\ncompressed table. The example assumes a default innodb_page_size value\nof 16K. The FILE_BLOCK_SIZE of 8192 requires that the compressed table\nhave a KEY_BLOCK_SIZE of 8.\n\nmysql> CREATE TABLESPACE `ts2` ADD DATAFILE \'ts2.ibd\' FILE_BLOCK_SIZE = 8192 Engine=InnoDB;\n\nmysql> CREATE TABLE t4 (c1 INT PRIMARY KEY) TABLESPACE ts2 ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=8;\n\nNDB Example\n\nSuppose that you wish to create an NDB Cluster Disk Data tablespace\nnamed myts using a datafile named mydata-1.dat. An NDB tablespace\nalways requires the use of a log file group consisting of one or more\nundo log files. For this example, we first create a log file group\nnamed mylg that contains one undo long file named myundo-1.dat, using\nthe CREATE LOGFILE GROUP statement shown here:\n\nmysql> CREATE LOGFILE GROUP myg1\n    ->     ADD UNDOFILE \'myundo-1.dat\'\n    ->     ENGINE=NDB;\nQuery OK, 0 rows affected (3.29 sec)\n\nNow you can create the tablespace previously described using the\nfollowing statement:\n\nmysql> CREATE TABLESPACE myts\n    ->     ADD DATAFILE \'mydata-1.dat\'\n    ->     USE LOGFILE GROUP mylg\n    ->     ENGINE=NDB;\nQuery OK, 0 rows affected (2.98 sec)\n\nYou can now create a Disk Data table using a CREATE TABLE statement\nwith the TABLESPACE and STORAGE DISK options, similar to what is shown\nhere:\n\nmysql> CREATE TABLE mytable (\n    ->     id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    ->     lname VARCHAR(50) NOT NULL,\n    ->     fname VARCHAR(50) NOT NULL,\n    ->     dob DATE NOT NULL,\n    ->     joined DATE NOT NULL,\n    ->     INDEX(last_name, first_name)\n    -> )\n    ->     TABLESPACE myts STORAGE DISK\n    ->     ENGINE=NDB;\nQuery OK, 0 rows affected (1.41 sec)\n\nIt is important to note that only the dob and joined columns from\nmytable are actually stored on disk, due to the fact that the id,\nlname, and fname columns are all indexed.\n\nAs mentioned previously, when CREATE TABLESPACE is used with ENGINE [=]\nNDB, a tablespace and associated data file are created on each NDB\nCluster data node. You can verify that the data files were created and\nobtain information about them by querying the INFORMATION_SCHEMA.FILES\ntable, as shown here:\n\nmysql> SELECT FILE_NAME, FILE_TYPE, LOGFILE_GROUP_NAME, STATUS, EXTRA\n    ->     FROM INFORMATION_SCHEMA.FILES\n    ->     WHERE TABLESPACE_NAME = \'myts\';\n\n+--------------+------------+--------------------+--------+----------------+\n| file_name    | file_type  | logfile_group_name | status | extra          |\n+--------------+------------+--------------------+--------+----------------+\n| mydata-1.dat | DATAFILE   | mylg               | NORMAL | CLUSTER_NODE=5 |\n| mydata-1.dat | DATAFILE   | mylg               | NORMAL | CLUSTER_NODE=6 |\n| NULL         | TABLESPACE | mylg               | NORMAL | NULL           |\n+--------------+------------+--------------------+--------+----------------+\n3 rows in set (0.01 sec)\n\nFor additional information and examples, see\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-disk-data-objects\n.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html'),(509,'CREATE TRIGGER',33,'Syntax:\nCREATE\n    [DEFINER = user]\n    TRIGGER trigger_name\n    trigger_time trigger_event\n    ON tbl_name FOR EACH ROW\n    [trigger_order]\n    trigger_body\n\ntrigger_time: { BEFORE | AFTER }\n\ntrigger_event: { INSERT | UPDATE | DELETE }\n\ntrigger_order: { FOLLOWS | PRECEDES } other_trigger_name\n\nThis statement creates a new trigger. A trigger is a named database\nobject that is associated with a table, and that activates when a\nparticular event occurs for the table. The trigger becomes associated\nwith the table named tbl_name, which must refer to a permanent table.\nYou cannot associate a trigger with a TEMPORARY table or a view.\n\nTrigger names exist in the schema namespace, meaning that all triggers\nmust have unique names within a schema. Triggers in different schemas\ncan have the same name.\n\nThis section describes CREATE TRIGGER syntax. For additional\ndiscussion, see\nhttps://dev.mysql.com/doc/refman/5.7/en/trigger-syntax.html.\n\nCREATE TRIGGER requires the TRIGGER privilege for the table associated\nwith the trigger. If the DEFINER clause is present, the privileges\nrequired depend on the user value, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-objects-security.html.\nIf binary logging is enabled, CREATE TRIGGER might require the SUPER\nprivilege, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-programs-logging.html.\n\nThe DEFINER clause determines the security context to be used when\nchecking access privileges at trigger activation time, as described\nlater in this section.\n\ntrigger_time is the trigger action time. It can be BEFORE or AFTER to\nindicate that the trigger activates before or after each row to be\nmodified.\n\nBasic column value checks occur prior to trigger activation, so you\ncannot use BEFORE triggers to convert values inappropriate for the\ncolumn type to valid values.\n\ntrigger_event indicates the kind of operation that activates the\ntrigger. These trigger_event values are permitted:\n\no INSERT: The trigger activates whenever a new row is inserted into the\n  table (for example, through INSERT, LOAD DATA, and REPLACE\n  statements).\n\no UPDATE: The trigger activates whenever a row is modified (for\n  example, through UPDATE statements).\n\no DELETE: The trigger activates whenever a row is deleted from the\n  table (for example, through DELETE and REPLACE statements). DROP\n  TABLE and TRUNCATE TABLE statements on the table do not activate this\n  trigger, because they do not use DELETE. Dropping a partition does\n  not activate DELETE triggers, either.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-trigger.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-trigger.html'),(510,'CREATE VIEW',33,'Syntax:\nCREATE\n    [OR REPLACE]\n    [ALGORITHM = {UNDEFINED | MERGE | TEMPTABLE}]\n    [DEFINER = user]\n    [SQL SECURITY { DEFINER | INVOKER }]\n    VIEW view_name [(column_list)]\n    AS select_statement\n    [WITH [CASCADED | LOCAL] CHECK OPTION]\n\nThe CREATE VIEW statement creates a new view, or replaces an existing\nview if the OR REPLACE clause is given. If the view does not exist,\nCREATE OR REPLACE VIEW is the same as CREATE VIEW. If the view does\nexist, CREATE OR REPLACE VIEW replaces it.\n\nFor information about restrictions on view use, see\nhttps://dev.mysql.com/doc/refman/5.7/en/view-restrictions.html.\n\nThe select_statement is a SELECT statement that provides the definition\nof the view. (Selecting from the view selects, in effect, using the\nSELECT statement.) The select_statement can select from base tables or\nother views.\n\nThe view definition is \"frozen\" at creation time and is not affected by\nsubsequent changes to the definitions of the underlying tables. For\nexample, if a view is defined as SELECT * on a table, new columns added\nto the table later do not become part of the view, and columns dropped\nfrom the table will result in an error when selecting from the view.\n\nThe ALGORITHM clause affects how MySQL processes the view. The DEFINER\nand SQL SECURITY clauses specify the security context to be used when\nchecking access privileges at view invocation time. The WITH CHECK\nOPTION clause can be given to constrain inserts or updates to rows in\ntables referenced by the view. These clauses are described later in\nthis section.\n\nThe CREATE VIEW statement requires the CREATE VIEW privilege for the\nview, and some privilege for each column selected by the SELECT\nstatement. For columns used elsewhere in the SELECT statement, you must\nhave the SELECT privilege. If the OR REPLACE clause is present, you\nmust also have the DROP privilege for the view. If the DEFINER clause\nis present, the privileges required depend on the user value, as\ndiscussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-objects-security.html.\n\nWhen a view is referenced, privilege checking occurs as described later\nin this section.\n\nA view belongs to a database. By default, a new view is created in the\ndefault database. To create the view explicitly in a given database,\nuse db_name.view_name syntax to qualify the view name with the database\nname:\n\nCREATE VIEW test.v AS SELECT * FROM t;\n\nUnqualified table or view names in the SELECT statement are also\ninterpreted with respect to the default database. A view can refer to\ntables or views in other databases by qualifying the table or view name\nwith the appropriate database name.\n\nWithin a database, base tables and views share the same namespace, so a\nbase table and a view cannot have the same name.\n\nColumns retrieved by the SELECT statement can be simple references to\ntable columns, or expressions that use functions, constant values,\noperators, and so forth.\n\nA view must have unique column names with no duplicates, just like a\nbase table. By default, the names of the columns retrieved by the\nSELECT statement are used for the view column names. To define explicit\nnames for the view columns, specify the optional column_list clause as\na list of comma-separated identifiers. The number of names in\ncolumn_list must be the same as the number of columns retrieved by the\nSELECT statement.\n\nA view can be created from many kinds of SELECT statements. It can\nrefer to base tables or other views. It can use joins, UNION, and\nsubqueries. The SELECT need not even refer to any tables:\n\nCREATE VIEW v_today (today) AS SELECT CURRENT_DATE;\n\nThe following example defines a view that selects two columns from\nanother table as well as an expression calculated from those columns:\n\nmysql> CREATE TABLE t (qty INT, price INT);\nmysql> INSERT INTO t VALUES(3, 50);\nmysql> CREATE VIEW v AS SELECT qty, price, qty*price AS value FROM t;\nmysql> SELECT * FROM v;\n+------+-------+-------+\n| qty  | price | value |\n+------+-------+-------+\n|    3 |    50 |   150 |\n+------+-------+-------+\n\nA view definition is subject to the following restrictions:\n\no The SELECT statement cannot refer to system variables or user-defined\n  variables.\n\no Within a stored program, the SELECT statement cannot refer to program\n  parameters or local variables.\n\no The SELECT statement cannot refer to prepared statement parameters.\n\no Any table or view referred to in the definition must exist. If, after\n  the view has been created, a table or view that the definition refers\n  to is dropped, use of the view results in an error. To check a view\n  definition for problems of this kind, use the CHECK TABLE statement.\n\no The definition cannot refer to a TEMPORARY table, and you cannot\n  create a TEMPORARY view.\n\no You cannot associate a trigger with a view.\n\no Aliases for column names in the SELECT statement are checked against\n  the maximum column length of 64 characters (not the maximum alias\n  length of 256 characters).\n\nORDER BY is permitted in a view definition, but it is ignored if you\nselect from a view using a statement that has its own ORDER BY.\n\nFor other options or clauses in the definition, they are added to the\noptions or clauses of the statement that references the view, but the\neffect is undefined. For example, if a view definition includes a LIMIT\nclause, and you select from the view using a statement that has its own\nLIMIT clause, it is undefined which limit applies. This same principle\napplies to options such as ALL, DISTINCT, or SQL_SMALL_RESULT that\nfollow the SELECT keyword, and to clauses such as INTO, FOR UPDATE,\nLOCK IN SHARE MODE, and PROCEDURE.\n\nThe results obtained from a view may be affected if you change the\nquery processing environment by changing system variables:\n\nmysql> CREATE VIEW v (mycol) AS SELECT \'abc\';\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> SET sql_mode = \'\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT \"mycol\" FROM v;\n+-------+\n| mycol |\n+-------+\n| mycol |\n+-------+\n1 row in set (0.01 sec)\n\nmysql> SET sql_mode = \'ANSI_QUOTES\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT \"mycol\" FROM v;\n+-------+\n| mycol |\n+-------+\n| abc   |\n+-------+\n1 row in set (0.00 sec)\n\nThe DEFINER and SQL SECURITY clauses determine which MySQL account to\nuse when checking access privileges for the view when a statement is\nexecuted that references the view. The valid SQL SECURITY\ncharacteristic values are DEFINER (the default) and INVOKER. These\nindicate that the required privileges must be held by the user who\ndefined or invoked the view, respectively.\n\nIf the DEFINER clause is present, the user value should be a MySQL\naccount specified as \'user_name\'@\'host_name\', CURRENT_USER, or\nCURRENT_USER(). The permitted user values depend on the privileges you\nhold, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-objects-security.html.\nAlso see that section for additional information about view security.\n\nIf the DEFINER clause is omitted, the default definer is the user who\nexecutes the CREATE VIEW statement. This is the same as specifying\nDEFINER = CURRENT_USER explicitly.\n\nWithin a view definition, the CURRENT_USER function returns the view\'s\nDEFINER value by default. For views defined with the SQL SECURITY\nINVOKER characteristic, CURRENT_USER returns the account for the view\'s\ninvoker. For information about user auditing within views, see\nhttps://dev.mysql.com/doc/refman/5.7/en/account-activity-auditing.html.\n\nWithin a stored routine that is defined with the SQL SECURITY DEFINER\ncharacteristic, CURRENT_USER returns the routine\'s DEFINER value. This\nalso affects a view defined within such a routine, if the view\ndefinition contains a DEFINER value of CURRENT_USER.\n\nMySQL checks view privileges like this:\n\no At view definition time, the view creator must have the privileges\n  needed to use the top-level objects accessed by the view. For\n  example, if the view definition refers to table columns, the creator\n  must have some privilege for each column in the select list of the\n  definition, and the SELECT privilege for each column used elsewhere\n  in the definition. If the definition refers to a stored function,\n  only the privileges needed to invoke the function can be checked. The\n  privileges required at function invocation time can be checked only\n  as it executes: For different invocations, different execution paths\n  within the function might be taken.\n\no The user who references a view must have appropriate privileges to\n  access it (SELECT to select from it, INSERT to insert into it, and so\n  forth.)\n\no When a view has been referenced, privileges for objects accessed by\n  the view are checked against the privileges held by the view DEFINER\n  account or invoker, depending on whether the SQL SECURITY\n  characteristic is DEFINER or INVOKER, respectively.\n\no If reference to a view causes execution of a stored function,\n  privilege checking for statements executed within the function depend\n  on whether the function SQL SECURITY characteristic is DEFINER or\n  INVOKER. If the security characteristic is DEFINER, the function runs\n  with the privileges of the DEFINER account. If the characteristic is\n  INVOKER, the function runs with the privileges determined by the\n  view\'s SQL SECURITY characteristic.\n\nExample: A view might depend on a stored function, and that function\nmight invoke other stored routines. For example, the following view\ninvokes a stored function f():\n\nCREATE VIEW v AS SELECT * FROM t WHERE t.id = f(t.name);\n\nSuppose that f() contains a statement such as this:\n\nIF name IS NULL then\n  CALL p1();\nELSE\n  CALL p2();\nEND IF;\n\nThe privileges required for executing statements within f() need to be\nchecked when f() executes. This might mean that privileges are needed\nfor p1() or p2(), depending on the execution path within f(). Those\nprivileges must be checked at runtime, and the user who must possess\nthe privileges is determined by the SQL SECURITY values of the view v\nand the function f().\n\nThe DEFINER and SQL SECURITY clauses for views are extensions to\nstandard SQL. In standard SQL, views are handled using the rules for\nSQL SECURITY DEFINER. The standard says that the definer of the view,\nwhich is the same as the owner of the view\'s schema, gets applicable\nprivileges on the view (for example, SELECT) and may grant them. MySQL\nhas no concept of a schema \"owner\", so MySQL adds a clause to identify\nthe definer. The DEFINER clause is an extension where the intent is to\nhave what the standard has; that is, a permanent record of who defined\nthe view. This is why the default DEFINER value is the account of the\nview creator.\n\nThe optional ALGORITHM clause is a MySQL extension to standard SQL. It\naffects how MySQL processes the view. ALGORITHM takes three values:\nMERGE, TEMPTABLE, or UNDEFINED. For more information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/view-algorithms.html, as well\nas\nhttps://dev.mysql.com/doc/refman/5.7/en/derived-table-optimization.html\n.\n\nSome views are updatable. That is, you can use them in statements such\nas UPDATE, DELETE, or INSERT to update the contents of the underlying\ntable. For a view to be updatable, there must be a one-to-one\nrelationship between the rows in the view and the rows in the\nunderlying table. There are also certain other constructs that make a\nview nonupdatable.\n\nA generated column in a view is considered updatable because it is\npossible to assign to it. However, if such a column is updated\nexplicitly, the only permitted value is DEFAULT. For information about\ngenerated columns, see\nhttps://dev.mysql.com/doc/refman/5.7/en/create-table-generated-columns.\nhtml.\n\nThe WITH CHECK OPTION clause can be given for an updatable view to\nprevent inserts or updates to rows except those for which the WHERE\nclause in the select_statement is true.\n\nIn a WITH CHECK OPTION clause for an updatable view, the LOCAL and\nCASCADED keywords determine the scope of check testing when the view is\ndefined in terms of another view. The LOCAL keyword restricts the CHECK\nOPTION only to the view being defined. CASCADED causes the checks for\nunderlying views to be evaluated as well. When neither keyword is\ngiven, the default is CASCADED.\n\nFor more information about updatable views and the WITH CHECK OPTION\nclause, see\nhttps://dev.mysql.com/doc/refman/5.7/en/view-updatability.html, and\nhttps://dev.mysql.com/doc/refman/5.7/en/view-check-option.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-view.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-view.html'),(511,'DROP DATABASE',33,'Syntax:\nDROP {DATABASE | SCHEMA} [IF EXISTS] db_name\n\nDROP DATABASE drops all tables in the database and deletes the\ndatabase. Be very careful with this statement! To use DROP DATABASE,\nyou need the DROP privilege on the database. DROP SCHEMA is a synonym\nfor DROP DATABASE.\n\n*Important*:\n\nWhen a database is dropped, privileges granted specifically for the\ndatabase are not automatically dropped. They must be dropped manually.\nSee [HELP GRANT].\n\nIF EXISTS is used to prevent an error from occurring if the database\ndoes not exist.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-database.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-database.html'),(512,'DROP SCHEMA',33,'Syntax:\nDROP {DATABASE | SCHEMA} [IF EXISTS] db_name\n\nDROP DATABASE drops all tables in the database and deletes the\ndatabase. Be very careful with this statement! To use DROP DATABASE,\nyou need the DROP privilege on the database. DROP SCHEMA is a synonym\nfor DROP DATABASE.\n\n*Important*:\n\nWhen a database is dropped, privileges granted specifically for the\ndatabase are not automatically dropped. They must be dropped manually.\nSee [HELP GRANT].\n\nIF EXISTS is used to prevent an error from occurring if the database\ndoes not exist.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-database.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-database.html'),(513,'DROP EVENT',33,'Syntax:\nDROP EVENT [IF EXISTS] event_name\n\nThis statement drops the event named event_name. The event immediately\nceases being active, and is deleted completely from the server.\n\nIf the event does not exist, the error ERROR 1517 (HY000): Unknown\nevent \'event_name\' results. You can override this and cause the\nstatement to generate a warning for nonexistent events instead using IF\nEXISTS.\n\nThis statement requires the EVENT privilege for the schema to which the\nevent to be dropped belongs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-event.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-event.html'),(514,'DROP INDEX',33,'Syntax:\nDROP INDEX index_name ON tbl_name\n    [algorithm_option | lock_option] ...\n\nalgorithm_option:\n    ALGORITHM [=] {DEFAULT|INPLACE|COPY}\n\nlock_option:\n    LOCK [=] {DEFAULT|NONE|SHARED|EXCLUSIVE}\n\nDROP INDEX drops the index named index_name from the table tbl_name.\nThis statement is mapped to an ALTER TABLE statement to drop the index.\nSee [HELP ALTER TABLE].\n\nTo drop a primary key, the index name is always PRIMARY, which must be\nspecified as a quoted identifier because PRIMARY is a reserved word:\n\nDROP INDEX `PRIMARY` ON t;\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-index.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-index.html'),(515,'DROP PROCEDURE',33,'Syntax:\nDROP {PROCEDURE | FUNCTION} [IF EXISTS] sp_name\n\nThis statement is used to drop a stored procedure or function. That is,\nthe specified routine is removed from the server. You must have the\nALTER ROUTINE privilege for the routine. (If the\nautomatic_sp_privileges system variable is enabled, that privilege and\nEXECUTE are granted automatically to the routine creator when the\nroutine is created and dropped from the creator when the routine is\ndropped. See\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-routines-privileges.html\n.)\n\nThe IF EXISTS clause is a MySQL extension. It prevents an error from\noccurring if the procedure or function does not exist. A warning is\nproduced that can be viewed with SHOW WARNINGS.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-procedure.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-procedure.html'),(516,'DROP FUNCTION',33,'Syntax:\nDROP {PROCEDURE | FUNCTION} [IF EXISTS] sp_name\n\nThis statement is used to drop a stored procedure or function. That is,\nthe specified routine is removed from the server. You must have the\nALTER ROUTINE privilege for the routine. (If the\nautomatic_sp_privileges system variable is enabled, that privilege and\nEXECUTE are granted automatically to the routine creator when the\nroutine is created and dropped from the creator when the routine is\ndropped. See\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-routines-privileges.html\n.)\n\nThe IF EXISTS clause is a MySQL extension. It prevents an error from\noccurring if the procedure or function does not exist. A warning is\nproduced that can be viewed with SHOW WARNINGS.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-procedure.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-procedure.html'),(517,'DROP SERVER',33,'Syntax:\nDROP SERVER [ IF EXISTS ] server_name\n\nDrops the server definition for the server named server_name. The\ncorresponding row in the mysql.servers table is deleted. This statement\nrequires the SUPER privilege.\n\nDropping a server for a table does not affect any FEDERATED tables that\nused this connection information when they were created. See [HELP\nCREATE SERVER].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-server.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-server.html'),(518,'DROP TABLE',33,'Syntax:\nDROP [TEMPORARY] TABLE [IF EXISTS]\n    tbl_name [, tbl_name] ...\n    [RESTRICT | CASCADE]\n\nDROP TABLE removes one or more tables. You must have the DROP privilege\nfor each table.\n\nBe careful with this statement! For each table, it removes the table\ndefinition and all table data. If the table is partitioned, the\nstatement removes the table definition, all its partitions, all data\nstored in those partitions, and all partition definitions associated\nwith the dropped table.\n\nDropping a table also drops any triggers for the table.\n\nDROP TABLE causes an implicit commit, except when used with the\nTEMPORARY keyword. See\nhttps://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\n*Important*:\n\nWhen a table is dropped, privileges granted specifically for the table\nare not automatically dropped. They must be dropped manually. See [HELP\nGRANT].\n\nIf any tables named in the argument list do not exist, DROP TABLE\nbehavior depends on whether the IF EXISTS clause is given:\n\no Without IF EXISTS, the statement drops all named tables that do\n  exist, and returns an error indicating which nonexisting tables it\n  was unable to drop.\n\no With IF EXISTS, no error occurs for nonexisting tables. The statement\n  drops all named tables that do exist, and generates a NOTE diagnostic\n  for each nonexistent table. These notes can be displayed with SHOW\n  WARNINGS. See [HELP SHOW WARNINGS].\n\nIF EXISTS can also be useful for dropping tables in unusual\ncircumstances under which there is an .frm file but no table managed by\nthe storage engine. (For example, if an abnormal server exit occurs\nafter removal of the table from the storage engine but before .frm file\nremoval.)\n\nThe TEMPORARY keyword has the following effects:\n\no The statement drops only TEMPORARY tables.\n\no The statement does not cause an implicit commit.\n\no No access rights are checked. A TEMPORARY table is visible only with\n  the session that created it, so no check is necessary.\n\nIncluding the TEMPORARY keyword is a good way to prevent accidentally\ndropping non-TEMPORARY tables.\n\nThe RESTRICT and CASCADE keywords do nothing. They are permitted to\nmake porting easier from other database systems.\n\nDROP TABLE is not supported with all innodb_force_recovery settings.\nSee\nhttps://dev.mysql.com/doc/refman/5.7/en/forcing-innodb-recovery.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-table.html'),(519,'DROP TABLESPACE',33,'Syntax:\nDROP TABLESPACE tablespace_name\n    [ENGINE [=] engine_name]\n\nThis statement drops a tablespace that was previously created using\nCREATE TABLESPACE. It is supported with all MySQL NDB Cluster 7.5\nreleases, and with InnoDB in the standard MySQL Server as well.\n\nENGINE sets the storage engine that uses the tablespace, where\nengine_name is the name of the storage engine. Currently, the values\nInnoDB and NDB are supported. If not set, the value of\ndefault_storage_engine is used. If it is not the same as the storage\nengine used to create the tablespace, the DROP TABLESPACE statement\nfails.\n\nFor an InnoDB tablespace, all tables must be dropped from the\ntablespace prior to a DROP TABLESPACE operation. If the tablespace is\nnot empty, DROP TABLESPACE returns an error.\n\nAs with the InnoDB system tablespace, truncating or dropping InnoDB\ntables stored in a general tablespace creates free space in the\ntablespace .ibd data file, which can only be used for new InnoDB data.\nSpace is not released back to the operating system by such operations\nas it is for file-per-table tablespaces.\n\nAn NDB tablespace to be dropped must not contain any data files; in\nother words, before you can drop an NDB tablespace, you must first drop\neach of its data files using ALTER TABLESPACE ... DROP DATAFILE.\n\nNotes\n\no Tablespaces are not deleted automatically. A tablespace must be\n  dropped explicitly using DROP TABLESPACE. DROP DATABASE has no effect\n  in this regard, even if the operation drops all tables belonging to\n  the tablespace.\n\no A DROP DATABASE operation can drop tables that belong to a general\n  tablespace but it cannot drop the tablespace, even if the operation\n  drops all tables that belong to the tablespace. The tablespace must\n  be dropped explicitly using DROP TABLESPACE tablespace_name.\n\no Similar to the system tablespace, truncating or dropping tables\n  stored in a general tablespace creates free space internally in the\n  general tablespace .ibd data file which can only be used for new\n  InnoDB data. Space is not released back to the operating system as it\n  is for file-per-table tablespaces.\n\nInnoDB Example\n\nThis example demonstrates how to drop an InnoDB general tablespace. The\ngeneral tablespace ts1 is created with a single table. Before dropping\nthe tablespace, the table must be dropped.\n\nmysql> CREATE TABLESPACE `ts1` ADD DATAFILE \'ts1.ibd\' Engine=InnoDB; \n\nmysql> CREATE TABLE t1 (c1 INT PRIMARY KEY) TABLESPACE ts10 Engine=InnoDB; \n      \nmysql> DROP TABLE t1;\n\nmysql> DROP TABLESPACE ts1;\n\nNDB Example\n\nThis example shows how to drop an NDB tablespace myts having a data\nfile named mydata-1.dat after first creating the tablespace, and\nassumes the existence of a log file group named mylg (see [HELP CREATE\nLOGFILE GROUP]).\n\nmysql> CREATE TABLESPACE myts\n    ->     ADD DATAFILE \'mydata-1.dat\'\n    ->     USE LOGFILE GROUP mylg\n    ->     ENGINE=NDB;\n\nYou must remove all data files from the tablespace using ALTER\nTABLESPACE, as shown here, before it can be dropped:\n\nmysql> ALTER TABLESPACE myts\n    ->     DROP DATAFILE \'mydata-1.dat\'\n    ->     ENGINE=NDB;\n\nmysql> DROP TABLESPACE myts;\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-tablespace.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-tablespace.html'),(520,'DROP TRIGGER',33,'Syntax:\nDROP TRIGGER [IF EXISTS] [schema_name.]trigger_name\n\nThis statement drops a trigger. The schema (database) name is optional.\nIf the schema is omitted, the trigger is dropped from the default\nschema. DROP TRIGGER requires the TRIGGER privilege for the table\nassociated with the trigger.\n\nUse IF EXISTS to prevent an error from occurring for a trigger that\ndoes not exist. A NOTE is generated for a nonexistent trigger when\nusing IF EXISTS. See [HELP SHOW WARNINGS].\n\nTriggers for a table are also dropped if you drop the table.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-trigger.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-trigger.html'),(521,'DROP VIEW',33,'Syntax:\nDROP VIEW [IF EXISTS]\n    view_name [, view_name] ...\n    [RESTRICT | CASCADE]\n\nDROP VIEW removes one or more views. You must have the DROP privilege\nfor each view.\n\nIf any views named in the argument list do not exist, the statement\nreturns an error indicating by name which nonexisting views it was\nunable to drop, but also drops all views in the list that do exist.\n\n*Note*:\n\nIn MySQL 8.0, DROP VIEW fails if any views named in the argument list\ndo not exist. Due to the change in behavior, a partially completed DROP\nVIEW operation on a MySQL 5.7 master fails when replicated to a MySQL\n8.0 slave. To avoid this failure scenario, use IF EXISTS syntax in DROP\nVIEW statements to prevent an error from occurring for views that do\nnot exist. For more information, see Atomic Data Definition Statement\nSupport (https://dev.mysql.com/doc/refman/8.0/en/atomic-ddl.html).\n\nThe IF EXISTS clause prevents an error from occurring for views that\ndon\'t exist. When this clause is given, a NOTE is generated for each\nnonexistent view. See [HELP SHOW WARNINGS].\n\nRESTRICT and CASCADE, if given, are parsed and ignored.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-view.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-view.html'),(522,'RENAME TABLE',33,'Syntax:\nRENAME TABLE\n    tbl_name TO new_tbl_name\n    [, tbl_name2 TO new_tbl_name2] ...\n\nRENAME TABLE renames one or more tables. You must have ALTER and DROP\nprivileges for the original table, and CREATE and INSERT privileges for\nthe new table.\n\nFor example, to rename a table named old_table to new_table, use this\nstatement:\n\nRENAME TABLE old_table TO new_table;\n\nThat statement is equivalent to the following ALTER TABLE statement:\n\nALTER TABLE old_table RENAME new_table;\n\nRENAME TABLE, unlike ALTER TABLE, can rename multiple tables within a\nsingle statement:\n\nRENAME TABLE old_table1 TO new_table1,\n             old_table2 TO new_table2,\n             old_table3 TO new_table3;\n\nRenaming operations are performed left to right. Thus, to swap two\ntable names, do this (assuming that a table with the intermediary name\ntmp_table does not already exist):\n\nRENAME TABLE old_table TO tmp_table,\n             new_table TO old_table,\n             tmp_table TO new_table;\n\nMetadata locks on tables are acquired in name order, which in some\ncases can make a difference in operation outcome when multiple\ntransactions execute concurrently. See\nhttps://dev.mysql.com/doc/refman/5.7/en/metadata-locking.html.\n\nTo execute RENAME TABLE, there must be no active transactions or tables\nlocked with LOCK TABLES. With the transaction table locking conditions\nsatisfied, the rename operation is done atomically; no other session\ncan access any of the tables while the rename is in progress.\n\nIf any errors occur during a RENAME TABLE, the statement fails and no\nchanges are made.\n\nYou can use RENAME TABLE to move a table from one database to another:\n\nRENAME TABLE current_db.tbl_name TO other_db.tbl_name;\n\nUsing this method to move all tables from one database to a different\none in effect renames the database (an operation for which MySQL has no\nsingle statement), except that the original database continues to\nexist, albeit with no tables.\n\nLike RENAME TABLE, ALTER TABLE ... RENAME can also be used to move a\ntable to a different database. Regardless of the statement used, if the\nrename operation would move the table to a database located on a\ndifferent file system, the success of the outcome is platform specific\nand depends on the underlying operating system calls used to move table\nfiles.\n\nIf a table has triggers, attempts to rename the table into a different\ndatabase fail with a Trigger in wrong schema (ER_TRG_IN_WRONG_SCHEMA)\nerror.\n\nTo rename TEMPORARY tables, RENAME TABLE does not work. Use ALTER TABLE\ninstead.\n\nRENAME TABLE works for views, except that views cannot be renamed into\na different database.\n\nAny privileges granted specifically for a renamed table or view are not\nmigrated to the new name. They must be changed manually.\n\nRENAME TABLE tbl_name TO new_tbl_name changes internally generated\nforeign key constraint names and user-defined foreign key constraint\nnames that begin with the string \"tbl_name_ibfk_\" to reflect the new\ntable name. InnoDB interprets foreign key constraint names that begin\nwith the string \"tbl_name_ibfk_\" as internally generated names.\n\nForeign key constraint names that point to the renamed table are\nautomatically updated unless there is a conflict, in which case the\nstatement fails with an error. A conflict occurs if the renamed\nconstraint name already exists. In such cases, you must drop and\nre-create the foreign keys for them to function properly.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/rename-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/rename-table.html'),(523,'TRUNCATE TABLE',33,'Syntax:\nTRUNCATE [TABLE] tbl_name\n\nTRUNCATE TABLE empties a table completely. It requires the DROP\nprivilege.\n\nLogically, TRUNCATE TABLE is similar to a DELETE statement that deletes\nall rows, or a sequence of DROP TABLE and CREATE TABLE statements. To\nachieve high performance, it bypasses the DML method of deleting data.\nThus, it cannot be rolled back, it does not cause ON DELETE triggers to\nfire, and it cannot be performed for InnoDB tables with parent-child\nforeign key relationships.\n\nAlthough TRUNCATE TABLE is similar to DELETE, it is classified as a DDL\nstatement rather than a DML statement. It differs from DELETE in the\nfollowing ways:\n\no Truncate operations drop and re-create the table, which is much\n  faster than deleting rows one by one, particularly for large tables.\n\no Truncate operations cause an implicit commit, and so cannot be rolled\n  back. See\n  https://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\no Truncation operations cannot be performed if the session holds an\n  active table lock.\n\no TRUNCATE TABLE fails for an InnoDB table or NDB table if there are\n  any FOREIGN KEY constraints from other tables that reference the\n  table. Foreign key constraints between columns of the same table are\n  permitted.\n\no Truncation operations do not return a meaningful value for the number\n  of deleted rows. The usual result is \"0 rows affected,\" which should\n  be interpreted as \"no information.\"\n\no As long as the table format file tbl_name.frm is valid, the table can\n  be re-created as an empty table with TRUNCATE TABLE, even if the data\n  or index files have become corrupted.\n\no Any AUTO_INCREMENT value is reset to its start value. This is true\n  even for MyISAM and InnoDB, which normally do not reuse sequence\n  values.\n\no When used with partitioned tables, TRUNCATE TABLE preserves the\n  partitioning; that is, the data and index files are dropped and\n  re-created, while the partition definitions (.par) file is\n  unaffected.\n\no The TRUNCATE TABLE statement does not invoke ON DELETE triggers.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/truncate-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/truncate-table.html'),(524,'CALL',34,'Syntax:\nCALL sp_name([parameter[,...]])\nCALL sp_name[()]\n\nThe CALL statement invokes a stored procedure that was defined\npreviously with CREATE PROCEDURE.\n\nStored procedures that take no arguments can be invoked without\nparentheses. That is, CALL p() and CALL p are equivalent.\n\nCALL can pass back values to its caller using parameters that are\ndeclared as OUT or INOUT parameters. When the procedure returns, a\nclient program can also obtain the number of rows affected for the\nfinal statement executed within the routine: At the SQL level, call the\nROW_COUNT() function; from the C API, call the mysql_affected_rows()\nfunction.\n\nFor information about the effect of unhandled conditions on procedure\nparameters, see\nhttps://dev.mysql.com/doc/refman/5.7/en/conditions-and-parameters.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/call.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/call.html'),(525,'DELETE',34,'Syntax:\nDELETE is a DML statement that removes rows from a table.\n\nSingle-Table Syntax\n\nDELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [WHERE where_condition]\n    [ORDER BY ...]\n    [LIMIT row_count]\n\nThe DELETE statement deletes rows from tbl_name and returns the number\nof deleted rows. To check the number of deleted rows, call the\nROW_COUNT() function described in\nhttps://dev.mysql.com/doc/refman/5.7/en/information-functions.html.\n\nMain Clauses\n\nThe conditions in the optional WHERE clause identify which rows to\ndelete. With no WHERE clause, all rows are deleted.\n\nwhere_condition is an expression that evaluates to true for each row to\nbe deleted. It is specified as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/select.html.\n\nIf the ORDER BY clause is specified, the rows are deleted in the order\nthat is specified. The LIMIT clause places a limit on the number of\nrows that can be deleted. These clauses apply to single-table deletes,\nbut not multi-table deletes.\n\nMultiple-Table Syntax\n\nDELETE [LOW_PRIORITY] [QUICK] [IGNORE]\n    tbl_name[.*] [, tbl_name[.*]] ...\n    FROM table_references\n    [WHERE where_condition]\n\nDELETE [LOW_PRIORITY] [QUICK] [IGNORE]\n    FROM tbl_name[.*] [, tbl_name[.*]] ...\n    USING table_references\n    [WHERE where_condition]\n\nPrivileges\n\nYou need the DELETE privilege on a table to delete rows from it. You\nneed only the SELECT privilege for any columns that are only read, such\nas those named in the WHERE clause.\n\nPerformance\n\nWhen you do not need to know the number of deleted rows, the TRUNCATE\nTABLE statement is a faster way to empty a table than a DELETE\nstatement with no WHERE clause. Unlike DELETE, TRUNCATE TABLE cannot be\nused within a transaction or if you have a lock on the table. See [HELP\nTRUNCATE TABLE] and [HELP LOCK TABLES].\n\nThe speed of delete operations may also be affected by factors\ndiscussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/delete-optimization.html.\n\nTo ensure that a given DELETE statement does not take too much time,\nthe MySQL-specific LIMIT row_count clause for DELETE specifies the\nmaximum number of rows to be deleted. If the number of rows to delete\nis larger than the limit, repeat the DELETE statement until the number\nof affected rows is less than the LIMIT value.\n\nSubqueries\n\nYou cannot delete from a table and select from the same table in a\nsubquery.\n\nPartitioned Table Support\n\nDELETE supports explicit partition selection using the PARTITION\noption, which takes a list of the comma-separated names of one or more\npartitions or subpartitions (or both) from which to select rows to be\ndropped. Partitions not included in the list are ignored. Given a\npartitioned table t with a partition named p0, executing the statement\nDELETE FROM t PARTITION (p0) has the same effect on the table as\nexecuting ALTER TABLE t TRUNCATE PARTITION (p0); in both cases, all\nrows in partition p0 are dropped.\n\nPARTITION can be used along with a WHERE condition, in which case the\ncondition is tested only on rows in the listed partitions. For example,\nDELETE FROM t PARTITION (p0) WHERE c < 5 deletes rows only from\npartition p0 for which the condition c < 5 is true; rows in any other\npartitions are not checked and thus not affected by the DELETE.\n\nThe PARTITION option can also be used in multiple-table DELETE\nstatements. You can use up to one such option per table named in the\nFROM option.\n\nFor more information and examples, see\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-selection.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/delete.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/delete.html'),(526,'DO',34,'Syntax:\nDO expr [, expr] ...\n\nDO executes the expressions but does not return any results. In most\nrespects, DO is shorthand for SELECT expr, ..., but has the advantage\nthat it is slightly faster when you do not care about the result.\n\nDO is useful primarily with functions that have side effects, such as\nRELEASE_LOCK().\n\nExample: This SELECT statement pauses, but also produces a result set:\n\nmysql> SELECT SLEEP(5);\n+----------+\n| SLEEP(5) |\n+----------+\n|        0 |\n+----------+\n1 row in set (5.02 sec)\n\nDO, on the other hand, pauses without producing a result set.:\n\nmysql> DO SLEEP(5);\nQuery OK, 0 rows affected (4.99 sec)\n\nThis could be useful, for example in a stored function or trigger,\nwhich prohibit statements that produce result sets.\n\nDO only executes expressions. It cannot be used in all cases where\nSELECT can be used. For example, DO id FROM t1 is invalid because it\nreferences a table.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/do.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/do.html'),(527,'HANDLER',34,'Syntax:\nHANDLER tbl_name OPEN [ [AS] alias]\n\nHANDLER tbl_name READ index_name { = | <= | >= | < | > } (value1,value2,...)\n    [ WHERE where_condition ] [LIMIT ... ]\nHANDLER tbl_name READ index_name { FIRST | NEXT | PREV | LAST }\n    [ WHERE where_condition ] [LIMIT ... ]\nHANDLER tbl_name READ { FIRST | NEXT }\n    [ WHERE where_condition ] [LIMIT ... ]\n\nHANDLER tbl_name CLOSE\n\nThe HANDLER statement provides direct access to table storage engine\ninterfaces. It is available for InnoDB and MyISAM tables.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/handler.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/handler.html'),(528,'INSERT',34,'Syntax:\nINSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [(col_name [, col_name] ...)]\n    {VALUES | VALUE} (value_list) [, (value_list)] ...\n    [ON DUPLICATE KEY UPDATE assignment_list]\n\nINSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    SET assignment_list\n    [ON DUPLICATE KEY UPDATE assignment_list]\n\nINSERT [LOW_PRIORITY | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [(col_name [, col_name] ...)]\n    SELECT ...\n    [ON DUPLICATE KEY UPDATE assignment_list]\n\nvalue:\n    {expr | DEFAULT}\n\nvalue_list:\n    value [, value] ...\n\nassignment:\n    col_name = value\n\nassignment_list:\n    assignment [, assignment] ...\n\nINSERT inserts new rows into an existing table. The INSERT ... VALUES\nand INSERT ... SET forms of the statement insert rows based on\nexplicitly specified values. The INSERT ... SELECT form inserts rows\nselected from another table or tables. INSERT with an ON DUPLICATE KEY\nUPDATE clause enables existing rows to be updated if a row to be\ninserted would cause a duplicate value in a UNIQUE index or PRIMARY\nKEY.\n\nFor additional information about INSERT ... SELECT and INSERT ... ON\nDUPLICATE KEY UPDATE, see [HELP INSERT SELECT], and\nhttps://dev.mysql.com/doc/refman/5.7/en/insert-on-duplicate.html.\n\nIn MySQL 5.7, the DELAYED keyword is accepted but ignored by the\nserver. For the reasons for this, see [HELP INSERT DELAYED],\n\nInserting into a table requires the INSERT privilege for the table. If\nthe ON DUPLICATE KEY UPDATE clause is used and a duplicate key causes\nan UPDATE to be performed instead, the statement requires the UPDATE\nprivilege for the columns to be updated. For columns that are read but\nnot modified you need only the SELECT privilege (such as for a column\nreferenced only on the right hand side of an col_name=expr assignment\nin an ON DUPLICATE KEY UPDATE clause).\n\nWhen inserting into a partitioned table, you can control which\npartitions and subpartitions accept new rows. The PARTITION option\ntakes a list of the comma-separated names of one or more partitions or\nsubpartitions (or both) of the table. If any of the rows to be inserted\nby a given INSERT statement do not match one of the partitions listed,\nthe INSERT statement fails with the error Found a row not matching the\ngiven partition set. For more information and examples, see\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-selection.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/insert.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/insert.html'),(529,'INSERT SELECT',34,'Syntax:\nINSERT [LOW_PRIORITY | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [(col_name [, col_name] ...)]\n    SELECT ...\n    [ON DUPLICATE KEY UPDATE assignment_list]\n\nvalue:\n    {expr | DEFAULT}\n\nassignment:\n    col_name = value\n\nassignment_list:\n    assignment [, assignment] ...\n\nWith INSERT ... SELECT, you can quickly insert many rows into a table\nfrom the result of a SELECT statement, which can select from one or\nmany tables. For example:\n\nINSERT INTO tbl_temp2 (fld_id)\n  SELECT tbl_temp1.fld_order_id\n  FROM tbl_temp1 WHERE tbl_temp1.fld_order_id > 100;\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/insert-select.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/insert-select.html'),(530,'INSERT DELAYED',34,'Syntax:\nINSERT DELAYED ...\n\nThe DELAYED option for the INSERT statement is a MySQL extension to\nstandard SQL. In previous versions of MySQL, it can be used for certain\nkinds of tables (such as MyISAM), such that when a client uses INSERT\nDELAYED, it gets an okay from the server at once, and the row is queued\nto be inserted when the table is not in use by any other thread.\n\nDELAYED inserts and replaces were deprecated in MySQL 5.6. In MySQL\n5.7, DELAYED is not supported. The server recognizes but ignores the\nDELAYED keyword, handles the insert as a nondelayed insert, and\ngenerates an ER_WARN_LEGACY_SYNTAX_CONVERTED warning (\"INSERT DELAYED\nis no longer supported. The statement was converted to INSERT\"). The\nDELAYED keyword is scheduled for removal in a future release.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/insert-delayed.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/insert-delayed.html'),(531,'LOAD DATA',34,'Syntax:\nLOAD DATA\n    [LOW_PRIORITY | CONCURRENT] [LOCAL]\n    INFILE \'file_name\'\n    [REPLACE | IGNORE]\n    INTO TABLE tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [CHARACTER SET charset_name]\n    [{FIELDS | COLUMNS}\n        [TERMINATED BY \'string\']\n        [[OPTIONALLY] ENCLOSED BY \'char\']\n        [ESCAPED BY \'char\']\n    ]\n    [LINES\n        [STARTING BY \'string\']\n        [TERMINATED BY \'string\']\n    ]\n    [IGNORE number {LINES | ROWS}]\n    [(col_name_or_user_var\n        [, col_name_or_user_var] ...)]\n    [SET col_name={expr | DEFAULT},\n        [, col_name={expr | DEFAULT}] ...]\n\nThe LOAD DATA statement reads rows from a text file into a table at a\nvery high speed. LOAD DATA is the complement of SELECT ... INTO\nOUTFILE. (See\nhttps://dev.mysql.com/doc/refman/5.7/en/select-into.html.) To write\ndata from a table to a file, use SELECT ... INTO OUTFILE. To read the\nfile back into a table, use LOAD DATA. The syntax of the FIELDS and\nLINES clauses is the same for both statements.\n\nYou can also load data files by using the mysqlimport utility; see\nhttps://dev.mysql.com/doc/refman/5.7/en/mysqlimport.html. mysqlimport\noperates by sending a LOAD DATA statement to the server.\n\nFor more information about the efficiency of INSERT versus LOAD DATA\nand speeding up LOAD DATA, see\nhttps://dev.mysql.com/doc/refman/5.7/en/insert-optimization.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/load-data.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/load-data.html'),(532,'LOAD XML',34,'Syntax:\nLOAD XML\n    [LOW_PRIORITY | CONCURRENT] [LOCAL]\n    INFILE \'file_name\'\n    [REPLACE | IGNORE]\n    INTO TABLE [db_name.]tbl_name\n    [CHARACTER SET charset_name]\n    [ROWS IDENTIFIED BY \'<tagname>\']\n    [IGNORE number {LINES | ROWS}]\n    [(field_name_or_user_var\n        [, field_name_or_user_var] ...)]\n    [SET col_name={expr | DEFAULT},\n        [, col_name={expr | DEFAULT}] ...]\n\nThe LOAD XML statement reads data from an XML file into a table. The\nfile_name must be given as a literal string. The tagname in the\noptional ROWS IDENTIFIED BY clause must also be given as a literal\nstring, and must be surrounded by angle brackets (< and >).\n\nLOAD XML acts as the complement of running the mysql client in XML\noutput mode (that is, starting the client with the --xml option). To\nwrite data from a table to an XML file, you can invoke the mysql client\nwith the --xml and -e options from the system shell, as shown here:\n\nshell> mysql --xml -e \'SELECT * FROM mydb.mytable\' > file.xml\n\nTo read the file back into a table, use LOAD XML. By default, the <row>\nelement is considered to be the equivalent of a database table row;\nthis can be changed using the ROWS IDENTIFIED BY clause.\n\nThis statement supports three different XML formats:\n\no Column names as attributes and column values as attribute values:\n\n<row column1=\"value1\" column2=\"value2\" .../>\n\no Column names as tags and column values as the content of these tags:\n\n<row>\n  <column1>value1</column1>\n  <column2>value2</column2>\n</row>\n\no Column names are the name attributes of <field> tags, and values are\n  the contents of these tags:\n\n<row>\n  <field name=\'column1\'>value1</field>\n  <field name=\'column2\'>value2</field>\n</row>\n\n  This is the format used by other MySQL tools, such as mysqldump.\n\nAll three formats can be used in the same XML file; the import routine\nautomatically detects the format for each row and interprets it\ncorrectly. Tags are matched based on the tag or attribute name and the\ncolumn name.\n\nThe following clauses work essentially the same way for LOAD XML as\nthey do for LOAD DATA:\n\no LOW_PRIORITY or CONCURRENT\n\no LOCAL\n\no REPLACE or IGNORE\n\no CHARACTER SET\n\no SET\n\nSee [HELP LOAD DATA], for more information about these clauses.\n\n(field_name_or_user_var, ...) is a list of one or more comma-separated\nXML fields or user variables. The name of a user variable used for this\npurpose must match the name of a field from the XML file, prefixed with\n@. You can use field names to select only desired fields. User\nvariables can be employed to store the corresponding field values for\nsubsequent re-use.\n\nThe IGNORE number LINES or IGNORE number ROWS clause causes the first\nnumber rows in the XML file to be skipped. It is analogous to the LOAD\nDATA statement\'s IGNORE ... LINES clause.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/load-xml.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/load-xml.html'),(533,'REPLACE',34,'Syntax:\nREPLACE [LOW_PRIORITY | DELAYED]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [(col_name [, col_name] ...)]\n    {VALUES | VALUE} (value_list) [, (value_list)] ...\n\nREPLACE [LOW_PRIORITY | DELAYED]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    SET assignment_list\n\nREPLACE [LOW_PRIORITY | DELAYED]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [(col_name [, col_name] ...)]\n    SELECT ...\n\nvalue:\n    {expr | DEFAULT}\n\nvalue_list:\n    value [, value] ...\n\nassignment:\n    col_name = value\n\nassignment_list:\n    assignment [, assignment] ...\n\nREPLACE works exactly like INSERT, except that if an old row in the\ntable has the same value as a new row for a PRIMARY KEY or a UNIQUE\nindex, the old row is deleted before the new row is inserted. See [HELP\nINSERT].\n\nREPLACE is a MySQL extension to the SQL standard. It either inserts, or\ndeletes and inserts. For another MySQL extension to standard SQL---that\neither inserts or updates---see\nhttps://dev.mysql.com/doc/refman/5.7/en/insert-on-duplicate.html.\n\nDELAYED inserts and replaces were deprecated in MySQL 5.6. In MySQL\n5.7, DELAYED is not supported. The server recognizes but ignores the\nDELAYED keyword, handles the replace as a nondelayed replace, and\ngenerates an ER_WARN_LEGACY_SYNTAX_CONVERTED warning. (\"REPLACE DELAYED\nis no longer supported. The statement was converted to REPLACE.\") The\nDELAYED keyword will be removed in a future release.\n\n*Note*:\n\nREPLACE makes sense only if a table has a PRIMARY KEY or UNIQUE index.\nOtherwise, it becomes equivalent to INSERT, because there is no index\nto be used to determine whether a new row duplicates another.\n\nValues for all columns are taken from the values specified in the\nREPLACE statement. Any missing columns are set to their default values,\njust as happens for INSERT. You cannot refer to values from the current\nrow and use them in the new row. If you use an assignment such as SET\ncol_name = col_name + 1, the reference to the column name on the right\nhand side is treated as DEFAULT(col_name), so the assignment is\nequivalent to SET col_name = DEFAULT(col_name) + 1.\n\nTo use REPLACE, you must have both the INSERT and DELETE privileges for\nthe table.\n\nIf a generated column is replaced explicitly, the only permitted value\nis DEFAULT. For information about generated columns, see\nhttps://dev.mysql.com/doc/refman/5.7/en/create-table-generated-columns.\nhtml.\n\nREPLACE supports explicit partition selection using the PARTITION\nkeyword with a list of comma-separated names of partitions,\nsubpartitions, or both. As with INSERT, if it is not possible to insert\nthe new row into any of these partitions or subpartitions, the REPLACE\nstatement fails with the error Found a row not matching the given\npartition set. For more information and examples, see\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-selection.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/replace.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/replace.html'),(534,'SELECT',34,'Syntax:\nSELECT\n    [ALL | DISTINCT | DISTINCTROW ]\n      [HIGH_PRIORITY]\n      [STRAIGHT_JOIN]\n      [SQL_SMALL_RESULT] [SQL_BIG_RESULT] [SQL_BUFFER_RESULT]\n      [SQL_CACHE | SQL_NO_CACHE] [SQL_CALC_FOUND_ROWS]\n    select_expr [, select_expr ...]\n    [FROM table_references\n      [PARTITION partition_list]\n    [WHERE where_condition]\n    [GROUP BY {col_name | expr | position}\n      [ASC | DESC], ... [WITH ROLLUP]]\n    [HAVING where_condition]\n    [ORDER BY {col_name | expr | position}\n      [ASC | DESC], ...]\n    [LIMIT {[offset,] row_count | row_count OFFSET offset}]\n    [PROCEDURE procedure_name(argument_list)]\n    [INTO OUTFILE \'file_name\'\n        [CHARACTER SET charset_name]\n        export_options\n      | INTO DUMPFILE \'file_name\'\n      | INTO var_name [, var_name]]\n    [FOR UPDATE | LOCK IN SHARE MODE]]\n\nSELECT is used to retrieve rows selected from one or more tables, and\ncan include UNION statements and subqueries. See [HELP UNION], and\nhttps://dev.mysql.com/doc/refman/5.7/en/subqueries.html.\n\nThe most commonly used clauses of SELECT statements are these:\n\no Each select_expr indicates a column that you want to retrieve. There\n  must be at least one select_expr.\n\no table_references indicates the table or tables from which to retrieve\n  rows. Its syntax is described in [HELP JOIN].\n\no SELECT supports explicit partition selection using the PARTITION with\n  a list of partitions or subpartitions (or both) following the name of\n  the table in a table_reference (see [HELP JOIN]). In this case, rows\n  are selected only from the partitions listed, and any other\n  partitions of the table are ignored. For more information and\n  examples, see\n  https://dev.mysql.com/doc/refman/5.7/en/partitioning-selection.html.\n\n  SELECT ... PARTITION from tables using storage engines such as MyISAM\n  that perform table-level locks (and thus partition locks) lock only\n  the partitions or subpartitions named by the PARTITION option.\n\n  For more information, see\n  https://dev.mysql.com/doc/refman/5.7/en/partitioning-limitations-lock\n  ing.html.\n\no The WHERE clause, if given, indicates the condition or conditions\n  that rows must satisfy to be selected. where_condition is an\n  expression that evaluates to true for each row to be selected. The\n  statement selects all rows if there is no WHERE clause.\n\n  In the WHERE expression, you can use any of the functions and\n  operators that MySQL supports, except for aggregate (summary)\n  functions. See\n  https://dev.mysql.com/doc/refman/5.7/en/expressions.html, and\n  https://dev.mysql.com/doc/refman/5.7/en/functions.html.\n\nSELECT can also be used to retrieve rows computed without reference to\nany table.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/select.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/select.html'),(535,'DUAL',34,'You are permitted to specify DUAL as a dummy table name in situations\nwhere no tables are referenced:\n\nmysql> SELECT 1 + 1 FROM DUAL;\n        -> 2\n\nDUAL is purely for the convenience of people who require that all\nSELECT statements should have FROM and possibly other clauses. MySQL\nmay ignore the clauses. MySQL does not require FROM DUAL if no tables\nare referenced.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/select.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/select.html'),(536,'JOIN',34,'MySQL supports the following JOIN syntax for the table_references part\nof SELECT statements and multiple-table DELETE and UPDATE statements:\n\ntable_references:\n    escaped_table_reference [, escaped_table_reference] ...\n\nescaped_table_reference:\n    table_reference\n  | { OJ table_reference }\n\ntable_reference:\n    table_factor\n  | joined_table\n\ntable_factor:\n    tbl_name [PARTITION (partition_names)]\n        [[AS] alias] [index_hint_list]\n  | table_subquery [AS] alias\n  | ( table_references )\n\njoined_table:\n    table_reference [INNER | CROSS] JOIN table_factor [join_specification]\n  | table_reference STRAIGHT_JOIN table_factor\n  | table_reference STRAIGHT_JOIN table_factor ON search_condition\n  | table_reference {LEFT|RIGHT} [OUTER] JOIN table_reference join_specification\n  | table_reference NATURAL [{LEFT|RIGHT} [OUTER]] JOIN table_factor\n\njoin_specification:\n    ON search_condition\n  | USING (join_column_list)\n\njoin_column_list:\n    column_name [, column_name] ...\n\nindex_hint_list:\n    index_hint [, index_hint] ...\n\nindex_hint:\n    USE {INDEX|KEY}\n      [FOR {JOIN|ORDER BY|GROUP BY}] ([index_list])\n  | {IGNORE|FORCE} {INDEX|KEY}\n      [FOR {JOIN|ORDER BY|GROUP BY}] (index_list)\n\nindex_list:\n    index_name [, index_name] ...\n\nA table reference is also known as a join expression.\n\nA table reference (when it refers to a partitioned table) may contain a\nPARTITION option, including a list of comma-separated partitions,\nsubpartitions, or both. This option follows the name of the table and\nprecedes any alias declaration. The effect of this option is that rows\nare selected only from the listed partitions or subpartitions. Any\npartitions or subpartitions not named in the list are ignored. For more\ninformation and examples, see\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-selection.html.\n\nThe syntax of table_factor is extended in MySQL in comparison with\nstandard SQL. The standard accepts only table_reference, not a list of\nthem inside a pair of parentheses.\n\nThis is a conservative extension if each comma in a list of\ntable_reference items is considered as equivalent to an inner join. For\nexample:\n\nSELECT * FROM t1 LEFT JOIN (t2, t3, t4)\n                 ON (t2.a = t1.a AND t3.b = t1.b AND t4.c = t1.c)\n\nis equivalent to:\n\nSELECT * FROM t1 LEFT JOIN (t2 CROSS JOIN t3 CROSS JOIN t4)\n                 ON (t2.a = t1.a AND t3.b = t1.b AND t4.c = t1.c)\n\nIn MySQL, JOIN, CROSS JOIN, and INNER JOIN are syntactic equivalents\n(they can replace each other). In standard SQL, they are not\nequivalent. INNER JOIN is used with an ON clause, CROSS JOIN is used\notherwise.\n\nIn general, parentheses can be ignored in join expressions containing\nonly inner join operations. MySQL also supports nested joins. See\nhttps://dev.mysql.com/doc/refman/5.7/en/nested-join-optimization.html.\n\nIndex hints can be specified to affect how the MySQL optimizer makes\nuse of indexes. For more information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/index-hints.html. Optimizer\nhints and the optimizer_switch system variable are other ways to\ninfluence optimizer use of indexes. See\nhttps://dev.mysql.com/doc/refman/5.7/en/optimizer-hints.html, and\nhttps://dev.mysql.com/doc/refman/5.7/en/switchable-optimizations.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/join.html\n\n','SELECT left_tbl.*\n  FROM left_tbl LEFT JOIN right_tbl ON left_tbl.id = right_tbl.id\n  WHERE right_tbl.id IS NULL;\n','https://dev.mysql.com/doc/refman/5.7/en/join.html'),(537,'UNION',34,'Syntax:\nSELECT ...\nUNION [ALL | DISTINCT] SELECT ...\n[UNION [ALL | DISTINCT] SELECT ...]\n\nUNION is used to combine the result from multiple SELECT statements\ninto a single result set.\n\nThe column names from the first SELECT statement are used as the column\nnames for the results returned. Selected columns listed in\ncorresponding positions of each SELECT statement should have the same\ndata type. (For example, the first column selected by the first\nstatement should have the same type as the first column selected by the\nother statements.)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/union.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/union.html'),(538,'UPDATE',34,'Syntax:\nUPDATE is a DML statement that modifies rows in a table.\n\nSingle-table syntax:\n\nUPDATE [LOW_PRIORITY] [IGNORE] table_reference\n    SET assignment_list\n    [WHERE where_condition]\n    [ORDER BY ...]\n    [LIMIT row_count]\n\nvalue:\n    {expr | DEFAULT}\n\nassignment:\n    col_name = value\n\nassignment_list:\n    assignment [, assignment] ...\n\nMultiple-table syntax:\n\nUPDATE [LOW_PRIORITY] [IGNORE] table_references\n    SET assignment_list\n    [WHERE where_condition]\n\nFor the single-table syntax, the UPDATE statement updates columns of\nexisting rows in the named table with new values. The SET clause\nindicates which columns to modify and the values they should be given.\nEach value can be given as an expression, or the keyword DEFAULT to set\na column explicitly to its default value. The WHERE clause, if given,\nspecifies the conditions that identify which rows to update. With no\nWHERE clause, all rows are updated. If the ORDER BY clause is\nspecified, the rows are updated in the order that is specified. The\nLIMIT clause places a limit on the number of rows that can be updated.\n\nFor the multiple-table syntax, UPDATE updates rows in each table named\nin table_references that satisfy the conditions. Each matching row is\nupdated once, even if it matches the conditions multiple times. For\nmultiple-table syntax, ORDER BY and LIMIT cannot be used.\n\nFor partitioned tables, both the single-single and multiple-table forms\nof this statement support the use of a PARTITION option as part of a\ntable reference. This option takes a list of one or more partitions or\nsubpartitions (or both). Only the partitions (or subpartitions) listed\nare checked for matches, and a row that is not in any of these\npartitions or subpartitions is not updated, whether it satisfies the\nwhere_condition or not.\n\n*Note*:\n\nUnlike the case when using PARTITION with an INSERT or REPLACE\nstatement, an otherwise valid UPDATE ... PARTITION statement is\nconsidered successful even if no rows in the listed partitions (or\nsubpartitions) match the where_condition.\n\nFor more information and examples, see\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-selection.html.\n\nwhere_condition is an expression that evaluates to true for each row to\nbe updated. For expression syntax, see\nhttps://dev.mysql.com/doc/refman/5.7/en/expressions.html.\n\ntable_references and where_condition are specified as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/select.html.\n\nYou need the UPDATE privilege only for columns referenced in an UPDATE\nthat are actually updated. You need only the SELECT privilege for any\ncolumns that are read but not modified.\n\nThe UPDATE statement supports the following modifiers:\n\no With the LOW_PRIORITY modifier, execution of the UPDATE is delayed\n  until no other clients are reading from the table. This affects only\n  storage engines that use only table-level locking (such as MyISAM,\n  MEMORY, and MERGE).\n\no With the IGNORE modifier, the update statement does not abort even if\n  errors occur during the update. Rows for which duplicate-key\n  conflicts occur on a unique key value are not updated. Rows updated\n  to values that would cause data conversion errors are updated to the\n  closest valid values instead. For more information, see\n  https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#ignore-strict-c\n  omparison.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/update.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/update.html'),(539,'START TRANSACTION',35,'Syntax:\nSTART TRANSACTION\n    [transaction_characteristic [, transaction_characteristic] ...]\n\ntransaction_characteristic: {\n    WITH CONSISTENT SNAPSHOT\n  | READ WRITE\n  | READ ONLY\n}\n\nBEGIN [WORK]\nCOMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nSET autocommit = {0 | 1}\n\nThese statements provide control over use of transactions:\n\no START TRANSACTION or BEGIN start a new transaction.\n\no COMMIT commits the current transaction, making its changes permanent.\n\no ROLLBACK rolls back the current transaction, canceling its changes.\n\no SET autocommit disables or enables the default autocommit mode for\n  the current session.\n\nBy default, MySQL runs with autocommit mode enabled. This means that as\nsoon as you execute a statement that updates (modifies) a table, MySQL\nstores the update on disk to make it permanent. The change cannot be\nrolled back.\n\nTo disable autocommit mode implicitly for a single series of\nstatements, use the START TRANSACTION statement:\n\nSTART TRANSACTION;\nSELECT @A:=SUM(salary) FROM table1 WHERE type=1;\nUPDATE table2 SET summary=@A WHERE type=1;\nCOMMIT;\n\nWith START TRANSACTION, autocommit remains disabled until you end the\ntransaction with COMMIT or ROLLBACK. The autocommit mode then reverts\nto its previous state.\n\nSTART TRANSACTION permits several modifiers that control transaction\ncharacteristics. To specify multiple modifiers, separate them by\ncommas.\n\no The WITH CONSISTENT SNAPSHOT modifier starts a consistent read for\n  storage engines that are capable of it. This applies only to InnoDB.\n  The effect is the same as issuing a START TRANSACTION followed by a\n  SELECT from any InnoDB table. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html.\n  The WITH CONSISTENT SNAPSHOT modifier does not change the current\n  transaction isolation level, so it provides a consistent snapshot\n  only if the current isolation level is one that permits a consistent\n  read. The only isolation level that permits a consistent read is\n  REPEATABLE READ. For all other isolation levels, the WITH CONSISTENT\n  SNAPSHOT clause is ignored. As of MySQL 5.7.2, a warning is generated\n  when the WITH CONSISTENT SNAPSHOT clause is ignored.\n\no The READ WRITE and READ ONLY modifiers set the transaction access\n  mode. They permit or prohibit changes to tables used in the\n  transaction. The READ ONLY restriction prevents the transaction from\n  modifying or locking both transactional and nontransactional tables\n  that are visible to other transactions; the transaction can still\n  modify or lock temporary tables.\n\n  MySQL enables extra optimizations for queries on InnoDB tables when\n  the transaction is known to be read-only. Specifying READ ONLY\n  ensures these optimizations are applied in cases where the read-only\n  status cannot be determined automatically. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-performance-ro-txn.htm\n  l for more information.\n\n  If no access mode is specified, the default mode applies. Unless the\n  default has been changed, it is read/write. It is not permitted to\n  specify both READ WRITE and READ ONLY in the same statement.\n\n  In read-only mode, it remains possible to change tables created with\n  the TEMPORARY keyword using DML statements. Changes made with DDL\n  statements are not permitted, just as with permanent tables.\n\n  For additional information about transaction access mode, including\n  ways to change the default mode, see [HELP SET TRANSACTION].\n\n  If the read_only system variable is enabled, explicitly starting a\n  transaction with START TRANSACTION READ WRITE requires the SUPER\n  privilege.\n\n*Important*:\n\nMany APIs used for writing MySQL client applications (such as JDBC)\nprovide their own methods for starting transactions that can (and\nsometimes should) be used instead of sending a START TRANSACTION\nstatement from the client. See\nhttps://dev.mysql.com/doc/refman/5.7/en/connectors-apis.html, or the\ndocumentation for your API, for more information.\n\nTo disable autocommit mode explicitly, use the following statement:\n\nSET autocommit=0;\n\nAfter disabling autocommit mode by setting the autocommit variable to\nzero, changes to transaction-safe tables (such as those for InnoDB or\nNDB) are not made permanent immediately. You must use COMMIT to store\nyour changes to disk or ROLLBACK to ignore the changes.\n\nautocommit is a session variable and must be set for each session. To\ndisable autocommit mode for each new connection, see the description of\nthe autocommit system variable at\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nBEGIN and BEGIN WORK are supported as aliases of START TRANSACTION for\ninitiating a transaction. START TRANSACTION is standard SQL syntax, is\nthe recommended way to start an ad-hoc transaction, and permits\nmodifiers that BEGIN does not.\n\nThe BEGIN statement differs from the use of the BEGIN keyword that\nstarts a BEGIN ... END compound statement. The latter does not begin a\ntransaction. See [HELP BEGIN END].\n\n*Note*:\n\nWithin all stored programs (stored procedures and functions, triggers,\nand events), the parser treats BEGIN [WORK] as the beginning of a BEGIN\n... END block. Begin a transaction in this context with START\nTRANSACTION instead.\n\nThe optional WORK keyword is supported for COMMIT and ROLLBACK, as are\nthe CHAIN and RELEASE clauses. CHAIN and RELEASE can be used for\nadditional control over transaction completion. The value of the\ncompletion_type system variable determines the default completion\nbehavior. See\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nThe AND CHAIN clause causes a new transaction to begin as soon as the\ncurrent one ends, and the new transaction has the same isolation level\nas the just-terminated transaction. The new transaction also uses the\nsame access mode (READ WRITE or READ ONLY) as the just-terminated\ntransaction. The RELEASE clause causes the server to disconnect the\ncurrent client session after terminating the current transaction.\nIncluding the NO keyword suppresses CHAIN or RELEASE completion, which\ncan be useful if the completion_type system variable is set to cause\nchaining or release completion by default.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/commit.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/commit.html'),(540,'BEGIN',35,'Syntax:\nSTART TRANSACTION\n    [transaction_characteristic [, transaction_characteristic] ...]\n\ntransaction_characteristic: {\n    WITH CONSISTENT SNAPSHOT\n  | READ WRITE\n  | READ ONLY\n}\n\nBEGIN [WORK]\nCOMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nSET autocommit = {0 | 1}\n\nThese statements provide control over use of transactions:\n\no START TRANSACTION or BEGIN start a new transaction.\n\no COMMIT commits the current transaction, making its changes permanent.\n\no ROLLBACK rolls back the current transaction, canceling its changes.\n\no SET autocommit disables or enables the default autocommit mode for\n  the current session.\n\nBy default, MySQL runs with autocommit mode enabled. This means that as\nsoon as you execute a statement that updates (modifies) a table, MySQL\nstores the update on disk to make it permanent. The change cannot be\nrolled back.\n\nTo disable autocommit mode implicitly for a single series of\nstatements, use the START TRANSACTION statement:\n\nSTART TRANSACTION;\nSELECT @A:=SUM(salary) FROM table1 WHERE type=1;\nUPDATE table2 SET summary=@A WHERE type=1;\nCOMMIT;\n\nWith START TRANSACTION, autocommit remains disabled until you end the\ntransaction with COMMIT or ROLLBACK. The autocommit mode then reverts\nto its previous state.\n\nSTART TRANSACTION permits several modifiers that control transaction\ncharacteristics. To specify multiple modifiers, separate them by\ncommas.\n\no The WITH CONSISTENT SNAPSHOT modifier starts a consistent read for\n  storage engines that are capable of it. This applies only to InnoDB.\n  The effect is the same as issuing a START TRANSACTION followed by a\n  SELECT from any InnoDB table. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html.\n  The WITH CONSISTENT SNAPSHOT modifier does not change the current\n  transaction isolation level, so it provides a consistent snapshot\n  only if the current isolation level is one that permits a consistent\n  read. The only isolation level that permits a consistent read is\n  REPEATABLE READ. For all other isolation levels, the WITH CONSISTENT\n  SNAPSHOT clause is ignored. As of MySQL 5.7.2, a warning is generated\n  when the WITH CONSISTENT SNAPSHOT clause is ignored.\n\no The READ WRITE and READ ONLY modifiers set the transaction access\n  mode. They permit or prohibit changes to tables used in the\n  transaction. The READ ONLY restriction prevents the transaction from\n  modifying or locking both transactional and nontransactional tables\n  that are visible to other transactions; the transaction can still\n  modify or lock temporary tables.\n\n  MySQL enables extra optimizations for queries on InnoDB tables when\n  the transaction is known to be read-only. Specifying READ ONLY\n  ensures these optimizations are applied in cases where the read-only\n  status cannot be determined automatically. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-performance-ro-txn.htm\n  l for more information.\n\n  If no access mode is specified, the default mode applies. Unless the\n  default has been changed, it is read/write. It is not permitted to\n  specify both READ WRITE and READ ONLY in the same statement.\n\n  In read-only mode, it remains possible to change tables created with\n  the TEMPORARY keyword using DML statements. Changes made with DDL\n  statements are not permitted, just as with permanent tables.\n\n  For additional information about transaction access mode, including\n  ways to change the default mode, see [HELP SET TRANSACTION].\n\n  If the read_only system variable is enabled, explicitly starting a\n  transaction with START TRANSACTION READ WRITE requires the SUPER\n  privilege.\n\n*Important*:\n\nMany APIs used for writing MySQL client applications (such as JDBC)\nprovide their own methods for starting transactions that can (and\nsometimes should) be used instead of sending a START TRANSACTION\nstatement from the client. See\nhttps://dev.mysql.com/doc/refman/5.7/en/connectors-apis.html, or the\ndocumentation for your API, for more information.\n\nTo disable autocommit mode explicitly, use the following statement:\n\nSET autocommit=0;\n\nAfter disabling autocommit mode by setting the autocommit variable to\nzero, changes to transaction-safe tables (such as those for InnoDB or\nNDB) are not made permanent immediately. You must use COMMIT to store\nyour changes to disk or ROLLBACK to ignore the changes.\n\nautocommit is a session variable and must be set for each session. To\ndisable autocommit mode for each new connection, see the description of\nthe autocommit system variable at\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nBEGIN and BEGIN WORK are supported as aliases of START TRANSACTION for\ninitiating a transaction. START TRANSACTION is standard SQL syntax, is\nthe recommended way to start an ad-hoc transaction, and permits\nmodifiers that BEGIN does not.\n\nThe BEGIN statement differs from the use of the BEGIN keyword that\nstarts a BEGIN ... END compound statement. The latter does not begin a\ntransaction. See [HELP BEGIN END].\n\n*Note*:\n\nWithin all stored programs (stored procedures and functions, triggers,\nand events), the parser treats BEGIN [WORK] as the beginning of a BEGIN\n... END block. Begin a transaction in this context with START\nTRANSACTION instead.\n\nThe optional WORK keyword is supported for COMMIT and ROLLBACK, as are\nthe CHAIN and RELEASE clauses. CHAIN and RELEASE can be used for\nadditional control over transaction completion. The value of the\ncompletion_type system variable determines the default completion\nbehavior. See\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nThe AND CHAIN clause causes a new transaction to begin as soon as the\ncurrent one ends, and the new transaction has the same isolation level\nas the just-terminated transaction. The new transaction also uses the\nsame access mode (READ WRITE or READ ONLY) as the just-terminated\ntransaction. The RELEASE clause causes the server to disconnect the\ncurrent client session after terminating the current transaction.\nIncluding the NO keyword suppresses CHAIN or RELEASE completion, which\ncan be useful if the completion_type system variable is set to cause\nchaining or release completion by default.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/commit.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/commit.html'),(541,'COMMIT',35,'Syntax:\nSTART TRANSACTION\n    [transaction_characteristic [, transaction_characteristic] ...]\n\ntransaction_characteristic: {\n    WITH CONSISTENT SNAPSHOT\n  | READ WRITE\n  | READ ONLY\n}\n\nBEGIN [WORK]\nCOMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nSET autocommit = {0 | 1}\n\nThese statements provide control over use of transactions:\n\no START TRANSACTION or BEGIN start a new transaction.\n\no COMMIT commits the current transaction, making its changes permanent.\n\no ROLLBACK rolls back the current transaction, canceling its changes.\n\no SET autocommit disables or enables the default autocommit mode for\n  the current session.\n\nBy default, MySQL runs with autocommit mode enabled. This means that as\nsoon as you execute a statement that updates (modifies) a table, MySQL\nstores the update on disk to make it permanent. The change cannot be\nrolled back.\n\nTo disable autocommit mode implicitly for a single series of\nstatements, use the START TRANSACTION statement:\n\nSTART TRANSACTION;\nSELECT @A:=SUM(salary) FROM table1 WHERE type=1;\nUPDATE table2 SET summary=@A WHERE type=1;\nCOMMIT;\n\nWith START TRANSACTION, autocommit remains disabled until you end the\ntransaction with COMMIT or ROLLBACK. The autocommit mode then reverts\nto its previous state.\n\nSTART TRANSACTION permits several modifiers that control transaction\ncharacteristics. To specify multiple modifiers, separate them by\ncommas.\n\no The WITH CONSISTENT SNAPSHOT modifier starts a consistent read for\n  storage engines that are capable of it. This applies only to InnoDB.\n  The effect is the same as issuing a START TRANSACTION followed by a\n  SELECT from any InnoDB table. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html.\n  The WITH CONSISTENT SNAPSHOT modifier does not change the current\n  transaction isolation level, so it provides a consistent snapshot\n  only if the current isolation level is one that permits a consistent\n  read. The only isolation level that permits a consistent read is\n  REPEATABLE READ. For all other isolation levels, the WITH CONSISTENT\n  SNAPSHOT clause is ignored. As of MySQL 5.7.2, a warning is generated\n  when the WITH CONSISTENT SNAPSHOT clause is ignored.\n\no The READ WRITE and READ ONLY modifiers set the transaction access\n  mode. They permit or prohibit changes to tables used in the\n  transaction. The READ ONLY restriction prevents the transaction from\n  modifying or locking both transactional and nontransactional tables\n  that are visible to other transactions; the transaction can still\n  modify or lock temporary tables.\n\n  MySQL enables extra optimizations for queries on InnoDB tables when\n  the transaction is known to be read-only. Specifying READ ONLY\n  ensures these optimizations are applied in cases where the read-only\n  status cannot be determined automatically. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-performance-ro-txn.htm\n  l for more information.\n\n  If no access mode is specified, the default mode applies. Unless the\n  default has been changed, it is read/write. It is not permitted to\n  specify both READ WRITE and READ ONLY in the same statement.\n\n  In read-only mode, it remains possible to change tables created with\n  the TEMPORARY keyword using DML statements. Changes made with DDL\n  statements are not permitted, just as with permanent tables.\n\n  For additional information about transaction access mode, including\n  ways to change the default mode, see [HELP SET TRANSACTION].\n\n  If the read_only system variable is enabled, explicitly starting a\n  transaction with START TRANSACTION READ WRITE requires the SUPER\n  privilege.\n\n*Important*:\n\nMany APIs used for writing MySQL client applications (such as JDBC)\nprovide their own methods for starting transactions that can (and\nsometimes should) be used instead of sending a START TRANSACTION\nstatement from the client. See\nhttps://dev.mysql.com/doc/refman/5.7/en/connectors-apis.html, or the\ndocumentation for your API, for more information.\n\nTo disable autocommit mode explicitly, use the following statement:\n\nSET autocommit=0;\n\nAfter disabling autocommit mode by setting the autocommit variable to\nzero, changes to transaction-safe tables (such as those for InnoDB or\nNDB) are not made permanent immediately. You must use COMMIT to store\nyour changes to disk or ROLLBACK to ignore the changes.\n\nautocommit is a session variable and must be set for each session. To\ndisable autocommit mode for each new connection, see the description of\nthe autocommit system variable at\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nBEGIN and BEGIN WORK are supported as aliases of START TRANSACTION for\ninitiating a transaction. START TRANSACTION is standard SQL syntax, is\nthe recommended way to start an ad-hoc transaction, and permits\nmodifiers that BEGIN does not.\n\nThe BEGIN statement differs from the use of the BEGIN keyword that\nstarts a BEGIN ... END compound statement. The latter does not begin a\ntransaction. See [HELP BEGIN END].\n\n*Note*:\n\nWithin all stored programs (stored procedures and functions, triggers,\nand events), the parser treats BEGIN [WORK] as the beginning of a BEGIN\n... END block. Begin a transaction in this context with START\nTRANSACTION instead.\n\nThe optional WORK keyword is supported for COMMIT and ROLLBACK, as are\nthe CHAIN and RELEASE clauses. CHAIN and RELEASE can be used for\nadditional control over transaction completion. The value of the\ncompletion_type system variable determines the default completion\nbehavior. See\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nThe AND CHAIN clause causes a new transaction to begin as soon as the\ncurrent one ends, and the new transaction has the same isolation level\nas the just-terminated transaction. The new transaction also uses the\nsame access mode (READ WRITE or READ ONLY) as the just-terminated\ntransaction. The RELEASE clause causes the server to disconnect the\ncurrent client session after terminating the current transaction.\nIncluding the NO keyword suppresses CHAIN or RELEASE completion, which\ncan be useful if the completion_type system variable is set to cause\nchaining or release completion by default.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/commit.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/commit.html'),(542,'ROLLBACK',35,'Syntax:\nSTART TRANSACTION\n    [transaction_characteristic [, transaction_characteristic] ...]\n\ntransaction_characteristic: {\n    WITH CONSISTENT SNAPSHOT\n  | READ WRITE\n  | READ ONLY\n}\n\nBEGIN [WORK]\nCOMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nSET autocommit = {0 | 1}\n\nThese statements provide control over use of transactions:\n\no START TRANSACTION or BEGIN start a new transaction.\n\no COMMIT commits the current transaction, making its changes permanent.\n\no ROLLBACK rolls back the current transaction, canceling its changes.\n\no SET autocommit disables or enables the default autocommit mode for\n  the current session.\n\nBy default, MySQL runs with autocommit mode enabled. This means that as\nsoon as you execute a statement that updates (modifies) a table, MySQL\nstores the update on disk to make it permanent. The change cannot be\nrolled back.\n\nTo disable autocommit mode implicitly for a single series of\nstatements, use the START TRANSACTION statement:\n\nSTART TRANSACTION;\nSELECT @A:=SUM(salary) FROM table1 WHERE type=1;\nUPDATE table2 SET summary=@A WHERE type=1;\nCOMMIT;\n\nWith START TRANSACTION, autocommit remains disabled until you end the\ntransaction with COMMIT or ROLLBACK. The autocommit mode then reverts\nto its previous state.\n\nSTART TRANSACTION permits several modifiers that control transaction\ncharacteristics. To specify multiple modifiers, separate them by\ncommas.\n\no The WITH CONSISTENT SNAPSHOT modifier starts a consistent read for\n  storage engines that are capable of it. This applies only to InnoDB.\n  The effect is the same as issuing a START TRANSACTION followed by a\n  SELECT from any InnoDB table. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html.\n  The WITH CONSISTENT SNAPSHOT modifier does not change the current\n  transaction isolation level, so it provides a consistent snapshot\n  only if the current isolation level is one that permits a consistent\n  read. The only isolation level that permits a consistent read is\n  REPEATABLE READ. For all other isolation levels, the WITH CONSISTENT\n  SNAPSHOT clause is ignored. As of MySQL 5.7.2, a warning is generated\n  when the WITH CONSISTENT SNAPSHOT clause is ignored.\n\no The READ WRITE and READ ONLY modifiers set the transaction access\n  mode. They permit or prohibit changes to tables used in the\n  transaction. The READ ONLY restriction prevents the transaction from\n  modifying or locking both transactional and nontransactional tables\n  that are visible to other transactions; the transaction can still\n  modify or lock temporary tables.\n\n  MySQL enables extra optimizations for queries on InnoDB tables when\n  the transaction is known to be read-only. Specifying READ ONLY\n  ensures these optimizations are applied in cases where the read-only\n  status cannot be determined automatically. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-performance-ro-txn.htm\n  l for more information.\n\n  If no access mode is specified, the default mode applies. Unless the\n  default has been changed, it is read/write. It is not permitted to\n  specify both READ WRITE and READ ONLY in the same statement.\n\n  In read-only mode, it remains possible to change tables created with\n  the TEMPORARY keyword using DML statements. Changes made with DDL\n  statements are not permitted, just as with permanent tables.\n\n  For additional information about transaction access mode, including\n  ways to change the default mode, see [HELP SET TRANSACTION].\n\n  If the read_only system variable is enabled, explicitly starting a\n  transaction with START TRANSACTION READ WRITE requires the SUPER\n  privilege.\n\n*Important*:\n\nMany APIs used for writing MySQL client applications (such as JDBC)\nprovide their own methods for starting transactions that can (and\nsometimes should) be used instead of sending a START TRANSACTION\nstatement from the client. See\nhttps://dev.mysql.com/doc/refman/5.7/en/connectors-apis.html, or the\ndocumentation for your API, for more information.\n\nTo disable autocommit mode explicitly, use the following statement:\n\nSET autocommit=0;\n\nAfter disabling autocommit mode by setting the autocommit variable to\nzero, changes to transaction-safe tables (such as those for InnoDB or\nNDB) are not made permanent immediately. You must use COMMIT to store\nyour changes to disk or ROLLBACK to ignore the changes.\n\nautocommit is a session variable and must be set for each session. To\ndisable autocommit mode for each new connection, see the description of\nthe autocommit system variable at\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nBEGIN and BEGIN WORK are supported as aliases of START TRANSACTION for\ninitiating a transaction. START TRANSACTION is standard SQL syntax, is\nthe recommended way to start an ad-hoc transaction, and permits\nmodifiers that BEGIN does not.\n\nThe BEGIN statement differs from the use of the BEGIN keyword that\nstarts a BEGIN ... END compound statement. The latter does not begin a\ntransaction. See [HELP BEGIN END].\n\n*Note*:\n\nWithin all stored programs (stored procedures and functions, triggers,\nand events), the parser treats BEGIN [WORK] as the beginning of a BEGIN\n... END block. Begin a transaction in this context with START\nTRANSACTION instead.\n\nThe optional WORK keyword is supported for COMMIT and ROLLBACK, as are\nthe CHAIN and RELEASE clauses. CHAIN and RELEASE can be used for\nadditional control over transaction completion. The value of the\ncompletion_type system variable determines the default completion\nbehavior. See\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nThe AND CHAIN clause causes a new transaction to begin as soon as the\ncurrent one ends, and the new transaction has the same isolation level\nas the just-terminated transaction. The new transaction also uses the\nsame access mode (READ WRITE or READ ONLY) as the just-terminated\ntransaction. The RELEASE clause causes the server to disconnect the\ncurrent client session after terminating the current transaction.\nIncluding the NO keyword suppresses CHAIN or RELEASE completion, which\ncan be useful if the completion_type system variable is set to cause\nchaining or release completion by default.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/commit.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/commit.html'),(543,'SAVEPOINT',35,'Syntax:\nSAVEPOINT identifier\nROLLBACK [WORK] TO [SAVEPOINT] identifier\nRELEASE SAVEPOINT identifier\n\nInnoDB supports the SQL statements SAVEPOINT, ROLLBACK TO SAVEPOINT,\nRELEASE SAVEPOINT and the optional WORK keyword for ROLLBACK.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/savepoint.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/savepoint.html'),(544,'ROLLBACK TO SAVEPOINT',35,'Syntax:\nSAVEPOINT identifier\nROLLBACK [WORK] TO [SAVEPOINT] identifier\nRELEASE SAVEPOINT identifier\n\nInnoDB supports the SQL statements SAVEPOINT, ROLLBACK TO SAVEPOINT,\nRELEASE SAVEPOINT and the optional WORK keyword for ROLLBACK.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/savepoint.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/savepoint.html'),(545,'RELEASE SAVEPOINT',35,'Syntax:\nSAVEPOINT identifier\nROLLBACK [WORK] TO [SAVEPOINT] identifier\nRELEASE SAVEPOINT identifier\n\nInnoDB supports the SQL statements SAVEPOINT, ROLLBACK TO SAVEPOINT,\nRELEASE SAVEPOINT and the optional WORK keyword for ROLLBACK.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/savepoint.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/savepoint.html'),(546,'LOCK TABLES',35,'Syntax:\nLOCK TABLES\n    tbl_name [[AS] alias] lock_type\n    [, tbl_name [[AS] alias] lock_type] ...\n\nlock_type: {\n    READ [LOCAL]\n  | [LOW_PRIORITY] WRITE\n}\n\nUNLOCK TABLES\n\nMySQL enables client sessions to acquire table locks explicitly for the\npurpose of cooperating with other sessions for access to tables, or to\nprevent other sessions from modifying tables during periods when a\nsession requires exclusive access to them. A session can acquire or\nrelease locks only for itself. One session cannot acquire locks for\nanother session or release locks held by another session.\n\nLocks may be used to emulate transactions or to get more speed when\nupdating tables. This is explained in more detail in\nhttps://dev.mysql.com/doc/refman/5.7/en/lock-tables.html#lock-tables-re\nstrictions.\n\nLOCK TABLES explicitly acquires table locks for the current client\nsession. Table locks can be acquired for base tables or views. You must\nhave the LOCK TABLES privilege, and the SELECT privilege for each\nobject to be locked.\n\nFor view locking, LOCK TABLES adds all base tables used in the view to\nthe set of tables to be locked and locks them automatically. If you\nlock a table explicitly with LOCK TABLES, any tables used in triggers\nare also locked implicitly, as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/lock-tables.html#lock-tables-an\nd-triggers.\n\nUNLOCK TABLES explicitly releases any table locks held by the current\nsession. LOCK TABLES implicitly releases any table locks held by the\ncurrent session before acquiring new locks.\n\nAnother use for UNLOCK TABLES is to release the global read lock\nacquired with the FLUSH TABLES WITH READ LOCK statement, which enables\nyou to lock all tables in all databases. See [HELP FLUSH]. (This is a\nvery convenient way to get backups if you have a file system such as\nVeritas that can take snapshots in time.)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/lock-tables.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/lock-tables.html'),(547,'SET TRANSACTION',35,'Syntax:\nSET [GLOBAL | SESSION] TRANSACTION\n    transaction_characteristic [, transaction_characteristic] ...\n\ntransaction_characteristic: {\n    ISOLATION LEVEL level\n  | access_mode\n}\n\nlevel: {\n     REPEATABLE READ\n   | READ COMMITTED\n   | READ UNCOMMITTED\n   | SERIALIZABLE\n}\n\naccess_mode: {\n     READ WRITE\n   | READ ONLY\n}\n\nThis statement specifies transaction characteristics. It takes a list\nof one or more characteristic values separated by commas. Each\ncharacteristic value sets the transaction isolation level or access\nmode. The isolation level is used for operations on InnoDB tables. The\naccess mode specifies whether transactions operate in read/write or\nread-only mode.\n\nIn addition, SET TRANSACTION can include an optional GLOBAL or SESSION\nkeyword to indicate the scope of the statement.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-transaction.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-transaction.html'),(548,'XA',35,'Syntax:\nXA {START|BEGIN} xid [JOIN|RESUME]\n\nXA END xid [SUSPEND [FOR MIGRATE]]\n\nXA PREPARE xid\n\nXA COMMIT xid [ONE PHASE]\n\nXA ROLLBACK xid\n\nXA RECOVER [CONVERT XID]\n\nFor XA START, the JOIN and RESUME clauses are not supported.\n\nFor XA END the SUSPEND [FOR MIGRATE] clause is not supported.\n\nEach XA statement begins with the XA keyword, and most of them require\nan xid value. An xid is an XA transaction identifier. It indicates\nwhich transaction the statement applies to. xid values are supplied by\nthe client, or generated by the MySQL server. An xid value has from one\nto three parts:\n\nxid: gtrid [, bqual [, formatID ]]\n\ngtrid is a global transaction identifier, bqual is a branch qualifier,\nand formatID is a number that identifies the format used by the gtrid\nand bqual values. As indicated by the syntax, bqual and formatID are\noptional. The default bqual value is \'\' if not given. The default\nformatID value is 1 if not given.\n\ngtrid and bqual must be string literals, each up to 64 bytes (not\ncharacters) long. gtrid and bqual can be specified in several ways. You\ncan use a quoted string (\'ab\'), hex string (X\'6162\', 0x6162), or bit\nvalue (b\'nnnn\').\n\nformatID is an unsigned integer.\n\nThe gtrid and bqual values are interpreted in bytes by the MySQL\nserver\'s underlying XA support routines. However, while an SQL\nstatement containing an XA statement is being parsed, the server works\nwith some specific character set. To be safe, write gtrid and bqual as\nhex strings.\n\nxid values typically are generated by the Transaction Manager. Values\ngenerated by one TM must be different from values generated by other\nTMs. A given TM must be able to recognize its own xid values in a list\nof values returned by the XA RECOVER statement.\n\nXA START xid starts an XA transaction with the given xid value. Each XA\ntransaction must have a unique xid value, so the value must not\ncurrently be used by another XA transaction. Uniqueness is assessed\nusing the gtrid and bqual values. All following XA statements for the\nXA transaction must be specified using the same xid value as that given\nin the XA START statement. If you use any of those statements but\nspecify an xid value that does not correspond to some existing XA\ntransaction, an error occurs.\n\nOne or more XA transactions can be part of the same global transaction.\nAll XA transactions within a given global transaction must use the same\ngtrid value in the xid value. For this reason, gtrid values must be\nglobally unique so that there is no ambiguity about which global\ntransaction a given XA transaction is part of. The bqual part of the\nxid value must be different for each XA transaction within a global\ntransaction. (The requirement that bqual values be different is a\nlimitation of the current MySQL XA implementation. It is not part of\nthe XA specification.)\n\nThe XA RECOVER statement returns information for those XA transactions\non the MySQL server that are in the PREPARED state. (See\nhttps://dev.mysql.com/doc/refman/5.7/en/xa-states.html.) The output\nincludes a row for each such XA transaction on the server, regardless\nof which client started it.\n\nXA RECOVER output rows look like this (for an example xid value\nconsisting of the parts \'abc\', \'def\', and 7):\n\nmysql> XA RECOVER;\n+----------+--------------+--------------+--------+\n| formatID | gtrid_length | bqual_length | data   |\n+----------+--------------+--------------+--------+\n|        7 |            3 |            3 | abcdef |\n+----------+--------------+--------------+--------+\n\nThe output columns have the following meanings:\n\no formatID is the formatID part of the transaction xid\n\no gtrid_length is the length in bytes of the gtrid part of the xid\n\no bqual_length is the length in bytes of the bqual part of the xid\n\no data is the concatenation of the gtrid and bqual parts of the xid\n\nXID values may contain nonprintable characters. As of MySQL 5.7.5, XA\nRECOVER permits an optional CONVERT XID clause so that clients can\nrequest XID values in hexadecimal.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/xa-statements.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/xa-statements.html'),(549,'PURGE BINARY LOGS',35,'Syntax:\nPURGE { BINARY | MASTER } LOGS {\n    TO \'log_name\'\n  | BEFORE datetime_expr\n}\n\nThe binary log is a set of files that contain information about data\nmodifications made by the MySQL server. The log consists of a set of\nbinary log files, plus an index file (see\nhttps://dev.mysql.com/doc/refman/5.7/en/binary-log.html).\n\nThe PURGE BINARY LOGS statement deletes all the binary log files listed\nin the log index file prior to the specified log file name or date.\nBINARY and MASTER are synonyms. Deleted log files also are removed from\nthe list recorded in the index file, so that the given log file becomes\nthe first in the list.\n\nPURGE BINARY LOGS requires the BINLOG_ADMIN\n(https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_\nbinlog-admin) privilege. This statement has no effect if the server was\nnot started with the --log-bin option to enable binary logging.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/purge-binary-logs.html\n\n','PURGE BINARY LOGS TO \'mysql-bin.010\';\nPURGE BINARY LOGS BEFORE \'2019-04-02 22:46:26\';\n','https://dev.mysql.com/doc/refman/5.7/en/purge-binary-logs.html'),(550,'PURGE MASTER LOGS',35,'Syntax:\nPURGE { BINARY | MASTER } LOGS {\n    TO \'log_name\'\n  | BEFORE datetime_expr\n}\n\nThe binary log is a set of files that contain information about data\nmodifications made by the MySQL server. The log consists of a set of\nbinary log files, plus an index file (see\nhttps://dev.mysql.com/doc/refman/5.7/en/binary-log.html).\n\nThe PURGE BINARY LOGS statement deletes all the binary log files listed\nin the log index file prior to the specified log file name or date.\nBINARY and MASTER are synonyms. Deleted log files also are removed from\nthe list recorded in the index file, so that the given log file becomes\nthe first in the list.\n\nPURGE BINARY LOGS requires the BINLOG_ADMIN\n(https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_\nbinlog-admin) privilege. This statement has no effect if the server was\nnot started with the --log-bin option to enable binary logging.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/purge-binary-logs.html\n\n','PURGE BINARY LOGS TO \'mysql-bin.010\';\nPURGE BINARY LOGS BEFORE \'2019-04-02 22:46:26\';\n','https://dev.mysql.com/doc/refman/5.7/en/purge-binary-logs.html'),(551,'RESET MASTER',35,'Syntax:\nRESET MASTER\n\nDeletes all binary log files listed in the index file, resets the\nbinary log index file to be empty, and creates a new binary log file.\nRESET MASTER requires the RELOAD privilege.\n\n*Warning*:\n\nUse this statement with caution to ensure you do not lose binary log\nfile data.\n\nRESET MASTER also clears the values of the gtid_purged system variable\nas well as the global value of the gtid_executed system variable (but\nnot its session value); that is, executing this statement sets each of\nthese values to an empty string (\'\'). In MySQL 5.7.5 and later, this\nstatement also clears the mysql.gtid_executed table (see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-gtids-concepts.html\n#replication-gtids-gtid-executed-table).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/reset-master.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/reset-master.html'),(552,'SET SQL_LOG_BIN',35,'Syntax:\nSET sql_log_bin = {OFF|ON}\n\nThe sql_log_bin variable controls whether logging to the binary log is\nenabled for the current session (assuming that the binary log itself is\nenabled). The default value is ON. To disable or enable binary logging\nfor the current session, set the session sql_log_bin variable to OFF or\nON.\n\nSet this variable to OFF for a session to temporarily disable binary\nlogging while making changes to the master you do not want replicated\nto the slave.\n\nSetting the session value of this system variable is a restricted\noperation. The session user must have privileges sufficient to set\nrestricted session variables. See\nhttps://dev.mysql.com/doc/refman/5.7/en/system-variable-privileges.html\n.\n\nIt is not possible to set the session value of sql_log_bin within a\ntransaction or subquery.\n\nSetting this variable to OFF prevents GTIDs from being assigned to\ntransactions in the binary log. If you are using GTIDs for replication,\nthis means that even when binary logging is later enabled again, the\nGTIDs written into the log from this point do not account for any\ntransactions that occurred in the meantime, so in effect those\ntransactions are lost.\n\nThe global sql_log_bin variable is read only and cannot be modified.\nThe global scope is deprecated and will be removed in a future MySQL\nrelease.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-sql-log-bin.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-sql-log-bin.html'),(553,'CHANGE MASTER TO',35,'Syntax:\nCHANGE MASTER TO option [, option] ... [ channel_option ]\n\noption:\n    MASTER_BIND = \'interface_name\'\n  | MASTER_HOST = \'host_name\'\n  | MASTER_USER = \'user_name\'\n  | MASTER_PASSWORD = \'password\'\n  | MASTER_PORT = port_num\n  | MASTER_CONNECT_RETRY = interval\n  | MASTER_RETRY_COUNT = count\n  | MASTER_DELAY = interval\n  | MASTER_HEARTBEAT_PERIOD = interval\n  | MASTER_LOG_FILE = \'master_log_name\'\n  | MASTER_LOG_POS = master_log_pos\n  | MASTER_AUTO_POSITION = {0|1}\n  | RELAY_LOG_FILE = \'relay_log_name\'\n  | RELAY_LOG_POS = relay_log_pos\n  | MASTER_SSL = {0|1}\n  | MASTER_SSL_CA = \'ca_file_name\'\n  | MASTER_SSL_CAPATH = \'ca_directory_name\'\n  | MASTER_SSL_CERT = \'cert_file_name\'\n  | MASTER_SSL_CRL = \'crl_file_name\'\n  | MASTER_SSL_CRLPATH = \'crl_directory_name\'\n  | MASTER_SSL_KEY = \'key_file_name\'\n  | MASTER_SSL_CIPHER = \'cipher_list\'\n  | MASTER_SSL_VERIFY_SERVER_CERT = {0|1}\n  | MASTER_TLS_VERSION = \'protocol_list\'\n  | IGNORE_SERVER_IDS = (server_id_list)\n\nchannel_option:\n    FOR CHANNEL channel\n\nserver_id_list:\n    [server_id [, server_id] ... ]\n\nCHANGE MASTER TO changes the parameters that the slave server uses for\nconnecting to the master server, for reading the master binary log, and\nreading the slave relay log. It also updates the contents of the master\ninfo and relay log info repositories (see\nhttps://dev.mysql.com/doc/refman/5.7/en/slave-logs.html). CHANGE MASTER\nTO requires the SUPER privilege.\n\nPrior to MySQL 5.7.4, the slave replication threads must be stopped,\nusing STOP SLAVE if necessary, before issuing this statement. In MySQL\n5.7.4 and later, you can issue CHANGE MASTER TO statements on a running\nslave without doing this, depending on the states of the slave SQL\nthread and slave I/O thread. The rules governing such use are provided\nlater in this section.\n\nWhen using a multithreaded slave (in other words slave_parallel_workers\nis greater than 0), stopping the slave can cause \"gaps\" in the sequence\nof transactions that have been executed from the relay log, regardless\nof whether the slave was stopped intentionally or otherwise. When such\ngaps exist, issuing CHANGE MASTER TO fails. The solution in this\nsituation is to issue START SLAVE UNTIL SQL_AFTER_MTS_GAPS which\nensures that the gaps are closed.\n\nThe optional FOR CHANNEL channel clause enables you to name which\nreplication channel the statement applies to. Providing a FOR CHANNEL\nchannel clause applies the CHANGE MASTER TO statement to a specific\nreplication channel, and is used to add a new channel or modify an\nexisting channel. For example, to add a new channel called channel2:\n\nCHANGE MASTER TO MASTER_HOST=host1, MASTER_PORT=3002 FOR CHANNEL \'channel2\'\n\nIf no clause is named and no extra channels exist, the statement\napplies to the default channel.\n\nWhen using multiple replication channels, if a CHANGE MASTER TO\nstatement does not name a channel using a FOR CHANNEL channel clause,\nan error occurs. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-channels.html for\nmore information.\n\nOptions not specified retain their value, except as indicated in the\nfollowing discussion. Thus, in most cases, there is no need to specify\noptions that do not change. For example, if the password to connect to\nyour MySQL master has changed, issue this statement to tell the slave\nabout the new password:\n\nCHANGE MASTER TO MASTER_PASSWORD=\'new3cret\';\n\nMASTER_HOST, MASTER_USER, MASTER_PASSWORD, and MASTER_PORT provide\ninformation to the slave about how to connect to its master:\n\no MASTER_HOST and MASTER_PORT are the host name (or IP address) of the\n  master host and its TCP/IP port.\n\n  *Note*:\n\n  Replication cannot use Unix socket files. You must be able to connect\n  to the master MySQL server using TCP/IP.\n\n  If you specify the MASTER_HOST or MASTER_PORT option, the slave\n  assumes that the master server is different from before (even if the\n  option value is the same as its current value.) In this case, the old\n  values for the master binary log file name and position are\n  considered no longer applicable, so if you do not specify\n  MASTER_LOG_FILE and MASTER_LOG_POS in the statement,\n  MASTER_LOG_FILE=\'\' and MASTER_LOG_POS=4 are silently appended to it.\n\n  Setting MASTER_HOST=\'\' (that is, setting its value explicitly to an\n  empty string) is not the same as not setting MASTER_HOST at all.\n  Beginning with MySQL 5.5, trying to set MASTER_HOST to an empty\n  string fails with an error. Previously, setting MASTER_HOST to an\n  empty string caused START SLAVE subsequently to fail. (Bug #28796)\n\n  Values used for MASTER_HOST and other CHANGE MASTER TO options are\n  checked for linefeed (\\n or 0x0A) characters; the presence of such\n  characters in these values causes the statement to fail with\n  ER_MASTER_INFO. (Bug #11758581, Bug #50801)\n\no MASTER_USER and MASTER_PASSWORD are the user name and password of the\n  account to use for connecting to the master.\n\n  MASTER_USER cannot be made empty; setting MASTER_USER = \'\' or leaving\n  it unset when setting a value for MASTER_PASSWORD causes an error\n  (Bug #13427949).\n\n  The password used for a MySQL Replication slave account in a CHANGE\n  MASTER TO statement is limited to 32 characters in length; prior to\n  MySQL 5.7.5, if the password was longer, the statement succeeded, but\n  any excess characters were silently truncated. In MySQL 5.7.5 and\n  later, trying to use a password of more than 32 characters causes\n  CHANGE MASTER TO to fail. (Bug #11752299, Bug #43439)\n\n  The text of a running CHANGE MASTER TO statement, including values\n  for MASTER_USER and MASTER_PASSWORD, can be seen in the output of a\n  concurrent SHOW PROCESSLIST statement. (The complete text of a START\n  SLAVE statement is also visible to SHOW PROCESSLIST.)\n\nThe MASTER_SSL_xxx options and the MASTER_TLS_VERSION option specify\nhow the slave uses encryption and ciphers to secure the replication\nconnection. These options can be changed even on slaves that are\ncompiled without SSL support. They are saved to the master info\nrepository, but are ignored if the slave does not have SSL support\nenabled. The MASTER_SSL_xxx and MASTER_TLS_VERSION options perform the\nsame functions as the --ssl-xxx and --tls-version client options\ndescribed in\nhttps://dev.mysql.com/doc/refman/5.7/en/connection-options.html#encrypt\ned-connection-options. The correspondence between the two sets of\noptions, and the use of the MASTER_SSL_xxx and MASTER_TLS_VERSION\noptions to set up a secure connection, is explained in\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-solutions-encrypted\n-connections.html.\n\nAs of MySQL 5.7.3, setting MASTER_SSL=1 means that the slave connection\nto the master must use SSL, or the connection attempt fails. Before\n5.7.3, the use of an SSL connection by the slave was not enforced with\nMASTER_SSL=1. This is analogous to the client-side meaning of the --ssl\ncommand-line option; see\nhttps://dev.mysql.com/doc/refman/5.7/en/connection-options.html#encrypt\ned-connection-options.\n\nThe MASTER_HEARTBEAT_PERIOD, MASTER_CONNECT_RETRY, and\nMASTER_RETRY_COUNT options control how the slave recognizes that the\nconnection to the master has been lost and makes attempts to reconnect.\n\no The slave_net_timeout system variable specifies the number of seconds\n  that the slave waits for either more data or a heartbeat signal from\n  the master, before the slave considers the connection broken, aborts\n  the read, and tries to reconnect. The default value is 60 seconds\n  (one minute). Prior to MySQL 5.7.7, the default was 3600 seconds (one\n  hour).\n\no The heartbeat interval, which stops the connection timeout occurring\n  in the absence of data if the connection is still good, is controlled\n  by the MASTER_HEARTBEAT_PERIOD option. A heartbeat signal is sent to\n  the slave after that number of seconds, and the waiting period is\n  reset whenever the master\'s binary log is updated with an event.\n  Heartbeats are therefore sent by the master only if there are no\n  unsent events in the binary log file for a period longer than this.\n  The heartbeat interval interval is a decimal value having the range 0\n  to 4294967 seconds and a resolution in milliseconds; the smallest\n  nonzero value is 0.001. Setting interval to 0 disables heartbeats\n  altogether. The heartbeat interval defaults to half the value of the\n  slave_net_timeout system variable. It is recorded in the master info\n  log and shown in the replication_connection_configuration Performance\n  Schema table. Issuing RESET SLAVE resets the heartbeat interval to\n  the default value.\n\no Prior to MySQL 5.7.4, not including MASTER_HEARTBEAT_PERIOD caused\n  CHANGE MASTER TO to reset the heartbeat interval to the default (half\n  the value of the slave_net_timeout system variable), and\n  Slave_received_heartbeats to 0. The heartbeat interval is now not\n  reset except by RESET SLAVE. (Bug #18185490)\n\no Note that a change to the value or default setting of\n  slave_net_timeout does not automatically change the heartbeat\n  interval, whether that has been set explicitly or is using a\n  previously calculated default. A warning is issued if you set\n  @@GLOBAL.slave_net_timeout to a value less than that of the current\n  heartbeat interval. If slave_net_timeout is changed, you must also\n  issue CHANGE MASTER TO to adjust the heartbeat interval to an\n  appropriate value so that the heartbeat signal occurs before the\n  connection timeout. If you do not do this, the heartbeat signal has\n  no effect, and if no data is received from the master, the slave can\n  make repeated reconnection attempts, creating zombie dump threads.\n\no If the slave does need to reconnect, the first retry occurs\n  immediately after the timeout. MASTER_CONNECT_RETRY specifies the\n  interval between reconnection attempts, and MASTER_RETRY_COUNT limits\n  the number of reconnection attempts. If both the default settings are\n  used, the slave waits 60 seconds between reconnection attempts\n  (MASTER_CONNECT_RETRY=60), and keeps attempting to reconnect at this\n  rate for 60 days (MASTER_RETRY_COUNT=86400). These values are\n  recorded in the master info log and shown in the\n  replication_connection_configuration Performance Schema table.\n  MASTER_RETRY_COUNT supersedes the --master-retry-count server startup\n  option.\n\nMASTER_DELAY specifies how many seconds behind the master the slave\nmust lag. An event received from the master is not executed until at\nleast interval seconds later than its execution on the master. The\ndefault is 0. An error occurs if interval is not a nonnegative integer\nin the range from 0 to 231−1. For more information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-delayed.html.\n\nFrom MySQL 5.7, a CHANGE MASTER TO statement employing the MASTER_DELAY\noption can be executed on a running slave when the slave SQL thread is\nstopped.\n\nMASTER_BIND is for use on replication slaves having multiple network\ninterfaces, and determines which of the slave\'s network interfaces is\nchosen for connecting to the master.\n\nThe address configured with this option, if any, can be seen in the\nMaster_Bind column of the output from SHOW SLAVE STATUS. If you are\nusing slave status log tables (server started with\n--master-info-repository=TABLE), the value can also be seen as the\nMaster_bind column of the mysql.slave_master_info table.\n\nThe ability to bind a replication slave to a specific network interface\nis also supported by NDB Cluster.\n\nMASTER_LOG_FILE and MASTER_LOG_POS are the coordinates at which the\nslave I/O thread should begin reading from the master the next time the\nthread starts. RELAY_LOG_FILE and RELAY_LOG_POS are the coordinates at\nwhich the slave SQL thread should begin reading from the relay log the\nnext time the thread starts. If you specify either of MASTER_LOG_FILE\nor MASTER_LOG_POS, you cannot specify RELAY_LOG_FILE or RELAY_LOG_POS.\nIf you specify either of MASTER_LOG_FILE or MASTER_LOG_POS, you also\ncannot specify MASTER_AUTO_POSITION = 1 (described later in this\nsection). If neither of MASTER_LOG_FILE or MASTER_LOG_POS is specified,\nthe slave uses the last coordinates of the slave SQL thread before\nCHANGE MASTER TO was issued. This ensures that there is no\ndiscontinuity in replication, even if the slave SQL thread was late\ncompared to the slave I/O thread, when you merely want to change, say,\nthe password to use.\n\nFrom MySQL 5.7, a CHANGE MASTER TO statement employing RELAY_LOG_FILE,\nRELAY_LOG_POS, or both options can be executed on a running slave when\nthe slave SQL thread is stopped. Prior to MySQL 5.7.4, CHANGE MASTER TO\ndeletes all relay log files and starts a new one, unless you specify\nRELAY_LOG_FILE or RELAY_LOG_POS. In that case, relay log files are\nkept; the relay_log_purge global variable is set silently to 0. In\nMySQL 5.7.4 and later, relay logs are preserved if at least one of the\nslave SQL thread and the slave I/O thread is running; if both threads\nare stopped, all relay log files are deleted unless at least one of\nRELAY_LOG_FILE or RELAY_LOG_POS is specified.\n\nRELAY_LOG_FILE can use either an absolute or relative path, and uses\nthe same base name as MASTER_LOG_FILE. (Bug #12190)\n\nWhen MASTER_AUTO_POSITION = 1 is used with CHANGE MASTER TO, the slave\nattempts to connect to the master using the GTID-based replication\nprotocol. From MySQL 5.7, this option can be employed by CHANGE MASTER\nTO only if both the slave SQL and slave I/O threads are stopped. Both\nthe slave and the master must have GTIDs enabled (GTID_MODE=ON,\nON_PERMISSIVE, or OFF_PERMISSIVE on the slave, and GTID_MODE=ON on the\nmaster). Auto-positioning is used for the connection, so the\ncoordinates represented by MASTER_LOG_FILE and MASTER_LOG_POS are not\nused, and the use of either or both of these options together with\nMASTER_AUTO_POSITION = 1 causes an error. If multi-source replication\nis enabled on the slave, you need to set the MASTER_AUTO_POSITION = 1\noption for each applicable replication channel.\n\nWith MASTER_AUTO_POSITION = 1 set, in the initial connection handshake,\nthe slave sends a GTID set containing the transactions that it has\nalready received, committed, or both. The master responds by sending\nall transactions recorded in its binary log whose GTID is not included\nin the GTID set sent by the slave. This exchange ensures that the\nmaster only sends the transactions with a GTID that the slave has not\nalready recorded or committed. If the slave receives transactions from\nmore than one master, as in the case of a diamond topology, the\nauto-skip function ensures that the transactions are not applied twice.\nFor details of how the GTID set sent by the slave is computed, see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-gtids-auto-position\ning.html.\n\nIf any of the transactions that should be sent by the master have been\npurged from the master\'s binary log, or added to the set of GTIDs in\nthe gtid_purged system variable by another method, the master sends the\nerror ER_MASTER_HAS_PURGED_REQUIRED_GTIDS to the slave, and replication\ndoes not start. Also, if during the exchange of transactions it is\nfound that the slave has recorded or committed transactions with the\nmaster\'s UUID in the GTID, but the master itself has not committed\nthem, the master sends the error ER_SLAVE_HAS_MORE_GTIDS_THAN_MASTER to\nthe slave and replication does not start. For information on how to\nhandle these situations, see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-gtids-auto-position\ning.html.\n\nYou can see whether replication is running with auto-positioning\nenabled by checking the Performance Schema\nreplication_connection_status table or the output of SHOW SLAVE STATUS.\nDisabling the MASTER_AUTO_POSITION option again makes the slave revert\nto file-based replication, in which case you must also specify one or\nboth of the MASTER_LOG_FILE or MASTER_LOG_POS options.\n\nIGNORE_SERVER_IDS takes a comma-separated list of 0 or more server IDs.\nEvents originating from the corresponding servers are ignored, with the\nexception of log rotation and deletion events, which are still recorded\nin the relay log.\n\nIn circular replication, the originating server normally acts as the\nterminator of its own events, so that they are not applied more than\nonce. Thus, this option is useful in circular replication when one of\nthe servers in the circle is removed. Suppose that you have a circular\nreplication setup with 4 servers, having server IDs 1, 2, 3, and 4, and\nserver 3 fails. When bridging the gap by starting replication from\nserver 2 to server 4, you can include IGNORE_SERVER_IDS = (3) in the\nCHANGE MASTER TO statement that you issue on server 4 to tell it to use\nserver 2 as its master instead of server 3. Doing so causes it to\nignore and not to propagate any statements that originated with the\nserver that is no longer in use.\n\nIf a CHANGE MASTER TO statement is issued without any IGNORE_SERVER_IDS\noption, any existing list is preserved. To clear the list of ignored\nservers, it is necessary to use the option with an empty list:\n\nCHANGE MASTER TO IGNORE_SERVER_IDS = ();\n\nPrior to MySQL 5.7.5, RESET SLAVE ALL has no effect on the server ID\nlist. In MySQL 5.7.5 and later, RESET SLAVE ALL clears\nIGNORE_SERVER_IDS. (Bug #18816897)\n\nIf IGNORE_SERVER_IDS contains the server\'s own ID and the server was\nstarted with the --replicate-same-server-id option enabled, an error\nresults.\n\nThe master info repository and the output of SHOW SLAVE STATUS provide\nthe list of servers that are currently ignored. For more information,\nsee https://dev.mysql.com/doc/refman/5.7/en/slave-logs-status.html, and\n[HELP SHOW SLAVE STATUS].\n\nInvoking CHANGE MASTER TO causes the previous values for MASTER_HOST,\nMASTER_PORT, MASTER_LOG_FILE, and MASTER_LOG_POS to be written to the\nerror log, along with other information about the slave\'s state prior\nto execution.\n\nCHANGE MASTER TO causes an implicit commit of an ongoing transaction.\nSee https://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\nIn MySQL 5.7.4 and later, the strict requirement to execute STOP SLAVE\nprior to issuing any CHANGE MASTER TO statement (and START SLAVE\nafterward) is removed. Instead of depending on whether the slave is\nstopped, the behavior of CHANGE MASTER TO depends (in MySQL 5.7.4 and\nlater) on the states of the slave SQL thread and slave I/O threads;\nwhich of these threads is stopped or running now determines the options\nthat can or cannot be used with a CHANGE MASTER TO statement at a given\npoint in time. The rules for making this determination are listed here:\n\no If the SQL thread is stopped, you can execute CHANGE MASTER TO using\n  any combination that is otherwise allowed of RELAY_LOG_FILE,\n  RELAY_LOG_POS, and MASTER_DELAY options, even if the slave I/O thread\n  is running. No other options may be used with this statement when the\n  I/O thread is running.\n\no If the I/O thread is stopped, you can execute CHANGE MASTER TO using\n  any of the options for this statement (in any allowed combination)\n  except RELAY_LOG_FILE, RELAY_LOG_POS, MASTER_DELAY, or\n  MASTER_AUTO_POSITION = 1 even when the SQL thread is running.\n\no Both the SQL thread and the I/O thread must be stopped before issuing\n  a CHANGE MASTER TO statement that employs MASTER_AUTO_POSITION = 1.\n\nYou can check the current state of the slave SQL and I/O threads using\nSHOW SLAVE STATUS.\n\nFor more information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-solutions-switch.ht\nml.\n\nIf you are using statement-based replication and temporary tables, it\nis possible for a CHANGE MASTER TO statement following a STOP SLAVE\nstatement to leave behind temporary tables on the slave. From MySQL\n5.7, a warning (ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO) is issued\nwhenever this occurs. You can avoid this in such cases by making sure\nthat the value of the Slave_open_temp_tables system status variable is\nequal to 0 prior to executing such a CHANGE MASTER TO statement.\n\nCHANGE MASTER TO is useful for setting up a slave when you have the\nsnapshot of the master and have recorded the master binary log\ncoordinates corresponding to the time of the snapshot. After loading\nthe snapshot into the slave to synchronize it with the master, you can\nrun CHANGE MASTER TO MASTER_LOG_FILE=\'log_name\', MASTER_LOG_POS=log_pos\non the slave to specify the coordinates at which the slave should begin\nreading the master binary log.\n\nThe following example changes the master server the slave uses and\nestablishes the master binary log coordinates from which the slave\nbegins reading. This is used when you want to set up the slave to\nreplicate the master:\n\nCHANGE MASTER TO\n  MASTER_HOST=\'master2.example.com\',\n  MASTER_USER=\'replication\',\n  MASTER_PASSWORD=\'password\',\n  MASTER_PORT=3306,\n  MASTER_LOG_FILE=\'master2-bin.001\',\n  MASTER_LOG_POS=4,\n  MASTER_CONNECT_RETRY=10;\n\nThe next example shows an operation that is less frequently employed.\nIt is used when the slave has relay log files that you want it to\nexecute again for some reason. To do this, the master need not be\nreachable. You need only use CHANGE MASTER TO and start the SQL thread\n(START SLAVE SQL_THREAD):\n\nCHANGE MASTER TO\n  RELAY_LOG_FILE=\'slave-relay-bin.006\',\n  RELAY_LOG_POS=4025;\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html'),(554,'CHANGE REPLICATION FILTER',35,'Syntax:\nCHANGE REPLICATION FILTER filter[, filter][, ...]\n\nfilter:\n    REPLICATE_DO_DB = (db_list)\n  | REPLICATE_IGNORE_DB = (db_list)\n  | REPLICATE_DO_TABLE = (tbl_list)\n  | REPLICATE_IGNORE_TABLE = (tbl_list)\n  | REPLICATE_WILD_DO_TABLE = (wild_tbl_list)\n  | REPLICATE_WILD_IGNORE_TABLE = (wild_tbl_list)\n  | REPLICATE_REWRITE_DB = (db_pair_list)\n\ndb_list:\n    db_name[, db_name][, ...]\n\ntbl_list:\n    db_name.table_name[, db_table_name][, ...]\nwild_tbl_list:\n    \'db_pattern.table_pattern\'[, \'db_pattern.table_pattern\'][, ...]\n\ndb_pair_list:\n    (db_pair)[, (db_pair)][, ...]\n\ndb_pair:\n    from_db, to_db\n\nCHANGE REPLICATION FILTER sets one or more replication filtering rules\non the slave in the same way as starting the slave mysqld with\nreplication filtering options such as --replicate-do-db or\n--replicate-wild-ignore-table. Unlike the case with the server options,\nthis statement does not require restarting the server to take effect,\nonly that the slave SQL thread be stopped using STOP SLAVE SQL_THREAD\nfirst (and restarted with START SLAVE SQL_THREAD afterwards). CHANGE\nREPLICATION FILTER requires the SUPER privilege.\n\nReplication filters cannot be set on a MySQL server instance that is\nconfigured for Group Replication, because filtering transactions on\nsome servers would make the group unable to reach agreement on a\nconsistent state.\n\nThe following list shows the CHANGE REPLICATION FILTER options and how\nthey relate to --replicate-* server options:\n\no REPLICATE_DO_DB: Include updates based on database name. Equivalent\n  to --replicate-do-db.\n\no REPLICATE_IGNORE_DB: Exclude updates based on database name.\n  Equivalent to --replicate-ignore-db.\n\no REPLICATE_DO_TABLE: Include updates based on table name. Equivalent\n  to --replicate-do-table.\n\no REPLICATE_IGNORE_TABLE: Exclude updates based on table name.\n  Equivalent to --replicate-ignore-table.\n\no REPLICATE_WILD_DO_TABLE: Include updates based on wildcard pattern\n  matching table name. Equivalent to --replicate-wild-do-table.\n\no REPLICATE_WILD_IGNORE_TABLE: Exclude updates based on wildcard\n  pattern matching table name. Equivalent to\n  --replicate-wild-ignore-table.\n\no REPLICATE_REWRITE_DB: Perform updates on slave after substituting new\n  name on slave for specified database on master. Equivalent to\n  --replicate-rewrite-db.\n\nThe precise effects of REPLICATE_DO_DB and REPLICATE_IGNORE_DB filters\nare dependent on whether statement-based or row-based replication is in\neffect. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-rules.html, for\nmore information.\n\nMultiple replication filtering rules can be created in a single CHANGE\nREPLICATION FILTER statement by separating the rules with commas, as\nshown here:\n\nCHANGE REPLICATION FILTER\n    REPLICATE_DO_DB = (d1), REPLICATE_IGNORE_DB = (d2);\n\nIssuing the statement just shown is equivalent to starting the slave\nmysqld with the options --replicate-do-db=d1 --replicate-ignore-db=d2.\n\nIf the same filtering rule is specified multiple times, only the last\nsuch rule is actually used. For example, the two statements shown here\nhave exactly the same effect, because the first REPLICATE_DO_DB rule in\nthe first statement is ignored:\n\nCHANGE REPLICATION FILTER\n    REPLICATE_DO_DB = (db1, db2), REPLICATE_DO_DB = (db3, db4);\n\nCHANGE REPLICATION FILTER\n    REPLICATE_DO_DB = (db3,db4);\n\n*Caution*:\n\nThis behavior differs from that of the --replicate-* filter options\nwhere specifying the same option multiple times causes the creation of\nmultiple filter rules.\n\nNames of tables and database not containing any special characters need\nnot be quoted. Values used with REPLICATION_WILD_TABLE and\nREPLICATION_WILD_IGNORE_TABLE are string expressions, possibly\ncontaining (special) wildcard characters, and so must be quoted. This\nis shown in the following example statements:\n\nCHANGE REPLICATION FILTER\n    REPLICATE_WILD_DO_TABLE = (\'db1.old%\');\n\nCHANGE REPLICATION FILTER\n    REPLICATE_WILD_IGNORE_TABLE = (\'db1.new%\', \'db2.new%\');\n\nValues used with REPLICATE_REWRITE_DB represent pairs of database\nnames; each such value must be enclosed in parentheses. The following\nstatement rewrites statements occurring on database db1 on the master\nto database db2 on the slave:\n\nCHANGE REPLICATION FILTER REPLICATE_REWRITE_DB = ((db1, db2));\n\nThe statement just shown contains two sets of parentheses, one\nenclosing the pair of database names, and the other enclosing the\nentire list. This is perhap more easily seen in the following example,\nwhich creates two rewrite-db rules, one rewriting database dbA to dbB,\nand one rewriting database dbC to dbD:\n\nCHANGE REPLICATION FILTER\n  REPLICATE_REWRITE_DB = ((dbA, dbB), (dbC, dbD));\n\nThis statement leaves any existing replication filtering rules\nunchanged; to unset all filters of a given type, set the filter\'s value\nto an explicitly empty list, as shown in this example, which removes\nall existing REPLICATE_DO_DB and REPLICATE_IGNORE_DB rules:\n\nCHANGE REPLICATION FILTER\n    REPLICATE_DO_DB = (), REPLICATE_IGNORE_DB = ();\n\nSetting a filter to empty in this way removes all existing rules, does\nnot create any new ones, and does not restore any rules set at mysqld\nstartup using --replicate-* options on the command line or in the\nconfiguration file.\n\nValues employed with REPLICATE_WILD_DO_TABLE and\nREPLICATE_WILD_IGNORE_TABLE must be in the format db_name.tbl_name.\nPrior to MySQL 5.7.5, this was not strictly enforced, although using\nnonconforming values with these options could lead to erroneous results\n(Bug #18095449).\n\nFor more information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-rules.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/change-replication-filter.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/change-replication-filter.html'),(555,'RESET SLAVE',35,'Syntax:\nRESET SLAVE [ALL] [channel_option]\n\nchannel_option:\n    FOR CHANNEL channel\n\nRESET SLAVE makes the slave forget its replication position in the\nmaster\'s binary log. This statement is meant to be used for a clean\nstart: It clears the master info and relay log info repositories,\ndeletes all the relay log files, and starts a new relay log file. It\nalso resets to 0 the replication delay specified with the MASTER_DELAY\noption to CHANGE MASTER TO. RESET SLAVE does not change the values of\ngtid_executed or gtid_purged.\n\n*Note*:\n\nAll relay log files are deleted, even if they have not been completely\nexecuted by the slave SQL thread. (This is a condition likely to exist\non a replication slave if you have issued a STOP SLAVE statement or if\nthe slave is highly loaded.)\n\nRESET SLAVE requires the RELOAD privilege.\n\nTo use RESET SLAVE, the slave replication threads must be stopped, so\non a running slave use STOP SLAVE before issuing RESET SLAVE. To use\nRESET SLAVE on a Group Replication group member, the member status must\nbe OFFLINE, meaning that the plugin is loaded but the member does not\ncurrently belong to any group. A group member can be taken offline by\nusing a STOP GROUP REPLICATION statement.\n\nThe optional FOR CHANNEL channel clause enables you to name which\nreplication channel the statement applies to. Providing a FOR CHANNEL\nchannel clause applies the RESET SLAVE statement to a specific\nreplication channel. Combining a FOR CHANNEL channel clause with the\nALL option deletes the specified channel. If no channel is named and no\nextra channels exist, the statement applies to the default channel.\nIssuing a RESET SLAVE ALL statement without a FOR CHANNEL channel\nclause when multiple replication channels exist deletes all replication\nchannels and recreates only the default channel. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-channels.html for\nmore information.\n\nRESET SLAVE does not change any replication connection parameters such\nas master host, master port, master user, or master password.\n\no From MySQL 5.7.24, when master_info_repository=TABLE is set on the\n  server, replication connection parameters are preserved in the\n  crash-safe InnoDB table mysql.slave_master_info as part of the RESET\n  SLAVE operation. They are also retained in memory. In the event of a\n  server crash or deliberate restart after issuing RESET SLAVE but\n  before issuing START SLAVE, the replication connection parameters are\n  retrieved from the table and reused for the new connection.\n\no When master_info_repository=FILE is set on the server (which is the\n  default in MySQL 5.7), replication connection parameters are only\n  retained in memory. If the slave mysqld is restarted immediately\n  after issuing RESET SLAVE due to a server crash or deliberate\n  restart, the connection parameters are lost. In that case, you must\n  issue a CHANGE MASTER TO statement after the server start to\n  respecify the connection parameters before issuing START SLAVE.\n\nIf you want to reset the connection parameters intentionally, you need\nto use RESET SLAVE ALL, which clears the connection parameters. In that\ncase, you must issue a CHANGE MASTER TO statement after the server\nstart to specify the new connection parameters.\n\nRESET SLAVE causes an implicit commit of an ongoing transaction. See\nhttps://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\nIf the slave SQL thread was in the middle of replicating temporary\ntables when it was stopped, and RESET SLAVE is issued, these replicated\ntemporary tables are deleted on the slave.\n\nPrior to MySQL 5.7.5, RESET SLAVE also had the effect of resetting both\nthe heartbeat period (Slave_heartbeat_period) and\nSSL_VERIFY_SERVER_CERT. This issue is fixed in MySQL 5.7.5 and later.\n(Bug #18777899, Bug #18778485)\n\nPrior to MySQL 5.7.5, RESET SLAVE ALL did not clear the\nIGNORE_SERVER_IDS list set by CHANGE MASTER TO. In MySQL 5.7.5 and\nlater, the statement clears the list. (Bug #18816897)\n\n*Note*:\n\nWhen used on an NDB Cluster replication slave SQL node, RESET SLAVE\nclears the mysql.ndb_apply_status table. You should keep in mind when\nusing this statement that ndb_apply_status uses the NDB storage engine\nand so is shared by all SQL nodes attached to the slave cluster.\n\nYou can override this behavior by issuing SET GLOBAL\n@@ndb_clear_apply_status=OFF prior to executing RESET SLAVE, which\nkeeps the slave from purging the ndb_apply_status table in such cases.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/reset-slave.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/reset-slave.html'),(556,'SET GLOBAL SQL_SLAVE_SKIP_COUNTER',35,'Syntax:\nSET GLOBAL sql_slave_skip_counter = N\n\nThis statement skips the next N events from the master. This is useful\nfor recovering from replication stops caused by a statement.\n\nThis statement is valid only when the slave threads are not running.\nOtherwise, it produces an error.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-global-sql-slave-skip-counter.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-global-sql-slave-skip-counter.html'),(557,'START SLAVE',35,'Syntax:\nSTART SLAVE [thread_types] [until_option] [connection_options] [channel_option]\n\nthread_types:\n    [thread_type [, thread_type] ... ]\n\nthread_type:\n    IO_THREAD | SQL_THREAD\n\nuntil_option:\n    UNTIL {   {SQL_BEFORE_GTIDS | SQL_AFTER_GTIDS} = gtid_set\n          |   MASTER_LOG_FILE = \'log_name\', MASTER_LOG_POS = log_pos\n          |   RELAY_LOG_FILE = \'log_name\', RELAY_LOG_POS = log_pos\n          |   SQL_AFTER_MTS_GAPS  }\n\nconnection_options:\n    [USER=\'user_name\'] [PASSWORD=\'user_pass\'] [DEFAULT_AUTH=\'plugin_name\'] [PLUGIN_DIR=\'plugin_dir\']\n\n\nchannel_option:\n    FOR CHANNEL channel\n\ngtid_set:\n    uuid_set [, uuid_set] ...\n    | \'\'\n\nuuid_set:\n    uuid:interval[:interval]...\n\nuuid:\n    hhhhhhhh-hhhh-hhhh-hhhh-hhhhhhhhhhhh\n\nh:\n    [0-9,A-F]\n\ninterval:\n    n[-n]\n\n    (n >= 1)\n\nSTART SLAVE with no thread_type options starts both of the slave\nthreads. The I/O thread reads events from the master server and stores\nthem in the relay log. The SQL thread reads events from the relay log\nand executes them. START SLAVE requires the REPLICATION_SLAVE_ADMIN\n(https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_\nreplication-slave-admin) or SUPER privilege.\n\nIf START SLAVE succeeds in starting the slave threads, it returns\nwithout any error. However, even in that case, it might be that the\nslave threads start and then later stop (for example, because they do\nnot manage to connect to the master or read its binary log, or some\nother problem). START SLAVE does not warn you about this. You must\ncheck the slave\'s error log for error messages generated by the slave\nthreads, or check that they are running satisfactorily with SHOW SLAVE\nSTATUS.\n\nIn MySQL 5.7, START SLAVE causes an implicit commit of an ongoing\ntransaction. See\nhttps://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\ngtid_next must be set to AUTOMATIC before issuing this statement.\n\nThe optional FOR CHANNEL channel clause enables you to name which\nreplication channel the statement applies to. Providing a FOR CHANNEL\nchannel clause applies the START SLAVE statement to a specific\nreplication channel. If no clause is named and no extra channels exist,\nthe statement applies to the default channel. If a START SLAVE\nstatement does not have a channel defined when using multiple channels,\nthis statement starts the specified threads for all channels. This\nstatement is disallowed for the group_replication_recovery channel. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-channels.html for\nmore information.\n\nMySQL supports pluggable user-password authentication with START SLAVE\nwith the USER, PASSWORD, DEFAULT_AUTH and PLUGIN_DIR options, as\ndescribed in the following list:\n\no USER: User name. Cannot be set to an empty or null string, or left\n  unset if PASSWORD is used.\n\no PASSWORD: Password.\n\no DEFAULT_AUTH: Name of plugin; default is MySQL native authentication.\n\no PLUGIN_DIR: Location of plugin.\n\nYou cannot use the SQL_THREAD option when specifying any of USER,\nPASSWORD, DEFAULT_AUTH, or PLUGIN_DIR, unless the IO_THREAD option is\nalso provided.\n\nSee\nhttps://dev.mysql.com/doc/refman/5.7/en/pluggable-authentication.html,\nfor more information.\n\nIf an insecure connection is used with any these options, the server\nissues the warning Sending passwords in plain text without SSL/TLS is\nextremely insecure.\n\nSTART SLAVE ... UNTIL supports two additional options for use with\nglobal transaction identifiers (GTIDs) (see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-gtids.html). Each\nof these takes a set of one or more global transaction identifiers\ngtid_set as an argument (see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-gtids-concepts.html\n#replication-gtids-concepts-gtid-sets, for more information).\n\nWhen no thread_type is specified, START SLAVE UNTIL SQL_BEFORE_GTIDS\ncauses the slave SQL thread to process transactions until it has\nreached the first transaction whose GTID is listed in the gtid_set.\nSTART SLAVE UNTIL SQL_AFTER_GTIDS causes the slave threads to process\nall transactions until the last transaction in the gtid_set has been\nprocessed by both threads. In other words, START SLAVE UNTIL\nSQL_BEFORE_GTIDS causes the slave SQL thread to process all\ntransactions occurring before the first GTID in the gtid_set is\nreached, and START SLAVE UNTIL SQL_AFTER_GTIDS causes the slave threads\nto handle all transactions, including those whose GTIDs are found in\ngtid_set, until each has encountered a transaction whose GTID is not\npart of the set. SQL_BEFORE_GTIDS and SQL_AFTER_GTIDS each support the\nSQL_THREAD and IO_THREAD options, although using IO_THREAD with them\ncurrently has no effect.\n\nFor example, START SLAVE SQL_THREAD UNTIL SQL_BEFORE_GTIDS =\n3E11FA47-71CA-11E1-9E33-C80AA9429562:11-56 causes the slave SQL thread\nto process all transactions originating from the master whose\nserver_uuid is 3E11FA47-71CA-11E1-9E33-C80AA9429562 until it encounters\nthe transaction having sequence number 11; it then stops without\nprocessing this transaction. In other words, all transactions up to and\nincluding the transaction with sequence number 10 are processed.\nExecuting START SLAVE SQL_THREAD UNTIL SQL_AFTER_GTIDS =\n3E11FA47-71CA-11E1-9E33-C80AA9429562:11-56, on the other hand, would\ncause the slave SQL thread to obtain all transactions just mentioned\nfrom the master, including all of the transactions having the sequence\nnumbers 11 through 56, and then to stop without processing any\nadditional transactions; that is, the transaction having sequence\nnumber 56 would be the last transaction fetched by the slave SQL\nthread.\n\nPrior to MySQL 5.7.3, SQL_AFTER_GTIDS did not stop the slave once the\nindicated transaction was completed, but waited until another GTID\nevent was received (Bug #14767986).\n\nWhen using a multithreaded slave, there is a chance of gaps in the\nsequence of transactions that have been executed from the relay log in\nthe following cases:\n\no killing the coordinator thread\n\no after an error occurs in the worker threads\n\no mysqld shuts down unexpectedly\n\nUse the START SLAVE UNTIL SQL_AFTER_MTS_GAPS statement to cause a\nmultithreaded slave\'s worker threads to only run until no more gaps are\nfound in the relay log, and then to stop. This statement can take an\nSQL_THREAD option, but the effects of the statement remain unchanged.\nIt has no effect on the slave I/O thread (and cannot be used with the\nIO_THREAD option).\n\nIssuing START SLAVE on a multithreaded slave with gaps in the sequence\nof transactions executed from the relay log generates a warning. In\nsuch a situation, the solution is to use START SLAVE UNTIL\nSQL_AFTER_MTS_GAPS, then issue RESET SLAVE to remove any remaining\nrelay logs. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-features-transactio\nn-inconsistencies.html for more information.\n\nTo change a failed multithreaded slave to single-threaded mode, you can\nissue the following series of statements, in the order shown:\n\nSTART SLAVE UNTIL SQL_AFTER_MTS_GAPS;\n\nSET @@GLOBAL.slave_parallel_workers = 0;\n\nSTART SLAVE SQL_THREAD;\n\n*Note*:\n\nIt is possible to view the entire text of a running START SLAVE ...\nstatement, including any USER or PASSWORD values used, in the output of\nSHOW PROCESSLIST. This is also true for the text of a running CHANGE\nMASTER TO statement, including any values it employs for MASTER_USER or\nMASTER_PASSWORD.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/start-slave.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/start-slave.html'),(558,'STOP SLAVE',35,'Syntax:\nSTOP SLAVE [thread_types] [channel_option]\n\nthread_types:\n    [thread_type [, thread_type] ... ]\n\nthread_type: IO_THREAD | SQL_THREAD\n\nchannel_option:\n    FOR CHANNEL channel\n\nStops the slave threads. STOP SLAVE requires the\nREPLICATION_SLAVE_ADMIN\n(https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_\nreplication-slave-admin) or SUPER privilege. Recommended best practice\nis to execute STOP SLAVE on the slave before stopping the slave server\n(see https://dev.mysql.com/doc/refman/5.7/en/server-shutdown.html, for\nmore information).\n\nWhen using the row-based logging format: You should execute STOP SLAVE\nor STOP SLAVE SQL_THREAD on the slave prior to shutting down the slave\nserver if you are replicating any tables that use a nontransactional\nstorage engine (see the Note later in this section).\n\nLike START SLAVE, this statement may be used with the IO_THREAD and\nSQL_THREAD options to name the thread or threads to be stopped.\n\nSTOP SLAVE causes an implicit commit of an ongoing transaction. See\nhttps://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\nFrom MySQL 5.7, gtid_next must be set to AUTOMATIC before issuing this\nstatement (Bug #16062608).\n\nFrom MySQL 5.7, you can control how long STOP SLAVE waits before timing\nout by setting the rpl_stop_slave_timeout system variable. This can be\nused to avoid deadlocks between STOP SLAVE and other slave SQL\nstatements using different client connections to the slave. When the\ntimeout value is reached, the issuing client returns an error message\nand stops waiting, but the STOP SLAVE instruction remains in effect.\nOnce the slave threads are no longer busy, the STOP SLAVE statement is\nexecuted and the slave stops. (Bug #16856735)\n\nSome CHANGE MASTER TO statements are allowed while the slave is\nrunning, depending on the states of the slave SQL and I/O threads.\nHowever, using STOP SLAVE prior to executing CHANGE MASTER TO in such\ncases is still supported. See [HELP CHANGE MASTER TO], and\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-solutions-switch.ht\nml, for more information.\n\nThe optional FOR CHANNEL channel clause enables you to name which\nreplication channel the statement applies to. Providing a FOR CHANNEL\nchannel clause applies the STOP SLAVE statement to a specific\nreplication channel. If no channel is named and no extra channels\nexist, the statement applies to the default channel. If a STOP SLAVE\nstatement does not name a channel when using multiple channels, this\nstatement stops the specified threads for all channels. This statement\ncannot be used with the group_replication_recovery channel. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-channels.html for\nmore information.\n\nWhen using statement-based replication: changing the master while it\nhas open temporary tables is potentially unsafe. This is one of the\nreasons why statement-based replication of temporary tables is not\nrecommended. You can find out whether there are any temporary tables on\nthe slave by checking the value of Slave_open_temp_tables; when using\nstatement-based replication, this value should be 0 before executing\nCHANGE MASTER TO. If there are any temporary tables open on the slave,\nissuing a CHANGE MASTER TO statement after issuing a STOP SLAVE causes\nan ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO warning.\n\nWhen using a multithreaded slave (slave_parallel_workers is a nonzero\nvalue), any gaps in the sequence of transactions executed from the\nrelay log are closed as part of stopping the worker threads. If the\nslave is stopped unexpectedly (for example due to an error in a worker\nthread, or another thread issuing KILL) while a STOP SLAVE statement is\nexecuting, the sequence of executed transactions from the relay log may\nbecome inconsistent. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-features-transactio\nn-inconsistencies.html, for more information.\n\nIf the current replication event group has modified one or more\nnontransactional tables, STOP SLAVE waits for up to 60 seconds for the\nevent group to complete, unless you issue a KILL QUERY or KILL\nCONNECTION statement for the slave SQL thread. If the event group\nremains incomplete after the timeout, an error message is logged.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/stop-slave.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/stop-slave.html'),(559,'PREPARE',35,'Syntax:\nPREPARE stmt_name FROM preparable_stmt\n\nThe PREPARE statement prepares a SQL statement and assigns it a name,\nstmt_name, by which to refer to the statement later. The prepared\nstatement is executed with EXECUTE and released with DEALLOCATE\nPREPARE. For examples, see\nhttps://dev.mysql.com/doc/refman/5.7/en/sql-syntax-prepared-statements.\nhtml.\n\nStatement names are not case-sensitive. preparable_stmt is either a\nstring literal or a user variable that contains the text of the SQL\nstatement. The text must represent a single statement, not multiple\nstatements. Within the statement, ? characters can be used as parameter\nmarkers to indicate where data values are to be bound to the query\nlater when you execute it. The ? characters should not be enclosed\nwithin quotation marks, even if you intend to bind them to string\nvalues. Parameter markers can be used only where data values should\nappear, not for SQL keywords, identifiers, and so forth.\n\nIf a prepared statement with the given name already exists, it is\ndeallocated implicitly before the new statement is prepared. This means\nthat if the new statement contains an error and cannot be prepared, an\nerror is returned and no statement with the given name exists.\n\nThe scope of a prepared statement is the session within which it is\ncreated, which as several implications:\n\no A prepared statement created in one session is not available to other\n  sessions.\n\no When a session ends, whether normally or abnormally, its prepared\n  statements no longer exist. If auto-reconnect is enabled, the client\n  is not notified that the connection was lost. For this reason,\n  clients may wish to disable auto-reconnect. See\n  https://dev.mysql.com/doc/refman/5.7/en/c-api-auto-reconnect.html.\n\no A prepared statement created within a stored program continues to\n  exist after the program finishes executing and can be executed\n  outside the program later.\n\no A statement prepared in stored program context cannot refer to stored\n  procedure or function parameters or local variables because they go\n  out of scope when the program ends and would be unavailable were the\n  statement to be executed later outside the program. As a workaround,\n  refer instead to user-defined variables, which also have session\n  scope; see\n  https://dev.mysql.com/doc/refman/5.7/en/user-variables.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/prepare.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/prepare.html'),(560,'EXECUTE STATEMENT',35,'Syntax:\nEXECUTE stmt_name\n    [USING @var_name [, @var_name] ...]\n\nAfter preparing a statement with PREPARE, you execute it with an\nEXECUTE statement that refers to the prepared statement name. If the\nprepared statement contains any parameter markers, you must supply a\nUSING clause that lists user variables containing the values to be\nbound to the parameters. Parameter values can be supplied only by user\nvariables, and the USING clause must name exactly as many variables as\nthe number of parameter markers in the statement.\n\nYou can execute a given prepared statement multiple times, passing\ndifferent variables to it or setting the variables to different values\nbefore each execution.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/execute.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/execute.html'),(561,'DEALLOCATE PREPARE',35,'Syntax:\n{DEALLOCATE | DROP} PREPARE stmt_name\n\nTo deallocate a prepared statement produced with PREPARE, use a\nDEALLOCATE PREPARE statement that refers to the prepared statement\nname. Attempting to execute a prepared statement after deallocating it\nresults in an error. If too many prepared statements are created and\nnot deallocated by either the DEALLOCATE PREPARE statement or the end\nof the session, you might encounter the upper limit enforced by the\nmax_prepared_stmt_count system variable.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/deallocate-prepare.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/deallocate-prepare.html'),(562,'DROP PREPARE',35,'Syntax:\n{DEALLOCATE | DROP} PREPARE stmt_name\n\nTo deallocate a prepared statement produced with PREPARE, use a\nDEALLOCATE PREPARE statement that refers to the prepared statement\nname. Attempting to execute a prepared statement after deallocating it\nresults in an error. If too many prepared statements are created and\nnot deallocated by either the DEALLOCATE PREPARE statement or the end\nof the session, you might encounter the upper limit enforced by the\nmax_prepared_stmt_count system variable.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/deallocate-prepare.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/deallocate-prepare.html'),(563,'BEGIN END',36,'Syntax:\n[begin_label:] BEGIN\n    [statement_list]\nEND [end_label]\n\nBEGIN ... END syntax is used for writing compound statements, which can\nappear within stored programs (stored procedures and functions,\ntriggers, and events). A compound statement can contain multiple\nstatements, enclosed by the BEGIN and END keywords. statement_list\nrepresents a list of one or more statements, each terminated by a\nsemicolon (;) statement delimiter. The statement_list itself is\noptional, so the empty compound statement (BEGIN END) is legal.\n\nBEGIN ... END blocks can be nested.\n\nUse of multiple statements requires that a client is able to send\nstatement strings containing the ; statement delimiter. In the mysql\ncommand-line client, this is handled with the delimiter command.\nChanging the ; end-of-statement delimiter (for example, to //) permit ;\nto be used in a program body. For an example, see\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-programs-defining.html.\n\nA BEGIN ... END block can be labeled. See [HELP labels].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/begin-end.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/begin-end.html'),(564,'LABELS',36,'Syntax:\n[begin_label:] BEGIN\n    [statement_list]\nEND [end_label]\n\n[begin_label:] LOOP\n    statement_list\nEND LOOP [end_label]\n\n[begin_label:] REPEAT\n    statement_list\nUNTIL search_condition\nEND REPEAT [end_label]\n\n[begin_label:] WHILE search_condition DO\n    statement_list\nEND WHILE [end_label]\n\nLabels are permitted for BEGIN ... END blocks and for the LOOP, REPEAT,\nand WHILE statements. Label use for those statements follows these\nrules:\n\no begin_label must be followed by a colon.\n\no begin_label can be given without end_label. If end_label is present,\n  it must be the same as begin_label.\n\no end_label cannot be given without begin_label.\n\no Labels at the same nesting level must be distinct.\n\no Labels can be up to 16 characters long.\n\nTo refer to a label within the labeled construct, use an ITERATE or\nLEAVE statement. The following example uses those statements to\ncontinue iterating or terminate the loop:\n\nCREATE PROCEDURE doiterate(p1 INT)\nBEGIN\n  label1: LOOP\n    SET p1 = p1 + 1;\n    IF p1 < 10 THEN ITERATE label1; END IF;\n    LEAVE label1;\n  END LOOP label1;\nEND;\n\nThe scope of a block label does not include the code for handlers\ndeclared within the block. For details, see [HELP DECLARE HANDLER].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/statement-labels.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/statement-labels.html'),(565,'DECLARE VARIABLE',36,'Syntax:\nDECLARE var_name [, var_name] ... type [DEFAULT value]\n\nThis statement declares local variables within stored programs. To\nprovide a default value for a variable, include a DEFAULT clause. The\nvalue can be specified as an expression; it need not be a constant. If\nthe DEFAULT clause is missing, the initial value is NULL.\n\nLocal variables are treated like stored routine parameters with respect\nto data type and overflow checking. See [HELP CREATE PROCEDURE].\n\nVariable declarations must appear before cursor or handler\ndeclarations.\n\nLocal variable names are not case-sensitive. Permissible characters and\nquoting rules are the same as for other identifiers, as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/identifiers.html.\n\nThe scope of a local variable is the BEGIN ... END block within which\nit is declared. The variable can be referred to in blocks nested within\nthe declaring block, except those blocks that declare a variable with\nthe same name.\n\nFor examples of variable declarations, see\nhttps://dev.mysql.com/doc/refman/5.7/en/local-variable-scope.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/declare-local-variable.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/declare-local-variable.html'),(566,'CASE STATEMENT',36,'Syntax:\nCASE case_value\n    WHEN when_value THEN statement_list\n    [WHEN when_value THEN statement_list] ...\n    [ELSE statement_list]\nEND CASE\n\nOr:\n\nCASE\n    WHEN search_condition THEN statement_list\n    [WHEN search_condition THEN statement_list] ...\n    [ELSE statement_list]\nEND CASE\n\nThe CASE statement for stored programs implements a complex conditional\nconstruct.\n\n*Note*:\n\nThere is also a CASE expr, which differs from the CASE statement\ndescribed here. See\nhttps://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html.\nThe CASE statement cannot have an ELSE NULL clause, and it is\nterminated with END CASE instead of END.\n\nFor the first syntax, case_value is an expression. This value is\ncompared to the when_value expression in each WHEN clause until one of\nthem is equal. When an equal when_value is found, the corresponding\nTHEN clause statement_list executes. If no when_value is equal, the\nELSE clause statement_list executes, if there is one.\n\nThis syntax cannot be used to test for equality with NULL because NULL\n= NULL is false. See\nhttps://dev.mysql.com/doc/refman/5.7/en/working-with-null.html.\n\nFor the second syntax, each WHEN clause search_condition expression is\nevaluated until one is true, at which point its corresponding THEN\nclause statement_list executes. If no search_condition is equal, the\nELSE clause statement_list executes, if there is one.\n\nIf no when_value or search_condition matches the value tested and the\nCASE statement contains no ELSE clause, a Case not found for CASE\nstatement error results.\n\nEach statement_list consists of one or more SQL statements; an empty\nstatement_list is not permitted.\n\nTo handle situations where no value is matched by any WHEN clause, use\nan ELSE containing an empty BEGIN ... END block, as shown in this\nexample. (The indentation used here in the ELSE clause is for purposes\nof clarity only, and is not otherwise significant.)\n\nDELIMITER |\n\nCREATE PROCEDURE p()\n  BEGIN\n    DECLARE v INT DEFAULT 1;\n\n    CASE v\n      WHEN 2 THEN SELECT v;\n      WHEN 3 THEN SELECT 0;\n      ELSE\n        BEGIN\n        END;\n    END CASE;\n  END;\n  |\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/case.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/case.html'),(567,'IF STATEMENT',36,'Syntax:\nIF search_condition THEN statement_list\n    [ELSEIF search_condition THEN statement_list] ...\n    [ELSE statement_list]\nEND IF\n\nThe IF statement for stored programs implements a basic conditional\nconstruct.\n\n*Note*:\n\nThere is also an IF() function, which differs from the IF statement\ndescribed here. See\nhttps://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html.\nThe IF statement can have THEN, ELSE, and ELSEIF clauses, and it is\nterminated with END IF.\n\nIf a given search_condition evaluates to true, the corresponding THEN\nor ELSEIF clause statement_list executes. If no search_condition\nmatches, the ELSE clause statement_list executes.\n\nEach statement_list consists of one or more SQL statements; an empty\nstatement_list is not permitted.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/if.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/if.html'),(568,'ITERATE',36,'Syntax:\nITERATE label\n\nITERATE can appear only within LOOP, REPEAT, and WHILE statements.\nITERATE means \"start the loop again.\"\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/iterate.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/iterate.html'),(569,'LEAVE',36,'Syntax:\nLEAVE label\n\nThis statement is used to exit the flow control construct that has the\ngiven label. If the label is for the outermost stored program block,\nLEAVE exits the program.\n\nLEAVE can be used within BEGIN ... END or loop constructs (LOOP,\nREPEAT, WHILE).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/leave.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/leave.html'),(570,'LOOP',36,'Syntax:\n[begin_label:] LOOP\n    statement_list\nEND LOOP [end_label]\n\nLOOP implements a simple loop construct, enabling repeated execution of\nthe statement list, which consists of one or more statements, each\nterminated by a semicolon (;) statement delimiter. The statements\nwithin the loop are repeated until the loop is terminated. Usually,\nthis is accomplished with a LEAVE statement. Within a stored function,\nRETURN can also be used, which exits the function entirely.\n\nNeglecting to include a loop-termination statement results in an\ninfinite loop.\n\nA LOOP statement can be labeled. For the rules regarding label use, see\n[HELP labels].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/loop.html\n\n','CREATE PROCEDURE doiterate(p1 INT)\nBEGIN\n  label1: LOOP\n    SET p1 = p1 + 1;\n    IF p1 < 10 THEN\n      ITERATE label1;\n    END IF;\n    LEAVE label1;\n  END LOOP label1;\n  SET @x = p1;\nEND;\n','https://dev.mysql.com/doc/refman/5.7/en/loop.html'),(571,'REPEAT LOOP',36,'Syntax:\n[begin_label:] REPEAT\n    statement_list\nUNTIL search_condition\nEND REPEAT [end_label]\n\nThe statement list within a REPEAT statement is repeated until the\nsearch_condition expression is true. Thus, a REPEAT always enters the\nloop at least once. statement_list consists of one or more statements,\neach terminated by a semicolon (;) statement delimiter.\n\nA REPEAT statement can be labeled. For the rules regarding label use,\nsee [HELP labels].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/repeat.html\n\n','mysql> delimiter //\n\nmysql> CREATE PROCEDURE dorepeat(p1 INT)\n       BEGIN\n         SET @x = 0;\n         REPEAT\n           SET @x = @x + 1;\n         UNTIL @x > p1 END REPEAT;\n       END\n       //\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> CALL dorepeat(1000)//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @x//\n+------+\n| @x   |\n+------+\n| 1001 |\n+------+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/repeat.html'),(572,'RETURN',36,'Syntax:\nRETURN expr\n\nThe RETURN statement terminates execution of a stored function and\nreturns the value expr to the function caller. There must be at least\none RETURN statement in a stored function. There may be more than one\nif the function has multiple exit points.\n\nThis statement is not used in stored procedures, triggers, or events.\nThe LEAVE statement can be used to exit a stored program of those\ntypes.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/return.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/return.html'),(573,'WHILE',36,'Syntax:\n[begin_label:] WHILE search_condition DO\n    statement_list\nEND WHILE [end_label]\n\nThe statement list within a WHILE statement is repeated as long as the\nsearch_condition expression is true. statement_list consists of one or\nmore SQL statements, each terminated by a semicolon (;) statement\ndelimiter.\n\nA WHILE statement can be labeled. For the rules regarding label use,\nsee [HELP labels].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/while.html\n\n','CREATE PROCEDURE dowhile()\nBEGIN\n  DECLARE v1 INT DEFAULT 5;\n\n  WHILE v1 > 0 DO\n    ...\n    SET v1 = v1 - 1;\n  END WHILE;\nEND;\n','https://dev.mysql.com/doc/refman/5.7/en/while.html'),(574,'CLOSE',36,'Syntax:\nCLOSE cursor_name\n\nThis statement closes a previously opened cursor. For an example, see\nhttps://dev.mysql.com/doc/refman/5.7/en/cursors.html.\n\nAn error occurs if the cursor is not open.\n\nIf not closed explicitly, a cursor is closed at the end of the BEGIN\n... END block in which it was declared.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/close.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/close.html'),(575,'DECLARE CURSOR',36,'Syntax:\nDECLARE cursor_name CURSOR FOR select_statement\n\nThis statement declares a cursor and associates it with a SELECT\nstatement that retrieves the rows to be traversed by the cursor. To\nfetch the rows later, use a FETCH statement. The number of columns\nretrieved by the SELECT statement must match the number of output\nvariables specified in the FETCH statement.\n\nThe SELECT statement cannot have an INTO clause.\n\nCursor declarations must appear before handler declarations and after\nvariable and condition declarations.\n\nA stored program may contain multiple cursor declarations, but each\ncursor declared in a given block must have a unique name. For an\nexample, see https://dev.mysql.com/doc/refman/5.7/en/cursors.html.\n\nFor information available through SHOW statements, it is possible in\nmany cases to obtain equivalent information by using a cursor with an\nINFORMATION_SCHEMA table.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/declare-cursor.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/declare-cursor.html'),(576,'FETCH',36,'Syntax:\nFETCH [[NEXT] FROM] cursor_name INTO var_name [, var_name] ...\n\nThis statement fetches the next row for the SELECT statement associated\nwith the specified cursor (which must be open), and advances the cursor\npointer. If a row exists, the fetched columns are stored in the named\nvariables. The number of columns retrieved by the SELECT statement must\nmatch the number of output variables specified in the FETCH statement.\n\nIf no more rows are available, a No Data condition occurs with SQLSTATE\nvalue \'02000\'. To detect this condition, you can set up a handler for\nit (or for a NOT FOUND condition). For an example, see\nhttps://dev.mysql.com/doc/refman/5.7/en/cursors.html.\n\nBe aware that another operation, such as a SELECT or another FETCH, may\nalso cause the handler to execute by raising the same condition. If it\nis necessary to distinguish which operation raised the condition, place\nthe operation within its own BEGIN ... END block so that it can be\nassociated with its own handler.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/fetch.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/fetch.html'),(577,'OPEN',36,'Syntax:\nOPEN cursor_name\n\nThis statement opens a previously declared cursor. For an example, see\nhttps://dev.mysql.com/doc/refman/5.7/en/cursors.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/open.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/open.html'),(578,'DECLARE CONDITION',36,'Syntax:\nDECLARE condition_name CONDITION FOR condition_value\n\ncondition_value: {\n    mysql_error_code\n  | SQLSTATE [VALUE] sqlstate_value\n}\n\nThe DECLARE ... CONDITION statement declares a named error condition,\nassociating a name with a condition that needs specific handling. The\nname can be referred to in a subsequent DECLARE ... HANDLER statement\n(see [HELP DECLARE HANDLER]).\n\nCondition declarations must appear before cursor or handler\ndeclarations.\n\nThe condition_value for DECLARE ... CONDITION indicates the specific\ncondition or class of conditions to associate with the condition name.\nIt can take the following forms:\n\no mysql_error_code: An integer literal indicating a MySQL error code.\n\n  Do not use MySQL error code 0 because that indicates success rather\n  than an error condition. For a list of MySQL error codes, see\n  https://dev.mysql.com/doc/refman/5.7/en/server-error-reference.html.\n\no SQLSTATE [VALUE] sqlstate_value: A 5-character string literal\n  indicating an SQLSTATE value.\n\n  Do not use SQLSTATE values that begin with \'00\' because those\n  indicate success rather than an error condition. For a list of\n  SQLSTATE values, see\n  https://dev.mysql.com/doc/refman/5.7/en/server-error-reference.html.\n\nCondition names referred to in SIGNAL or use RESIGNAL statements must\nbe associated with SQLSTATE values, not MySQL error codes.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/declare-condition.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/declare-condition.html'),(579,'DECLARE HANDLER',36,'Syntax:\nDECLARE handler_action HANDLER\n    FOR condition_value [, condition_value] ...\n    statement\n\nhandler_action: {\n    CONTINUE\n  | EXIT\n  | UNDO\n}\n\ncondition_value: {\n    mysql_error_code\n  | SQLSTATE [VALUE] sqlstate_value\n  | condition_name\n  | SQLWARNING\n  | NOT FOUND\n  | SQLEXCEPTION\n}\n\nThe DECLARE ... HANDLER statement specifies a handler that deals with\none or more conditions. If one of these conditions occurs, the\nspecified statement executes. statement can be a simple statement such\nas SET var_name = value, or a compound statement written using BEGIN\nand END (see [HELP BEGIN END]).\n\nHandler declarations must appear after variable or condition\ndeclarations.\n\nThe handler_action value indicates what action the handler takes after\nexecution of the handler statement:\n\no CONTINUE: Execution of the current program continues.\n\no EXIT: Execution terminates for the BEGIN ... END compound statement\n  in which the handler is declared. This is true even if the condition\n  occurs in an inner block.\n\no UNDO: Not supported.\n\nThe condition_value for DECLARE ... HANDLER indicates the specific\ncondition or class of conditions that activates the handler. It can\ntake the following forms:\n\no mysql_error_code: An integer literal indicating a MySQL error code,\n  such as 1051 to specify \"unknown table\":\n\nDECLARE CONTINUE HANDLER FOR 1051\n  BEGIN\n    -- body of handler\n  END;\n\n  Do not use MySQL error code 0 because that indicates success rather\n  than an error condition. For a list of MySQL error codes, see\n  https://dev.mysql.com/doc/refman/5.7/en/server-error-reference.html.\n\no SQLSTATE [VALUE] sqlstate_value: A 5-character string literal\n  indicating an SQLSTATE value, such as \'42S01\' to specify \"unknown\n  table\":\n\nDECLARE CONTINUE HANDLER FOR SQLSTATE \'42S02\'\n  BEGIN\n    -- body of handler\n  END;\n\n  Do not use SQLSTATE values that begin with \'00\' because those\n  indicate success rather than an error condition. For a list of\n  SQLSTATE values, see\n  https://dev.mysql.com/doc/refman/5.7/en/server-error-reference.html.\n\no condition_name: A condition name previously specified with DECLARE\n  ... CONDITION. A condition name can be associated with a MySQL error\n  code or SQLSTATE value. See [HELP DECLARE CONDITION].\n\no SQLWARNING: Shorthand for the class of SQLSTATE values that begin\n  with \'01\'.\n\nDECLARE CONTINUE HANDLER FOR SQLWARNING\n  BEGIN\n    -- body of handler\n  END;\n\no NOT FOUND: Shorthand for the class of SQLSTATE values that begin with\n  \'02\'. This is relevant within the context of cursors and is used to\n  control what happens when a cursor reaches the end of a data set. If\n  no more rows are available, a No Data condition occurs with SQLSTATE\n  value \'02000\'. To detect this condition, you can set up a handler for\n  it or for a NOT FOUND condition.\n\nDECLARE CONTINUE HANDLER FOR NOT FOUND\n  BEGIN\n    -- body of handler\n  END;\n\n  For another example, see\n  https://dev.mysql.com/doc/refman/5.7/en/cursors.html. The NOT FOUND\n  condition also occurs for SELECT ... INTO var_list statements that\n  retrieve no rows.\n\no SQLEXCEPTION: Shorthand for the class of SQLSTATE values that do not\n  begin with \'00\', \'01\', or \'02\'.\n\nDECLARE CONTINUE HANDLER FOR SQLEXCEPTION\n  BEGIN\n    -- body of handler\n  END;\n\nFor information about how the server chooses handlers when a condition\noccurs, see https://dev.mysql.com/doc/refman/5.7/en/handler-scope.html.\n\nIf a condition occurs for which no handler has been declared, the\naction taken depends on the condition class:\n\no For SQLEXCEPTION conditions, the stored program terminates at the\n  statement that raised the condition, as if there were an EXIT\n  handler. If the program was called by another stored program, the\n  calling program handles the condition using the handler selection\n  rules applied to its own handlers.\n\no For SQLWARNING conditions, the program continues executing, as if\n  there were a CONTINUE handler.\n\no For NOT FOUND conditions, if the condition was raised normally, the\n  action is CONTINUE. If it was raised by SIGNAL or RESIGNAL, the\n  action is EXIT.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/declare-handler.html\n\n','mysql> CREATE TABLE test.t (s1 INT, PRIMARY KEY (s1));\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> delimiter //\n\nmysql> CREATE PROCEDURE handlerdemo ()\n       BEGIN\n         DECLARE CONTINUE HANDLER FOR SQLSTATE \'23000\' SET @x2 = 1;\n         SET @x = 1;\n         INSERT INTO test.t VALUES (1);\n         SET @x = 2;\n         INSERT INTO test.t VALUES (1);\n         SET @x = 3;\n       END;\n       //\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> CALL handlerdemo()//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @x//\n    +------+\n    | @x   |\n    +------+\n    | 3    |\n    +------+\n    1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/declare-handler.html'),(580,'GET DIAGNOSTICS',36,'Syntax:\nGET [CURRENT | STACKED] DIAGNOSTICS\n{\n    statement_information_item\n    [, statement_information_item] ...\n  | CONDITION condition_number\n    condition_information_item\n    [, condition_information_item] ...\n}\n\nstatement_information_item:\n    target = statement_information_item_name\n\ncondition_information_item:\n    target = condition_information_item_name\n\nstatement_information_item_name:\n    NUMBER\n  | ROW_COUNT\n\ncondition_information_item_name: {\n    CLASS_ORIGIN\n  | SUBCLASS_ORIGIN\n  | RETURNED_SQLSTATE\n  | MESSAGE_TEXT\n  | MYSQL_ERRNO\n  | CONSTRAINT_CATALOG\n  | CONSTRAINT_SCHEMA\n  | CONSTRAINT_NAME\n  | CATALOG_NAME\n  | SCHEMA_NAME\n  | TABLE_NAME\n  | COLUMN_NAME\n  | CURSOR_NAME\n}\n\ncondition_number, target:\n    (see following discussion)\n\nSQL statements produce diagnostic information that populates the\ndiagnostics area. The GET DIAGNOSTICS statement enables applications to\ninspect this information. (You can also use SHOW WARNINGS or SHOW\nERRORS to see conditions or errors.)\n\nNo special privileges are required to execute GET DIAGNOSTICS.\n\nThe keyword CURRENT means to retrieve information from the current\ndiagnostics area. The keyword STACKED means to retrieve information\nfrom the second diagnostics area, which is available only if the\ncurrent context is a condition handler. If neither keyword is given,\nthe default is to use the current diagnostics area.\n\nThe GET DIAGNOSTICS statement is typically used in a handler within a\nstored program. It is a MySQL extension that GET [CURRENT] DIAGNOSTICS\nis permitted outside handler context to check the execution of any SQL\nstatement. For example, if you invoke the mysql client program, you can\nenter these statements at the prompt:\n\nmysql> DROP TABLE test.no_such_table;\nERROR 1051 (42S02): Unknown table \'test.no_such_table\'\nmysql> GET DIAGNOSTICS CONDITION 1\n         @p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;\nmysql> SELECT @p1, @p2;\n+-------+------------------------------------+\n| @p1   | @p2                                |\n+-------+------------------------------------+\n| 42S02 | Unknown table \'test.no_such_table\' |\n+-------+------------------------------------+\n\nThis extension applies only to the current diagnostics area. It does\nnot apply to the second diagnostics area because GET STACKED\nDIAGNOSTICS is permitted only if the current context is a condition\nhandler. If that is not the case, a GET STACKED DIAGNOSTICS when\nhandler not active error occurs.\n\nFor a description of the diagnostics area, see\nhttps://dev.mysql.com/doc/refman/5.7/en/diagnostics-area.html. Briefly,\nit contains two kinds of information:\n\no Statement information, such as the number of conditions that occurred\n  or the affected-rows count.\n\no Condition information, such as the error code and message. If a\n  statement raises multiple conditions, this part of the diagnostics\n  area has a condition area for each one. If a statement raises no\n  conditions, this part of the diagnostics area is empty.\n\nFor a statement that produces three conditions, the diagnostics area\ncontains statement and condition information like this:\n\nStatement information:\n  row count\n  ... other statement information items ...\nCondition area list:\n  Condition area 1:\n    error code for condition 1\n    error message for condition 1\n    ... other condition information items ...\n  Condition area 2:\n    error code for condition 2:\n    error message for condition 2\n    ... other condition information items ...\n  Condition area 3:\n    error code for condition 3\n    error message for condition 3\n    ... other condition information items ...\n\nGET DIAGNOSTICS can obtain either statement or condition information,\nbut not both in the same statement:\n\no To obtain statement information, retrieve the desired statement items\n  into target variables. This instance of GET DIAGNOSTICS assigns the\n  number of available conditions and the rows-affected count to the\n  user variables @p1 and @p2:\n\nGET DIAGNOSTICS @p1 = NUMBER, @p2 = ROW_COUNT;\n\no To obtain condition information, specify the condition number and\n  retrieve the desired condition items into target variables. This\n  instance of GET DIAGNOSTICS assigns the SQLSTATE value and error\n  message to the user variables @p3 and @p4:\n\nGET DIAGNOSTICS CONDITION 1\n  @p3 = RETURNED_SQLSTATE, @p4 = MESSAGE_TEXT;\n\nThe retrieval list specifies one or more target = item_name\nassignments, separated by commas. Each assignment names a target\nvariable and either a statement_information_item_name or\ncondition_information_item_name designator, depending on whether the\nstatement retrieves statement or condition information.\n\nValid target designators for storing item information can be stored\nprocedure or function parameters, stored program local variables\ndeclared with DECLARE, or user-defined variables.\n\nValid condition_number designators can be stored procedure or function\nparameters, stored program local variables declared with DECLARE,\nuser-defined variables, system variables, or literals. A character\nliteral may include a _charset introducer. A warning occurs if the\ncondition number is not in the range from 1 to the number of condition\nareas that have information. In this case, the warning is added to the\ndiagnostics area without clearing it.\n\nWhen a condition occurs, MySQL does not populate all condition items\nrecognized by GET DIAGNOSTICS. For example:\n\nmysql> GET DIAGNOSTICS CONDITION 1\n         @p5 = SCHEMA_NAME, @p6 = TABLE_NAME;\nmysql> SELECT @p5, @p6;\n+------+------+\n| @p5  | @p6  |\n+------+------+\n|      |      |\n+------+------+\n\nIn standard SQL, if there are multiple conditions, the first condition\nrelates to the SQLSTATE value returned for the previous SQL statement.\nIn MySQL, this is not guaranteed. To get the main error, you cannot do\nthis:\n\nGET DIAGNOSTICS CONDITION 1 @errno = MYSQL_ERRNO;\n\nInstead, retrieve the condition count first, then use it to specify\nwhich condition number to inspect:\n\nGET DIAGNOSTICS @cno = NUMBER;\nGET DIAGNOSTICS CONDITION @cno @errno = MYSQL_ERRNO;\n\nFor information about permissible statement and condition information\nitems, and which ones are populated when a condition occurs, see\nhttps://dev.mysql.com/doc/refman/5.7/en/diagnostics-area.html#diagnosti\ncs-area-information-items.\n\nHere is an example that uses GET DIAGNOSTICS and an exception handler\nin stored procedure context to assess the outcome of an insert\noperation. If the insert was successful, the procedure uses GET\nDIAGNOSTICS to get the rows-affected count. This shows that you can use\nGET DIAGNOSTICS multiple times to retrieve information about a\nstatement as long as the current diagnostics area has not been cleared.\n\nCREATE PROCEDURE do_insert(value INT)\nBEGIN\n  -- Declare variables to hold diagnostics area information\n  DECLARE code CHAR(5) DEFAULT \'00000\';\n  DECLARE msg TEXT;\n  DECLARE rows INT;\n  DECLARE result TEXT;\n  -- Declare exception handler for failed insert\n  DECLARE CONTINUE HANDLER FOR SQLEXCEPTION\n    BEGIN\n      GET DIAGNOSTICS CONDITION 1\n        code = RETURNED_SQLSTATE, msg = MESSAGE_TEXT;\n    END;\n\n  -- Perform the insert\n  INSERT INTO t1 (int_col) VALUES(value);\n  -- Check whether the insert was successful\n  IF code = \'00000\' THEN\n    GET DIAGNOSTICS rows = ROW_COUNT;\n    SET result = CONCAT(\'insert succeeded, row count = \',rows);\n  ELSE\n    SET result = CONCAT(\'insert failed, error = \',code,\', message = \',msg);\n  END IF;\n  -- Say what happened\n  SELECT result;\nEND;\n\nSuppose that t1.int_col is an integer column that is declared as NOT\nNULL. The procedure produces these results when invoked to insert\nnon-NULL and NULL values, respectively:\n\nmysql> CALL do_insert(1);\n+---------------------------------+\n| result                          |\n+---------------------------------+\n| insert succeeded, row count = 1 |\n+---------------------------------+\n\nmysql> CALL do_insert(NULL);\n+-------------------------------------------------------------------------+\n| result                                                                  |\n+-------------------------------------------------------------------------+\n| insert failed, error = 23000, message = Column \'int_col\' cannot be null |\n+-------------------------------------------------------------------------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/get-diagnostics.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/get-diagnostics.html'),(581,'RESIGNAL',36,'Syntax:\nRESIGNAL [condition_value]\n    [SET signal_information_item\n    [, signal_information_item] ...]\n\ncondition_value: {\n    SQLSTATE [VALUE] sqlstate_value\n  | condition_name\n}\n\nsignal_information_item:\n    condition_information_item_name = simple_value_specification\n\ncondition_information_item_name: {\n    CLASS_ORIGIN\n  | SUBCLASS_ORIGIN\n  | MESSAGE_TEXT\n  | MYSQL_ERRNO\n  | CONSTRAINT_CATALOG\n  | CONSTRAINT_SCHEMA\n  | CONSTRAINT_NAME\n  | CATALOG_NAME\n  | SCHEMA_NAME\n  | TABLE_NAME\n  | COLUMN_NAME\n  | CURSOR_NAME\n}\n\ncondition_name, simple_value_specification:\n    (see following discussion)\n\nRESIGNAL passes on the error condition information that is available\nduring execution of a condition handler within a compound statement\ninside a stored procedure or function, trigger, or event. RESIGNAL may\nchange some or all information before passing it on. RESIGNAL is\nrelated to SIGNAL, but instead of originating a condition as SIGNAL\ndoes, RESIGNAL relays existing condition information, possibly after\nmodifying it.\n\nRESIGNAL makes it possible to both handle an error and return the error\ninformation. Otherwise, by executing an SQL statement within the\nhandler, information that caused the handler\'s activation is destroyed.\nRESIGNAL also can make some procedures shorter if a given handler can\nhandle part of a situation, then pass the condition \"up the line\" to\nanother handler.\n\nNo privileges are required to execute the RESIGNAL statement.\n\nAll forms of RESIGNAL require that the current context be a condition\nhandler. Otherwise, RESIGNAL is illegal and a RESIGNAL when handler not\nactive error occurs.\n\nTo retrieve information from the diagnostics area, use the GET\nDIAGNOSTICS statement (see [HELP GET DIAGNOSTICS]). For information\nabout the diagnostics area, see\nhttps://dev.mysql.com/doc/refman/5.7/en/diagnostics-area.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/resignal.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/resignal.html'),(582,'SIGNAL',36,'Syntax:\nSIGNAL condition_value\n    [SET signal_information_item\n    [, signal_information_item] ...]\n\ncondition_value: {\n    SQLSTATE [VALUE] sqlstate_value\n  | condition_name\n}\n\nsignal_information_item:\n    condition_information_item_name = simple_value_specification\n\ncondition_information_item_name: {\n    CLASS_ORIGIN\n  | SUBCLASS_ORIGIN\n  | MESSAGE_TEXT\n  | MYSQL_ERRNO\n  | CONSTRAINT_CATALOG\n  | CONSTRAINT_SCHEMA\n  | CONSTRAINT_NAME\n  | CATALOG_NAME\n  | SCHEMA_NAME\n  | TABLE_NAME\n  | COLUMN_NAME\n  | CURSOR_NAME\n}\n\ncondition_name, simple_value_specification:\n    (see following discussion)\n\nSIGNAL is the way to \"return\" an error. SIGNAL provides error\ninformation to a handler, to an outer portion of the application, or to\nthe client. Also, it provides control over the error\'s characteristics\n(error number, SQLSTATE value, message). Without SIGNAL, it is\nnecessary to resort to workarounds such as deliberately referring to a\nnonexistent table to cause a routine to return an error.\n\nNo privileges are required to execute the SIGNAL statement.\n\nTo retrieve information from the diagnostics area, use the GET\nDIAGNOSTICS statement (see [HELP GET DIAGNOSTICS]). For information\nabout the diagnostics area, see\nhttps://dev.mysql.com/doc/refman/5.7/en/diagnostics-area.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/signal.html\n\n','CREATE PROCEDURE p (pval INT)\nBEGIN\n  DECLARE specialty CONDITION FOR SQLSTATE \'45000\';\n  IF pval = 0 THEN\n    SIGNAL SQLSTATE \'01000\';\n  ELSEIF pval = 1 THEN\n    SIGNAL SQLSTATE \'45000\'\n      SET MESSAGE_TEXT = \'An error occurred\';\n  ELSEIF pval = 2 THEN\n    SIGNAL specialty\n      SET MESSAGE_TEXT = \'An error occurred\';\n  ELSE\n    SIGNAL SQLSTATE \'01000\'\n      SET MESSAGE_TEXT = \'A warning occurred\', MYSQL_ERRNO = 1000;\n    SIGNAL SQLSTATE \'45000\'\n      SET MESSAGE_TEXT = \'An error occurred\', MYSQL_ERRNO = 1001;\n  END IF;\nEND;\n','https://dev.mysql.com/doc/refman/5.7/en/signal.html'),(583,'ALTER USER',37,'Syntax:\nALTER USER [IF EXISTS]\n    user [auth_option] [, user [auth_option]] ...\n    [REQUIRE {NONE | tls_option [[AND] tls_option] ...}]\n    [WITH resource_option [resource_option] ...]\n    [password_option | lock_option] ...\n\nALTER USER [IF EXISTS]\n    USER() IDENTIFIED BY \'auth_string\'\n\nuser:\n    (see )\n\nauth_option: {\n    IDENTIFIED BY \'auth_string\'\n  | IDENTIFIED WITH auth_plugin\n  | IDENTIFIED WITH auth_plugin BY \'auth_string\'\n  | IDENTIFIED WITH auth_plugin AS \'auth_string\'\n}\n\ntls_option: {\n   SSL\n | X509\n | CIPHER \'cipher\'\n | ISSUER \'issuer\'\n | SUBJECT \'subject\'\n}\n\nresource_option: {\n    MAX_QUERIES_PER_HOUR count\n  | MAX_UPDATES_PER_HOUR count\n  | MAX_CONNECTIONS_PER_HOUR count\n  | MAX_USER_CONNECTIONS count\n}\n\npassword_option: {\n    PASSWORD EXPIRE\n  | PASSWORD EXPIRE DEFAULT\n  | PASSWORD EXPIRE NEVER\n  | PASSWORD EXPIRE INTERVAL N DAY\n}\n\nlock_option: {\n    ACCOUNT LOCK\n  | ACCOUNT UNLOCK\n}\n\nThe ALTER USER statement modifies MySQL accounts. It enables\nauthentication, SSL/TLS, resource-limit, and password-management\nproperties to be modified for existing accounts. It can also be used to\nlock and unlock accounts.\n\nTo use ALTER USER, you must have the global CREATE USER privilege or\nthe UPDATE privilege for the mysql system database. When the read_only\nsystem variable is enabled, ALTER USER additionally requires the SUPER\nprivilege.\n\nBy default, an error occurs if you try to modify a user that does not\nexist. If the IF EXISTS clause is given, the statement produces a\nwarning for each named user that does not exist, rather than an error.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-user.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-user.html'),(584,'CREATE USER',37,'Syntax:\nCREATE USER [IF NOT EXISTS]\n    user [auth_option] [, user [auth_option]] ...\n    [REQUIRE {NONE | tls_option [[AND] tls_option] ...}]\n    [WITH resource_option [resource_option] ...]\n    [password_option | lock_option] ...\n\nuser:\n    (see )\n\nauth_option: {\n    IDENTIFIED BY \'auth_string\'\n  | IDENTIFIED WITH auth_plugin\n  | IDENTIFIED WITH auth_plugin BY \'auth_string\'\n  | IDENTIFIED WITH auth_plugin AS \'auth_string\'\n  | IDENTIFIED BY PASSWORD \'auth_string\'\n}\n\ntls_option: {\n   SSL\n | X509\n | CIPHER \'cipher\'\n | ISSUER \'issuer\'\n | SUBJECT \'subject\'\n}\n\nresource_option: {\n    MAX_QUERIES_PER_HOUR count\n  | MAX_UPDATES_PER_HOUR count\n  | MAX_CONNECTIONS_PER_HOUR count\n  | MAX_USER_CONNECTIONS count\n}\n\npassword_option: {\n    PASSWORD EXPIRE\n  | PASSWORD EXPIRE DEFAULT\n  | PASSWORD EXPIRE NEVER\n  | PASSWORD EXPIRE INTERVAL N DAY\n}\n\nlock_option: {\n    ACCOUNT LOCK\n  | ACCOUNT UNLOCK\n}\n\nThe CREATE USER statement creates new MySQL accounts. It enables\nauthentication, SSL/TLS, resource-limit, and password-management\nproperties to be established for new accounts, and controls whether\naccounts are initially locked or unlocked.\n\nTo use CREATE USER, you must have the global CREATE USER privilege, or\nthe INSERT privilege for the mysql system database. When the read_only\nsystem variable is enabled, CREATE USER additionally requires the SUPER\nprivilege.\n\nAn error occurs if you try to create an account that already exists. If\nthe IF NOT EXISTS clause is given, the statement produces a warning for\neach named account that already exists, rather than an error.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-user.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-user.html'),(585,'DROP USER',37,'Syntax:\nDROP USER [IF EXISTS] user [, user] ...\n\nThe DROP USER statement removes one or more MySQL accounts and their\nprivileges. It removes privilege rows for the account from all grant\ntables.\n\nTo use DROP USER, you must have the global CREATE USER privilege, or\nthe DELETE privilege for the mysql system database. When the read_only\nsystem variable is enabled, DROP USER additionally requires the SUPER\nprivilege.\n\nAn error occurs if you try to drop an account that does not exist. If\nthe IF EXISTS clause is given, the statement produces a warning for\neach named user that does not exist, rather than an error.\n\nEach account name uses the format described in\nhttps://dev.mysql.com/doc/refman/5.7/en/account-names.html. For\nexample:\n\nDROP USER \'jeffrey\'@\'localhost\';\n\nThe host name part of the account name, if omitted, defaults to \'%\'.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-user.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-user.html'),(586,'GRANT',37,'Syntax:\nGRANT\n    priv_type [(column_list)]\n      [, priv_type [(column_list)]] ...\n    ON [object_type] priv_level\n    TO user [auth_option] [, user [auth_option]] ...\n    [REQUIRE {NONE | tls_option [[AND] tls_option] ...}]\n    [WITH {GRANT OPTION | resource_option} ...]\n\nGRANT PROXY ON user\n    TO user [, user] ...\n    [WITH GRANT OPTION]\n\nobject_type: {\n    TABLE\n  | FUNCTION\n  | PROCEDURE\n}\n\npriv_level: {\n    *\n  | *.*\n  | db_name.*\n  | db_name.tbl_name\n  | tbl_name\n  | db_name.routine_name\n}\n\nuser:\n    (see https://dev.mysql.com/doc/refman/5.7/en/account-names.html)\n\nauth_option: {\n    IDENTIFIED BY \'auth_string\'\n  | IDENTIFIED WITH auth_plugin\n  | IDENTIFIED WITH auth_plugin BY \'auth_string\'\n  | IDENTIFIED WITH auth_plugin AS \'auth_string\'\n  | IDENTIFIED BY PASSWORD \'auth_string\'\n}\n\ntls_option: {\n    SSL\n  | X509\n  | CIPHER \'cipher\'\n  | ISSUER \'issuer\'\n  | SUBJECT \'subject\'\n}\n\nresource_option: {\n  | MAX_QUERIES_PER_HOUR count\n  | MAX_UPDATES_PER_HOUR count\n  | MAX_CONNECTIONS_PER_HOUR count\n  | MAX_USER_CONNECTIONS count\n}\n\nThe GRANT statement grants privileges to MySQL user accounts.\n\nTo use GRANT, you must have the GRANT OPTION privilege, and you must\nhave the privileges that you are granting. When the read_only system\nvariable is enabled, GRANT additionally requires the SUPER privilege.\n\nThe REVOKE statement is related to GRANT and enables administrators to\nremove account privileges. See [HELP REVOKE].\n\nEach account name uses the format described in\nhttps://dev.mysql.com/doc/refman/5.7/en/account-names.html. For\nexample:\n\nGRANT ALL ON db1.* TO \'jeffrey\'@\'localhost\';\n\nThe host name part of the account, if omitted, defaults to \'%\'.\n\nNormally, a database administrator first uses CREATE USER to create an\naccount and define its nonprivilege characteristics such as its\npassword, whether it uses secure connections, and limits on access to\nserver resources, then uses GRANT to define its privileges. ALTER USER\nmay be used to change the nonprivilege characteristics of existing\naccounts. For example:\n\nCREATE USER \'jeffrey\'@\'localhost\' IDENTIFIED BY \'password\';\nGRANT ALL ON db1.* TO \'jeffrey\'@\'localhost\';\nGRANT SELECT ON db2.invoice TO \'jeffrey\'@\'localhost\';\nALTER USER \'jeffrey\'@\'localhost\' WITH MAX_QUERIES_PER_HOUR 90;\n\n*Note*:\n\nExamples shown here include no IDENTIFIED clause. It is assumed that\nyou establish passwords with CREATE USER at account-creation time to\navoid creating insecure accounts.\n\n*Note*:\n\nIf an account named in a GRANT statement does not already exist, GRANT\nmay create it under the conditions described later in the discussion of\nthe NO_AUTO_CREATE_USER SQL mode. It is also possible to use GRANT to\nspecify nonprivilege account characteristics such as whether it uses\nsecure connections and limits on access to server resources.\n\nHowever, use of GRANT to create accounts or define nonprivilege\ncharacteristics is deprecated as of MySQL 5.7.6. Instead, perform these\ntasks using CREATE USER or ALTER USER.\n\nFrom the mysql program, GRANT responds with Query OK, 0 rows affected\nwhen executed successfully. To determine what privileges result from\nthe operation, use SHOW GRANTS. See [HELP SHOW GRANTS].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/grant.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/grant.html'),(587,'RENAME USER',37,'Syntax:\nRENAME USER old_user TO new_user\n    [, old_user TO new_user] ...\n\nThe RENAME USER statement renames existing MySQL accounts. An error\noccurs for old accounts that do not exist or new accounts that already\nexist.\n\nTo use RENAME USER, you must have the global CREATE USER privilege, or\nthe UPDATE privilege for the mysql system database. When the read_only\nsystem variable is enabled, RENAME USER additionally requires the SUPER\nprivilege.\n\nEach account name uses the format described in\nhttps://dev.mysql.com/doc/refman/5.7/en/account-names.html. For\nexample:\n\nRENAME USER \'jeffrey\'@\'localhost\' TO \'jeff\'@\'127.0.0.1\';\n\nThe host name part of the account name, if omitted, defaults to \'%\'.\n\nRENAME USER causes the privileges held by the old user to be those held\nby the new user. However, RENAME USER does not automatically drop or\ninvalidate databases or objects within them that the old user created.\nThis includes stored programs or views for which the DEFINER attribute\nnames the old user. Attempts to access such objects may produce an\nerror if they execute in definer security context. (For information\nabout security context, see\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-objects-security.html.)\n\nThe privilege changes take effect as indicated in\nhttps://dev.mysql.com/doc/refman/5.7/en/privilege-changes.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/rename-user.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/rename-user.html'),(588,'REVOKE',37,'Syntax:\nREVOKE\n    priv_type [(column_list)]\n      [, priv_type [(column_list)]] ...\n    ON [object_type] priv_level\n    FROM user [, user] ...\n\nREVOKE ALL [PRIVILEGES], GRANT OPTION\n    FROM user [, user] ...\n\nREVOKE PROXY ON user\n    FROM user [, user] ...\n\nThe REVOKE statement enables system administrators to revoke privileges\nfrom MySQL accounts.\n\nWhen the read_only system variable is enabled, REVOKE requires the\nSUPER privilege in addition to any other required privileges described\nin the following discussion.\n\nEach account name uses the format described in\nhttps://dev.mysql.com/doc/refman/5.7/en/account-names.html. For\nexample:\n\nREVOKE INSERT ON *.* FROM \'jeffrey\'@\'localhost\';\n\nThe host name part of the account name, if omitted, defaults to \'%\'.\n\nFor details on the levels at which privileges exist, the permissible\npriv_type, priv_level, and object_type values, and the syntax for\nspecifying users and passwords, see [HELP GRANT].\n\nTo use the first REVOKE syntax, you must have the GRANT OPTION\nprivilege, and you must have the privileges that you are revoking.\n\nTo revoke all privileges, use the second syntax, which drops all\nglobal, database, table, column, and routine privileges for the named\nuser or users:\n\nREVOKE ALL PRIVILEGES, GRANT OPTION FROM user [, user] ...\n\nTo use this REVOKE syntax, you must have the global CREATE USER\nprivilege, or the UPDATE privilege for the mysql system database.\n\nUser accounts from which privileges are to be revoked must exist.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/revoke.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/revoke.html'),(589,'SET PASSWORD',37,'Syntax:\nSET PASSWORD [FOR user] = password_option\n\npassword_option: {\n    \'auth_string\'\n  | PASSWORD(\'auth_string\')\n}\n\nThe SET PASSWORD statement assigns a password to a MySQL user account.\n\'auth_string\' represents a cleartext (unencrypted) password.\n\n*Note*:\n\no SET PASSWORD ... = PASSWORD(\'auth_string\') syntax is deprecated as of\n  MySQL 5.7.6 and will be removed in a future MySQL release.\n\no SET PASSWORD ... = \'auth_string\' syntax is not deprecated, but ALTER\n  USER is the preferred statement for account alterations, including\n  assigning passwords. For example:\n\nALTER USER user IDENTIFIED BY \'auth_string\';\n\n*Important*:\n\nUnder some circumstances, SET PASSWORD may be recorded in server logs\nor on the client side in a history file such as ~/.mysql_history, which\nmeans that cleartext passwords may be read by anyone having read access\nto that information. For information about the conditions under which\nthis occurs for the server logs and how to control it, see\nhttps://dev.mysql.com/doc/refman/5.7/en/password-logging.html. For\nsimilar information about client-side logging, see\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-logging.html.\n\nSET PASSWORD can be used with or without a FOR clause that explicitly\nnames a user account:\n\no With a FOR user clause, the statement sets the password for the named\n  account, which must exist:\n\nSET PASSWORD FOR \'jeffrey\'@\'localhost\' = \'auth_string\';\n\no With no FOR user clause, the statement sets the password for the\n  current user:\n\nSET PASSWORD = \'auth_string\';\n\n  Any client who connects to the server using a nonanonymous account\n  can change the password for that account. (In particular, you can\n  change your own password.) To see which account the server\n  authenticated you as, invoke the CURRENT_USER() function:\n\nSELECT CURRENT_USER();\n\nIf a FOR user clause is given, the account name uses the format\ndescribed in\nhttps://dev.mysql.com/doc/refman/5.7/en/account-names.html. For\nexample:\n\nSET PASSWORD FOR \'bob\'@\'%.example.org\' = \'auth_string\';\n\nThe host name part of the account name, if omitted, defaults to \'%\'.\n\nSetting the password for a named account (with a FOR clause) requires\nthe UPDATE privilege for the mysql system database. Setting the\npassword for yourself (for a nonanonymous account with no FOR clause)\nrequires no special privileges. When the read_only system variable is\nenabled, SET PASSWORD requires the SUPER privilege in addition to any\nother required privileges.\n\nThe password can be specified in these ways:\n\no Use a string without PASSWORD()\n\nSET PASSWORD FOR \'jeffrey\'@\'localhost\' = \'password\';\n\n  SET PASSWORD interprets the string as a cleartext string, passes it\n  to the authentication plugin associated with the account, and stores\n  the result returned by the plugin in the account row in the\n  mysql.user system table. (The plugin is given the opportunity to hash\n  the value into the encryption format it expects. The plugin may use\n  the value as specified, in which case no hashing occurs.)\n\no Use the PASSWORD() function (deprecated as of MySQL 5.7.6)\n\nSET PASSWORD FOR \'jeffrey\'@\'localhost\' = PASSWORD(\'password\');\n\n  The PASSWORD() argument is the cleartext (unencrypted) password.\n  PASSWORD() hashes the password and returns the encrypted password\n  string for storage in the account row in the mysql.user system table.\n\n  The PASSWORD() function hashes the password using the hashing method\n  determined by the value of the old_passwords system variable value.\n  Be sure that old_passwords has the value corresponding to the hashing\n  method expected by the authentication plugin associated with the\n  account. For example, if the account uses the mysql_native_password\n  plugin, the old_passwords value must be 0:\n\nSET old_passwords = 0;\nSET PASSWORD FOR \'jeffrey\'@\'localhost\' = PASSWORD(\'password\');\n\n  If the old_passwords value differs from that required by the\n  authentication plugin, the hashed password value returned by\n  PASSWORD() will not by usable by the plugin and correct\n  authentication of client connections will not occur.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-password.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-password.html'),(590,'ANALYZE TABLE',38,'Syntax:\nANALYZE [NO_WRITE_TO_BINLOG | LOCAL]\n    TABLE tbl_name [, tbl_name] ...\n\nANALYZE TABLE performs a key distribution analysis and stores the\ndistribution for the named table or tables. For MyISAM tables, this\nstatement is equivalent to using myisamchk --analyze.\n\nThis statement requires SELECT and INSERT privileges for the table.\n\nANALYZE TABLE works with InnoDB, NDB, and MyISAM tables. It does not\nwork with views.\n\nANALYZE TABLE is supported for partitioned tables, and you can use\nALTER TABLE ... ANALYZE PARTITION to analyze one or more partitions;\nfor more information, see [HELP ALTER TABLE], and\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-maintenance.html.\n\nDuring the analysis, the table is locked with a read lock for InnoDB\nand MyISAM.\n\nBy default, the server writes ANALYZE TABLE statements to the binary\nlog so that they replicate to replication slaves. To suppress logging,\nspecify the optional NO_WRITE_TO_BINLOG keyword or its alias LOCAL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/analyze-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/analyze-table.html'),(591,'CHECK TABLE',38,'Syntax:\nCHECK TABLE tbl_name [, tbl_name] ... [option] ...\n\noption: {\n    FOR UPGRADE\n  | QUICK\n  | FAST\n  | MEDIUM\n  | EXTENDED\n  | CHANGED\n}\n\nCHECK TABLE checks a table or tables for errors. For MyISAM tables, the\nkey statistics are updated as well. CHECK TABLE can also check views\nfor problems, such as tables that are referenced in the view definition\nthat no longer exist.\n\nTo check a table, you must have some privilege for it.\n\nCHECK TABLE works for InnoDB, MyISAM, ARCHIVE, and CSV tables.\n\nBefore running CHECK TABLE on InnoDB tables, see\nhttps://dev.mysql.com/doc/refman/5.7/en/check-table.html#check-table-in\nnodb.\n\nCHECK TABLE is supported for partitioned tables, and you can use ALTER\nTABLE ... CHECK PARTITION to check one or more partitions; for more\ninformation, see [HELP ALTER TABLE], and\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-maintenance.html.\n\nCHECK TABLE ignores virtual generated columns that are not indexed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/check-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/check-table.html'),(592,'CHECKSUM TABLE',38,'Syntax:\nCHECKSUM TABLE tbl_name [, tbl_name] ... [QUICK | EXTENDED]\n\nCHECKSUM TABLE reports a checksum for the contents of a table. You can\nuse this statement to verify that the contents are the same before and\nafter a backup, rollback, or other operation that is intended to put\nthe data back to a known state.\n\nThis statement requires the SELECT privilege for the table.\n\nThis statement is not supported for views. If you run CHECKSUM TABLE\nagainst a view, the Checksum value is always NULL, and a warning is\nreturned.\n\nFor a nonexistent table, CHECKSUM TABLE returns NULL and generates a\nwarning.\n\nDuring the checksum operation, the table is locked with a read lock for\nInnoDB and MyISAM.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/checksum-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/checksum-table.html'),(593,'OPTIMIZE TABLE',38,'Syntax:\nOPTIMIZE [NO_WRITE_TO_BINLOG | LOCAL]\n    TABLE tbl_name [, tbl_name] ...\n\nOPTIMIZE TABLE reorganizes the physical storage of table data and\nassociated index data, to reduce storage space and improve I/O\nefficiency when accessing the table. The exact changes made to each\ntable depend on the storage engine used by that table.\n\nUse OPTIMIZE TABLE in these cases, depending on the type of table:\n\no After doing substantial insert, update, or delete operations on an\n  InnoDB table that has its own .ibd file because it was created with\n  the innodb_file_per_table option enabled. The table and indexes are\n  reorganized, and disk space can be reclaimed for use by the operating\n  system.\n\no After doing substantial insert, update, or delete operations on\n  columns that are part of a FULLTEXT index in an InnoDB table. Set the\n  configuration option innodb_optimize_fulltext_only=1 first. To keep\n  the index maintenance period to a reasonable time, set the\n  innodb_ft_num_word_optimize option to specify how many words to\n  update in the search index, and run a sequence of OPTIMIZE TABLE\n  statements until the search index is fully updated.\n\no After deleting a large part of a MyISAM or ARCHIVE table, or making\n  many changes to a MyISAM or ARCHIVE table with variable-length rows\n  (tables that have VARCHAR, VARBINARY, BLOB, or TEXT columns). Deleted\n  rows are maintained in a linked list and subsequent INSERT operations\n  reuse old row positions. You can use OPTIMIZE TABLE to reclaim the\n  unused space and to defragment the data file. After extensive changes\n  to a table, this statement may also improve performance of statements\n  that use the table, sometimes significantly.\n\nThis statement requires SELECT and INSERT privileges for the table.\n\nOPTIMIZE TABLE works for InnoDB, MyISAM, and ARCHIVE tables. OPTIMIZE\nTABLE is also supported for dynamic columns of in-memory NDB tables. It\ndoes not work for fixed-width columns of in-memory tables, nor does it\nwork for Disk Data tables. The performance of OPTIMIZE on NDB Cluster\ntables can be tuned using --ndb-optimization-delay, which controls the\nlength of time to wait between processing batches of rows by OPTIMIZE\nTABLE. For more information, see Previous NDB Cluster Issues Resolved\nin NDB Cluster 7.3\n(https://dev.mysql.com/doc/refman/5.6/en/mysql-cluster-limitations-reso\nlved.html).\n\nFor NDB Cluster tables, OPTIMIZE TABLE can be interrupted by (for\nexample) killing the SQL thread performing the OPTIMIZE operation.\n\nBy default, OPTIMIZE TABLE does not work for tables created using any\nother storage engine and returns a result indicating this lack of\nsupport. You can make OPTIMIZE TABLE work for other storage engines by\nstarting mysqld with the --skip-new option. In this case, OPTIMIZE\nTABLE is just mapped to ALTER TABLE.\n\nThis statement does not work with views.\n\nOPTIMIZE TABLE is supported for partitioned tables. For information\nabout using this statement with partitioned tables and table\npartitions, see\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-maintenance.html.\n\nBy default, the server writes OPTIMIZE TABLE statements to the binary\nlog so that they replicate to replication slaves. To suppress logging,\nspecify the optional NO_WRITE_TO_BINLOG keyword or its alias LOCAL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/optimize-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/optimize-table.html'),(594,'REPAIR TABLE',38,'Syntax:\nREPAIR [NO_WRITE_TO_BINLOG | LOCAL]\n    TABLE tbl_name [, tbl_name] ...\n    [QUICK] [EXTENDED] [USE_FRM]\n\nREPAIR TABLE repairs a possibly corrupted table, for certain storage\nengines only.\n\nThis statement requires SELECT and INSERT privileges for the table.\n\nAlthough normally you should never have to run REPAIR TABLE, if\ndisaster strikes, this statement is very likely to get back all your\ndata from a MyISAM table. If your tables become corrupted often, try to\nfind the reason for it, to eliminate the need to use REPAIR TABLE. See\nhttps://dev.mysql.com/doc/refman/5.7/en/crashing.html, and\nhttps://dev.mysql.com/doc/refman/5.7/en/myisam-table-problems.html.\n\nREPAIR TABLE checks the table to see whether an upgrade is required. If\nso, it performs the upgrade, following the same rules as CHECK TABLE\n... FOR UPGRADE. See [HELP CHECK TABLE], for more information.\n\n*Important*:\n\no Make a backup of a table before performing a table repair operation;\n  under some circumstances the operation might cause data loss.\n  Possible causes include but are not limited to file system errors.\n  See https://dev.mysql.com/doc/refman/5.7/en/backup-and-recovery.html.\n\no If the server crashes during a REPAIR TABLE operation, it is\n  essential after restarting it that you immediately execute another\n  REPAIR TABLE statement for the table before performing any other\n  operations on it. In the worst case, you might have a new clean index\n  file without information about the data file, and then the next\n  operation you perform could overwrite the data file. This is an\n  unlikely but possible scenario that underscores the value of making a\n  backup first.\n\no In the event that a table on the master becomes corrupted and you run\n  REPAIR TABLE on it, any resulting changes to the original table are\n  not propagated to slaves.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/repair-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/repair-table.html'),(595,'CREATE FUNCTION UDF',39,'Syntax:\nCREATE [AGGREGATE] FUNCTION function_name\n    RETURNS {STRING|INTEGER|REAL|DECIMAL}\n    SONAME shared_library_name\n\nA user-defined function (UDF) is a way to extend MySQL with a new\nfunction that works like a native (built-in) MySQL function such as\nABS() or CONCAT().\n\nfunction_name is the name that should be used in SQL statements to\ninvoke the function. The RETURNS clause indicates the type of the\nfunction\'s return value. DECIMAL is a legal value after RETURNS, but\ncurrently DECIMAL functions return string values and should be written\nlike STRING functions.\n\nshared_library_name is the base name of the shared library file that\ncontains the code that implements the function. The file must be\nlocated in the plugin directory. This directory is given by the value\nof the plugin_dir system variable. For more information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/udf-loading.html.\n\nTo create a function, you must have the INSERT privilege for the mysql\nsystem database. This is necessary because CREATE FUNCTION adds a row\nto the mysql.func system table that records the function\'s name, type,\nand shared library name.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-function-udf.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-function-udf.html'),(596,'DROP FUNCTION UDF',39,'Syntax:\nDROP FUNCTION function_name\n\nThis statement drops the user-defined function (UDF) named\nfunction_name.\n\nTo drop a function, you must have the DELETE privilege for the mysql\nsystem database. This is because DROP FUNCTION removes a row from the\nmysql.func system table that records the function\'s name, type, and\nshared library name.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-function-udf.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-function-udf.html'),(597,'INSTALL PLUGIN',40,'Syntax:\nINSTALL PLUGIN plugin_name SONAME \'shared_library_name\'\n\nThis statement installs a server plugin. It requires the INSERT\nprivilege for the mysql.plugin system table.\n\nplugin_name is the name of the plugin as defined in the plugin\ndescriptor structure contained in the library file (see\nhttps://dev.mysql.com/doc/refman/5.7/en/plugin-data-structures.html).\nPlugin names are not case-sensitive. For maximal compatibility, plugin\nnames should be limited to ASCII letters, digits, and underscore\nbecause they are used in C source files, shell command lines, M4 and\nBourne shell scripts, and SQL environments.\n\nshared_library_name is the name of the shared library that contains the\nplugin code. The name includes the file name extension (for example,\nlibmyplugin.so, libmyplugin.dll, or libmyplugin.dylib).\n\nThe shared library must be located in the plugin directory (the\ndirectory named by the plugin_dir system variable). The library must be\nin the plugin directory itself, not in a subdirectory. By default,\nplugin_dir is the plugin directory under the directory named by the\npkglibdir configuration variable, but it can be changed by setting the\nvalue of plugin_dir at server startup. For example, set its value in a\nmy.cnf file:\n\n[mysqld]\nplugin_dir=/path/to/plugin/directory\n\nIf the value of plugin_dir is a relative path name, it is taken to be\nrelative to the MySQL base directory (the value of the basedir system\nvariable).\n\nINSTALL PLUGIN loads and initializes the plugin code to make the plugin\navailable for use. A plugin is initialized by executing its\ninitialization function, which handles any setup that the plugin must\nperform before it can be used. When the server shuts down, it executes\nthe deinitialization function for each plugin that is loaded so that\nthe plugin has a chance to perform any final cleanup.\n\nINSTALL PLUGIN also registers the plugin by adding a line that\nindicates the plugin name and library file name to the mysql.plugin\nsystem table. At server startup, the server loads and initializes any\nplugin that is listed in mysql.plugin. This means that a plugin is\ninstalled with INSTALL PLUGIN only once, not every time the server\nstarts. Plugin loading at startup does not occur if the server is\nstarted with the --skip-grant-tables option.\n\nA plugin library can contain multiple plugins. For each of them to be\ninstalled, use a separate INSTALL PLUGIN statement. Each statement\nnames a different plugin, but all of them specify the same library\nname.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/install-plugin.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/install-plugin.html'),(598,'UNINSTALL PLUGIN',40,'Syntax:\nUNINSTALL PLUGIN plugin_name\n\nThis statement removes an installed server plugin. It requires the\nDELETE privilege for the mysql.plugin system table. UNINSTALL PLUGIN is\nthe complement of INSTALL PLUGIN.\n\nplugin_name must be the name of some plugin that is listed in the\nmysql.plugin table. The server executes the plugin\'s deinitialization\nfunction and removes the row for the plugin from the mysql.plugin\nsystem table, so that subsequent server restarts will not load and\ninitialize the plugin. UNINSTALL PLUGIN does not remove the plugin\'s\nshared library file.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/uninstall-plugin.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/uninstall-plugin.html'),(599,'SET',3,'Syntax:\nSET variable = expr [, variable = expr] ...\n\nvariable: {\n    user_var_name\n  | param_name\n  | local_var_name\n  | {GLOBAL | @@GLOBAL.} system_var_name\n  | [SESSION | @@SESSION. | @@] system_var_name\n}\n\nSET syntax for variable assignment enables you to assign values to\ndifferent types of variables that affect the operation of the server or\nclients:\n\no User-defined variables. See\n  https://dev.mysql.com/doc/refman/5.7/en/user-variables.html.\n\no Stored procedure and function parameters, and stored program local\n  variables. See\n  https://dev.mysql.com/doc/refman/5.7/en/stored-program-variables.html\n  .\n\no System variables. See\n  https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n  System variables also can be set at server startup, as described in\n  https://dev.mysql.com/doc/refman/5.7/en/using-system-variables.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-variable.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-variable.html'),(600,'SET CHARACTER SET',3,'Syntax:\nSET {CHARACTER SET | CHARSET}\n    {\'charset_name\' | DEFAULT}\n\nThis statement maps all strings sent between the server and the current\nclient with the given mapping. SET CHARACTER SET sets three session\nsystem variables: character_set_client and character_set_results are\nset to the given character set, and character_set_connection to the\nvalue of character_set_database. See\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-connection.html.\n\ncharset_name may be quoted or unquoted.\n\nThe default character set mapping can be restored by using the value\nDEFAULT. The default depends on the server configuration.\n\nSome character sets cannot be used as the client character set.\nAttempting to use them with SET CHARACTER SET produces an error. See\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-connection.html#charset\n-connection-impermissible-client-charset.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-character-set.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-character-set.html'),(601,'SET CHARSET',3,'Syntax:\nSET {CHARACTER SET | CHARSET}\n    {\'charset_name\' | DEFAULT}\n\nThis statement maps all strings sent between the server and the current\nclient with the given mapping. SET CHARACTER SET sets three session\nsystem variables: character_set_client and character_set_results are\nset to the given character set, and character_set_connection to the\nvalue of character_set_database. See\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-connection.html.\n\ncharset_name may be quoted or unquoted.\n\nThe default character set mapping can be restored by using the value\nDEFAULT. The default depends on the server configuration.\n\nSome character sets cannot be used as the client character set.\nAttempting to use them with SET CHARACTER SET produces an error. See\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-connection.html#charset\n-connection-impermissible-client-charset.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-character-set.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-character-set.html'),(602,'SET NAMES',3,'Syntax:\nSET NAMES {\'charset_name\'\n    [COLLATE \'collation_name\'] | DEFAULT}\n\nThis statement sets the three session system variables\ncharacter_set_client, character_set_connection, and\ncharacter_set_results to the given character set. Setting\ncharacter_set_connection to charset_name also sets collation_connection\nto the default collation for charset_name. See\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-connection.html.\n\nThe optional COLLATE clause may be used to specify a collation\nexplicitly. If given, the collation must one of the permitted\ncollations for charset_name.\n\ncharset_name and collation_name may be quoted or unquoted.\n\nThe default mapping can be restored by using a value of DEFAULT. The\ndefault depends on the server configuration.\n\nSome character sets cannot be used as the client character set.\nAttempting to use them with SET NAMES produces an error. See\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-connection.html#charset\n-connection-impermissible-client-charset.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-names.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-names.html'),(603,'SHOW',3,'SHOW has many forms that provide information about databases, tables,\ncolumns, or status information about the server. This section describes\nthose following:\n\nSHOW {BINARY | MASTER} LOGS\nSHOW BINLOG EVENTS [IN \'log_name\'] [FROM pos] [LIMIT [offset,] row_count]\nSHOW CHARACTER SET [like_or_where]\nSHOW COLLATION [like_or_where]\nSHOW [FULL] COLUMNS FROM tbl_name [FROM db_name] [like_or_where]\nSHOW CREATE DATABASE db_name\nSHOW CREATE EVENT event_name\nSHOW CREATE FUNCTION func_name\nSHOW CREATE PROCEDURE proc_name\nSHOW CREATE TABLE tbl_name\nSHOW CREATE TRIGGER trigger_name\nSHOW CREATE VIEW view_name\nSHOW DATABASES [like_or_where]\nSHOW ENGINE engine_name {STATUS | MUTEX}\nSHOW [STORAGE] ENGINES\nSHOW ERRORS [LIMIT [offset,] row_count]\nSHOW EVENTS\nSHOW FUNCTION CODE func_name\nSHOW FUNCTION STATUS [like_or_where]\nSHOW GRANTS FOR user\nSHOW INDEX FROM tbl_name [FROM db_name]\nSHOW MASTER STATUS\nSHOW OPEN TABLES [FROM db_name] [like_or_where]\nSHOW PLUGINS\nSHOW PROCEDURE CODE proc_name\nSHOW PROCEDURE STATUS [like_or_where]\nSHOW PRIVILEGES\nSHOW [FULL] PROCESSLIST\nSHOW PROFILE [types] [FOR QUERY n] [OFFSET n] [LIMIT n]\nSHOW PROFILES\nSHOW RELAYLOG EVENTS [IN \'log_name\'] [FROM pos] [LIMIT [offset,] row_count]\nSHOW SLAVE HOSTS\nSHOW SLAVE STATUS [FOR CHANNEL channel]\nSHOW [GLOBAL | SESSION] STATUS [like_or_where]\nSHOW TABLE STATUS [FROM db_name] [like_or_where]\nSHOW [FULL] TABLES [FROM db_name] [like_or_where]\nSHOW TRIGGERS [FROM db_name] [like_or_where]\nSHOW [GLOBAL | SESSION] VARIABLES [like_or_where]\nSHOW WARNINGS [LIMIT [offset,] row_count]\n\nlike_or_where:\n    LIKE \'pattern\'\n  | WHERE expr\n\nIf the syntax for a given SHOW statement includes a LIKE \'pattern\'\npart, \'pattern\' is a string that can contain the SQL % and _ wildcard\ncharacters. The pattern is useful for restricting statement output to\nmatching values.\n\nSeveral SHOW statements also accept a WHERE clause that provides more\nflexibility in specifying which rows to display. See\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show.html'),(604,'SHOW BINARY LOGS',3,'Syntax:\nSHOW BINARY LOGS\nSHOW MASTER LOGS\n\nLists the binary log files on the server. This statement is used as\npart of the procedure described in [HELP PURGE BINARY LOGS], that shows\nhow to determine which logs can be purged. A user with the SUPER or\nREPLICATION CLIENT privilege may execute this statement.\n\nmysql> SHOW BINARY LOGS;\n+---------------+-----------+\n| Log_name      | File_size |\n+---------------+-----------+\n| binlog.000015 |    724935 |\n| binlog.000016 |    733481 |\n+---------------+-----------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-binary-logs.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-binary-logs.html'),(605,'SHOW MASTER LOGS',3,'Syntax:\nSHOW BINARY LOGS\nSHOW MASTER LOGS\n\nLists the binary log files on the server. This statement is used as\npart of the procedure described in [HELP PURGE BINARY LOGS], that shows\nhow to determine which logs can be purged. A user with the SUPER or\nREPLICATION CLIENT privilege may execute this statement.\n\nmysql> SHOW BINARY LOGS;\n+---------------+-----------+\n| Log_name      | File_size |\n+---------------+-----------+\n| binlog.000015 |    724935 |\n| binlog.000016 |    733481 |\n+---------------+-----------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-binary-logs.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-binary-logs.html'),(606,'SHOW BINLOG EVENTS',3,'Syntax:\nSHOW BINLOG EVENTS\n   [IN \'log_name\']\n   [FROM pos]\n   [LIMIT [offset,] row_count]\n\nShows the events in the binary log. If you do not specify \'log_name\',\nthe first binary log is displayed. SHOW BINLOG EVENTS requires the\nREPLICATION SLAVE privilege.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-binlog-events.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-binlog-events.html'),(607,'SHOW CHARACTER SET',3,'Syntax:\nSHOW CHARACTER SET\n    [LIKE \'pattern\' | WHERE expr]\n\nThe SHOW CHARACTER SET statement shows all available character sets.\nThe LIKE clause, if present, indicates which character set names to\nmatch. The WHERE clause can be given to select rows using more general\nconditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html. For\nexample:\n\nmysql> SHOW CHARACTER SET LIKE \'latin%\';\n+---------+-----------------------------+-------------------+--------+\n| Charset | Description                 | Default collation | Maxlen |\n+---------+-----------------------------+-------------------+--------+\n| latin1  | cp1252 West European        | latin1_swedish_ci |      1 |\n| latin2  | ISO 8859-2 Central European | latin2_general_ci |      1 |\n| latin5  | ISO 8859-9 Turkish          | latin5_turkish_ci |      1 |\n| latin7  | ISO 8859-13 Baltic          | latin7_general_ci |      1 |\n+---------+-----------------------------+-------------------+--------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-character-set.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-character-set.html'),(608,'SHOW COLLATION',3,'Syntax:\nSHOW COLLATION\n    [LIKE \'pattern\' | WHERE expr]\n\nThis statement lists collations supported by the server. By default,\nthe output from SHOW COLLATION includes all available collations. The\nLIKE clause, if present, indicates which collation names to match. The\nWHERE clause can be given to select rows using more general conditions,\nas discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html. For\nexample:\n\nmysql> SHOW COLLATION WHERE Charset = \'latin1\';\n+-------------------+---------+----+---------+----------+---------+\n| Collation         | Charset | Id | Default | Compiled | Sortlen |\n+-------------------+---------+----+---------+----------+---------+\n| latin1_german1_ci | latin1  |  5 |         | Yes      |       1 |\n| latin1_swedish_ci | latin1  |  8 | Yes     | Yes      |       1 |\n| latin1_danish_ci  | latin1  | 15 |         | Yes      |       1 |\n| latin1_german2_ci | latin1  | 31 |         | Yes      |       2 |\n| latin1_bin        | latin1  | 47 |         | Yes      |       1 |\n| latin1_general_ci | latin1  | 48 |         | Yes      |       1 |\n| latin1_general_cs | latin1  | 49 |         | Yes      |       1 |\n| latin1_spanish_ci | latin1  | 94 |         | Yes      |       1 |\n+-------------------+---------+----+---------+----------+---------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-collation.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-collation.html'),(609,'SHOW COLUMNS',3,'Syntax:\nSHOW [FULL] {COLUMNS | FIELDS}\n    {FROM | IN} tbl_name\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW COLUMNS displays information about the columns in a given table.\nIt also works for views. SHOW COLUMNS displays information only for\nthose columns for which you have some privilege.\n\nmysql> SHOW COLUMNS FROM City;\n+-------------+----------+------+-----+---------+----------------+\n| Field       | Type     | Null | Key | Default | Extra          |\n+-------------+----------+------+-----+---------+----------------+\n| ID          | int(11)  | NO   | PRI | NULL    | auto_increment |\n| Name        | char(35) | NO   |     |         |                |\n| CountryCode | char(3)  | NO   | MUL |         |                |\n| District    | char(20) | NO   |     |         |                |\n| Population  | int(11)  | NO   |     | 0       |                |\n+-------------+----------+------+-----+---------+----------------+\n\nAn alternative to tbl_name FROM db_name syntax is db_name.tbl_name.\nThese two statements are equivalent:\n\nSHOW COLUMNS FROM mytable FROM mydb;\nSHOW COLUMNS FROM mydb.mytable;\n\nThe optional FULL keyword causes the output to include the column\ncollation and comments, as well as the privileges you have for each\ncolumn.\n\nThe LIKE clause, if present, indicates which column names to match. The\nWHERE clause can be given to select rows using more general conditions,\nas discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nThe data types may differ from what you expect them to be based on a\nCREATE TABLE statement because MySQL sometimes changes data types when\nyou create or alter a table. The conditions under which this occurs are\ndescribed in\nhttps://dev.mysql.com/doc/refman/5.7/en/silent-column-changes.html.\n\nSHOW COLUMNS displays the following values for each table column:\n\no Field\n\n  The column name.\n\no Type\n\n  The column data type.\n\no Collation\n\n  The collation for nonbinary string columns, or NULL for other\n  columns. This value is displayed only if you use the FULL keyword.\n\no Null\n\n  The column nullability. The value is YES if NULL values can be stored\n  in the column, NO if not.\n\no Key\n\n  Whether the column is indexed:\n\n  o If Key is empty, the column either is not indexed or is indexed\n    only as a secondary column in a multiple-column, nonunique index.\n\n  o If Key is PRI, the column is a PRIMARY KEY or is one of the columns\n    in a multiple-column PRIMARY KEY.\n\n  o If Key is UNI, the column is the first column of a UNIQUE index. (A\n    UNIQUE index permits multiple NULL values, but you can tell whether\n    the column permits NULL by checking the Null field.)\n\n  o If Key is MUL, the column is the first column of a nonunique index\n    in which multiple occurrences of a given value are permitted within\n    the column.\n\n  If more than one of the Key values applies to a given column of a\n  table, Key displays the one with the highest priority, in the order\n  PRI, UNI, MUL.\n\n  A UNIQUE index may be displayed as PRI if it cannot contain NULL\n  values and there is no PRIMARY KEY in the table. A UNIQUE index may\n  display as MUL if several columns form a composite UNIQUE index;\n  although the combination of the columns is unique, each column can\n  still hold multiple occurrences of a given value.\n\no Default\n\n  The default value for the column. This is NULL if the column has an\n  explicit default of NULL, or if the column definition includes no\n  DEFAULT clause.\n\no Extra\n\n  Any additional information that is available about a given column.\n  The value is nonempty in these cases:\n\n  o auto_increment for columns that have the AUTO_INCREMENT attribute.\n\n  o on update CURRENT_TIMESTAMP for TIMESTAMP or DATETIME columns that\n    have the ON UPDATE CURRENT_TIMESTAMP attribute.\n\n  o VIRTUAL GENERATED or VIRTUAL STORED for generated columns.\n\no Privileges\n\n  The privileges you have for the column. This value is displayed only\n  if you use the FULL keyword.\n\no Comment\n\n  Any comment included in the column definition. This value is\n  displayed only if you use the FULL keyword.\n\nTable column information is also available from the INFORMATION_SCHEMA\nCOLUMNS table. See\nhttps://dev.mysql.com/doc/refman/5.7/en/columns-table.html.\n\nYou can list a table\'s columns with the mysqlshow db_name tbl_name\ncommand.\n\nThe DESCRIBE statement provides information similar to SHOW COLUMNS.\nSee https://dev.mysql.com/doc/refman/5.7/en/describe.html.\n\nThe SHOW CREATE TABLE, SHOW TABLE STATUS, and SHOW INDEX statements\nalso provide information about tables. See [HELP SHOW].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-columns.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-columns.html'),(610,'SHOW FIELDS',3,'Syntax:\nSHOW [FULL] {COLUMNS | FIELDS}\n    {FROM | IN} tbl_name\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW COLUMNS displays information about the columns in a given table.\nIt also works for views. SHOW COLUMNS displays information only for\nthose columns for which you have some privilege.\n\nmysql> SHOW COLUMNS FROM City;\n+-------------+----------+------+-----+---------+----------------+\n| Field       | Type     | Null | Key | Default | Extra          |\n+-------------+----------+------+-----+---------+----------------+\n| ID          | int(11)  | NO   | PRI | NULL    | auto_increment |\n| Name        | char(35) | NO   |     |         |                |\n| CountryCode | char(3)  | NO   | MUL |         |                |\n| District    | char(20) | NO   |     |         |                |\n| Population  | int(11)  | NO   |     | 0       |                |\n+-------------+----------+------+-----+---------+----------------+\n\nAn alternative to tbl_name FROM db_name syntax is db_name.tbl_name.\nThese two statements are equivalent:\n\nSHOW COLUMNS FROM mytable FROM mydb;\nSHOW COLUMNS FROM mydb.mytable;\n\nThe optional FULL keyword causes the output to include the column\ncollation and comments, as well as the privileges you have for each\ncolumn.\n\nThe LIKE clause, if present, indicates which column names to match. The\nWHERE clause can be given to select rows using more general conditions,\nas discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nThe data types may differ from what you expect them to be based on a\nCREATE TABLE statement because MySQL sometimes changes data types when\nyou create or alter a table. The conditions under which this occurs are\ndescribed in\nhttps://dev.mysql.com/doc/refman/5.7/en/silent-column-changes.html.\n\nSHOW COLUMNS displays the following values for each table column:\n\no Field\n\n  The column name.\n\no Type\n\n  The column data type.\n\no Collation\n\n  The collation for nonbinary string columns, or NULL for other\n  columns. This value is displayed only if you use the FULL keyword.\n\no Null\n\n  The column nullability. The value is YES if NULL values can be stored\n  in the column, NO if not.\n\no Key\n\n  Whether the column is indexed:\n\n  o If Key is empty, the column either is not indexed or is indexed\n    only as a secondary column in a multiple-column, nonunique index.\n\n  o If Key is PRI, the column is a PRIMARY KEY or is one of the columns\n    in a multiple-column PRIMARY KEY.\n\n  o If Key is UNI, the column is the first column of a UNIQUE index. (A\n    UNIQUE index permits multiple NULL values, but you can tell whether\n    the column permits NULL by checking the Null field.)\n\n  o If Key is MUL, the column is the first column of a nonunique index\n    in which multiple occurrences of a given value are permitted within\n    the column.\n\n  If more than one of the Key values applies to a given column of a\n  table, Key displays the one with the highest priority, in the order\n  PRI, UNI, MUL.\n\n  A UNIQUE index may be displayed as PRI if it cannot contain NULL\n  values and there is no PRIMARY KEY in the table. A UNIQUE index may\n  display as MUL if several columns form a composite UNIQUE index;\n  although the combination of the columns is unique, each column can\n  still hold multiple occurrences of a given value.\n\no Default\n\n  The default value for the column. This is NULL if the column has an\n  explicit default of NULL, or if the column definition includes no\n  DEFAULT clause.\n\no Extra\n\n  Any additional information that is available about a given column.\n  The value is nonempty in these cases:\n\n  o auto_increment for columns that have the AUTO_INCREMENT attribute.\n\n  o on update CURRENT_TIMESTAMP for TIMESTAMP or DATETIME columns that\n    have the ON UPDATE CURRENT_TIMESTAMP attribute.\n\n  o VIRTUAL GENERATED or VIRTUAL STORED for generated columns.\n\no Privileges\n\n  The privileges you have for the column. This value is displayed only\n  if you use the FULL keyword.\n\no Comment\n\n  Any comment included in the column definition. This value is\n  displayed only if you use the FULL keyword.\n\nTable column information is also available from the INFORMATION_SCHEMA\nCOLUMNS table. See\nhttps://dev.mysql.com/doc/refman/5.7/en/columns-table.html.\n\nYou can list a table\'s columns with the mysqlshow db_name tbl_name\ncommand.\n\nThe DESCRIBE statement provides information similar to SHOW COLUMNS.\nSee https://dev.mysql.com/doc/refman/5.7/en/describe.html.\n\nThe SHOW CREATE TABLE, SHOW TABLE STATUS, and SHOW INDEX statements\nalso provide information about tables. See [HELP SHOW].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-columns.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-columns.html'),(611,'SHOW CREATE DATABASE',3,'Syntax:\nSHOW CREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name\n\nShows the CREATE DATABASE statement that creates the named database. If\nthe SHOW statement includes an IF NOT EXISTS clause, the output too\nincludes such a clause. SHOW CREATE SCHEMA is a synonym for SHOW CREATE\nDATABASE.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-database.html\n\n','mysql> SHOW CREATE DATABASE test\\G\n*************************** 1. row ***************************\n       Database: test\nCreate Database: CREATE DATABASE `test`\n                 /*!40100 DEFAULT CHARACTER SET latin1 */\n\nmysql> SHOW CREATE SCHEMA test\\G\n*************************** 1. row ***************************\n       Database: test\nCreate Database: CREATE DATABASE `test`\n                 /*!40100 DEFAULT CHARACTER SET latin1 */\n','https://dev.mysql.com/doc/refman/5.7/en/show-create-database.html'),(612,'SHOW CREATE SCHEMA',3,'Syntax:\nSHOW CREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name\n\nShows the CREATE DATABASE statement that creates the named database. If\nthe SHOW statement includes an IF NOT EXISTS clause, the output too\nincludes such a clause. SHOW CREATE SCHEMA is a synonym for SHOW CREATE\nDATABASE.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-database.html\n\n','mysql> SHOW CREATE DATABASE test\\G\n*************************** 1. row ***************************\n       Database: test\nCreate Database: CREATE DATABASE `test`\n                 /*!40100 DEFAULT CHARACTER SET latin1 */\n\nmysql> SHOW CREATE SCHEMA test\\G\n*************************** 1. row ***************************\n       Database: test\nCreate Database: CREATE DATABASE `test`\n                 /*!40100 DEFAULT CHARACTER SET latin1 */\n','https://dev.mysql.com/doc/refman/5.7/en/show-create-database.html'),(613,'SHOW CREATE EVENT',3,'Syntax:\nSHOW CREATE EVENT event_name\n\nThis statement displays the CREATE EVENT statement needed to re-create\na given event. It requires the EVENT privilege for the database from\nwhich the event is to be shown. For example (using the same event\ne_daily defined and then altered in [HELP SHOW EVENTS]):\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-event.html\n\n','mysql> SHOW CREATE EVENT myschema.e_daily\\G\n*************************** 1. row ***************************\n               Event: e_daily\n            sql_mode: ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,\n                      NO_ZERO_IN_DATE,NO_ZERO_DATE,\n                      ERROR_FOR_DIVISION_BY_ZERO,\n                      NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\n           time_zone: SYSTEM\n        Create Event: CREATE DEFINER=`jon`@`ghidora` EVENT `e_daily`\n                        ON SCHEDULE EVERY 1 DAY\n                        STARTS CURRENT_TIMESTAMP + INTERVAL 6 HOUR\n                        ON COMPLETION NOT PRESERVE\n                        ENABLE\n                        COMMENT \'Saves total number of sessions then\n                                clears the table each day\'\n                        DO BEGIN\n                          INSERT INTO site_activity.totals (time, total)\n                            SELECT CURRENT_TIMESTAMP, COUNT(*)\n                              FROM site_activity.sessions;\n                          DELETE FROM site_activity.sessions;\n                        END\ncharacter_set_client: utf8\ncollation_connection: utf8_general_ci\n  Database Collation: latin1_swedish_ci\n','https://dev.mysql.com/doc/refman/5.7/en/show-create-event.html'),(614,'SHOW CREATE FUNCTION',3,'Syntax:\nSHOW CREATE FUNCTION func_name\n\nThis statement is similar to SHOW CREATE PROCEDURE but for stored\nfunctions. See [HELP SHOW CREATE PROCEDURE].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-function.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-create-function.html'),(615,'SHOW CREATE PROCEDURE',3,'Syntax:\nSHOW CREATE PROCEDURE proc_name\n\nThis statement is a MySQL extension. It returns the exact string that\ncan be used to re-create the named stored procedure. A similar\nstatement, SHOW CREATE FUNCTION, displays information about stored\nfunctions (see [HELP SHOW CREATE FUNCTION]).\n\nTo use either statement, you must be the user named in the routine\nDEFINER clause or have SELECT access to the mysql.proc table. If you do\nnot have privileges for the routine itself, the value displayed for the\nCreate Procedure or Create Function field will be NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-procedure.html\n\n','mysql> SHOW CREATE PROCEDURE test.simpleproc\\G\n*************************** 1. row ***************************\n           Procedure: simpleproc\n            sql_mode: ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,\n                      NO_ZERO_IN_DATE,NO_ZERO_DATE,\n                      ERROR_FOR_DIVISION_BY_ZERO,\n                      NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\n    Create Procedure: CREATE PROCEDURE `simpleproc`(OUT param1 INT)\n                      BEGIN\n                      SELECT COUNT(*) INTO param1 FROM t;\n                      END\ncharacter_set_client: utf8\ncollation_connection: utf8_general_ci\n  Database Collation: latin1_swedish_ci\n\nmysql> SHOW CREATE FUNCTION test.hello\\G\n*************************** 1. row ***************************\n            Function: hello\n            sql_mode: ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,\n                      NO_ZERO_IN_DATE,NO_ZERO_DATE,\n                      ERROR_FOR_DIVISION_BY_ZERO,\n                      NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\n     Create Function: CREATE FUNCTION `hello`(s CHAR(20))\n                      RETURNS char(50) CHARSET latin1\n                      RETURN CONCAT(\'Hello, \',s,\'!\')\ncharacter_set_client: utf8\ncollation_connection: utf8_general_ci\n  Database Collation: latin1_swedish_ci\n','https://dev.mysql.com/doc/refman/5.7/en/show-create-procedure.html'),(616,'SHOW CREATE TABLE',3,'Syntax:\nSHOW CREATE TABLE tbl_name\n\nShows the CREATE TABLE statement that creates the named table. To use\nthis statement, you must have some privilege for the table. This\nstatement also works with views.\n\nSHOW CREATE TABLE quotes table and column names according to the value\nof the sql_quote_show_create option. See\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nFor information about how CREATE TABLE statements are stored by MySQL,\nsee\nhttps://dev.mysql.com/doc/refman/5.7/en/create-table-statement-retentio\nn.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-table.html\n\n','mysql> SHOW CREATE TABLE t\\G\n*************************** 1. row ***************************\n       Table: t\nCreate Table: CREATE TABLE `t` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `s` char(60) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\n','https://dev.mysql.com/doc/refman/5.7/en/show-create-table.html'),(617,'SHOW CREATE TRIGGER',3,'Syntax:\nSHOW CREATE TRIGGER trigger_name\n\nThis statement shows the CREATE TRIGGER statement that creates the\nnamed trigger. This statement requires the TRIGGER privilege for the\ntable associated with the trigger.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-trigger.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-create-trigger.html'),(618,'SHOW CREATE USER',3,'Syntax:\nSHOW CREATE USER user\n\nThis statement shows the CREATE USER statement that creates the named\nuser. An error occurs if the user does not exist. The statement\nrequires the SELECT privilege for the mysql system database, except to\ndisplay information for the current user.\n\nTo name the account, use the format described in\nhttps://dev.mysql.com/doc/refman/5.7/en/account-names.html. The host\nname part of the account name, if omitted, defaults to \'%\'. It is also\npossible to specify CURRENT_USER or CURRENT_USER() to refer to the\naccount associated with the current session.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-user.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-create-user.html'),(619,'SHOW CREATE VIEW',3,'Syntax:\nSHOW CREATE VIEW view_name\n\nThis statement shows the CREATE VIEW statement that creates the named\nview.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-view.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-create-view.html'),(620,'SHOW DATABASES',3,'Syntax:\nSHOW {DATABASES | SCHEMAS}\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW DATABASES lists the databases on the MySQL server host. SHOW\nSCHEMAS is a synonym for SHOW DATABASES. The LIKE clause, if present,\nindicates which database names to match. The WHERE clause can be given\nto select rows using more general conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nYou see only those databases for which you have some kind of privilege,\nunless you have the global SHOW DATABASES privilege. You can also get\nthis list using the mysqlshow command.\n\nIf the server was started with the --skip-show-database option, you\ncannot use this statement at all unless you have the SHOW DATABASES\nprivilege.\n\nMySQL implements databases as directories in the data directory, so\nthis statement simply lists directories in that location. However, the\noutput may include names of directories that do not correspond to\nactual databases.\n\nDatabase information is also available from the INFORMATION_SCHEMA\nSCHEMATA table. See\nhttps://dev.mysql.com/doc/refman/5.7/en/schemata-table.html.\n\n*Caution*:\n\nBecause a global privilege is considered a privilege for all databases,\nany global privilege enables a user to see all database names with SHOW\nDATABASES or by examining the INFORMATION_SCHEMA SCHEMATA table.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-databases.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-databases.html'),(621,'SHOW SCHEMAS',3,'Syntax:\nSHOW {DATABASES | SCHEMAS}\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW DATABASES lists the databases on the MySQL server host. SHOW\nSCHEMAS is a synonym for SHOW DATABASES. The LIKE clause, if present,\nindicates which database names to match. The WHERE clause can be given\nto select rows using more general conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nYou see only those databases for which you have some kind of privilege,\nunless you have the global SHOW DATABASES privilege. You can also get\nthis list using the mysqlshow command.\n\nIf the server was started with the --skip-show-database option, you\ncannot use this statement at all unless you have the SHOW DATABASES\nprivilege.\n\nMySQL implements databases as directories in the data directory, so\nthis statement simply lists directories in that location. However, the\noutput may include names of directories that do not correspond to\nactual databases.\n\nDatabase information is also available from the INFORMATION_SCHEMA\nSCHEMATA table. See\nhttps://dev.mysql.com/doc/refman/5.7/en/schemata-table.html.\n\n*Caution*:\n\nBecause a global privilege is considered a privilege for all databases,\nany global privilege enables a user to see all database names with SHOW\nDATABASES or by examining the INFORMATION_SCHEMA SCHEMATA table.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-databases.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-databases.html'),(622,'SHOW ENGINE',3,'Syntax:\nSHOW ENGINE engine_name {STATUS | MUTEX}\n\nSHOW ENGINE displays operational information about a storage engine. It\nrequires the PROCESS privilege. The statement has these variants:\n\nSHOW ENGINE INNODB STATUS\nSHOW ENGINE INNODB MUTEX\nSHOW ENGINE PERFORMANCE_SCHEMA STATUS\n\nSHOW ENGINE INNODB STATUS displays extensive information from the\nstandard InnoDB Monitor about the state of the InnoDB storage engine.\nFor information about the standard monitor and other InnoDB Monitors\nthat provide information about InnoDB processing, see\nhttps://dev.mysql.com/doc/refman/5.7/en/innodb-monitors.html.\n\nSHOW ENGINE INNODB MUTEX displays InnoDB mutex and rw-lock statistics.\n\n*Note*:\n\nInnoDB mutexes and rwlocks can also be monitored using Performance\nSchema tables. See\nhttps://dev.mysql.com/doc/refman/5.7/en/monitor-innodb-mutex-waits-perf\normance-schema.html.\n\nSHOW ENGINE INNODB MUTEX output was removed in MySQL 5.7.2. It was\nrevised and reintroduced in MySQL 5.7.8.\n\nIn MySQL 5.7.8, mutex statistics collection is configured dynamically\nusing the following options:\n\no To enable the collection of mutex statistics, run:\n\nSET GLOBAL innodb_monitor_enable=\'latch\';\n\no To reset mutex statistics, run:\n\nSET GLOBAL innodb_monitor_reset=\'latch\';\n\no To disable the collection of mutex statistics, run:\n\nSET GLOBAL innodb_monitor_disable=\'latch\';\n\nCollection of mutex statistics for SHOW ENGINE INNODB MUTEX can also be\nenabled by setting innodb_monitor_enable=\'all\', or disabled by setting\ninnodb_monitor_disable=\'all\'.\n\nSHOW ENGINE INNODB MUTEX output has these columns:\n\no Type\n\n  Always InnoDB.\n\no Name\n\n  Prior to MySQL 5.7.8, the Name field reports the source file where\n  the mutex is implemented, and the line number in the file where the\n  mutex is created. The line number is specific to your version of\n  MySQL. As of MySQL 5.7.8, only the mutex name is reported. File name\n  and line number are still reported for rwlocks.\n\no Status\n\n  The mutex status.\n\n  Prior to MySQL 5.7.8, the Status field displays several values if\n  WITH_DEBUG was defined at MySQL compilation time. If WITH_DEBUG was\n  not defined, the statement displays only the os_waits value. In the\n  latter case (without WITH_DEBUG), the information on which the output\n  is based is insufficient to distinguish regular mutexes and mutexes\n  that protect rwlocks (which permit multiple readers or a single\n  writer). Consequently, the output may appear to contain multiple rows\n  for the same mutex. Pre-MySQL 5.7.8 Status field values include:\n\n  o count indicates how many times the mutex was requested.\n\n  o spin_waits indicates how many times the spinlock had to run.\n\n  o spin_rounds indicates the number of spinlock rounds. (spin_rounds\n    divided by spin_waits provides the average round count.)\n\n  o os_waits indicates the number of operating system waits. This\n    occurs when the spinlock did not work (the mutex was not locked\n    during the spinlock and it was necessary to yield to the operating\n    system and wait).\n\n  o os_yields indicates the number of times a thread trying to lock a\n    mutex gave up its timeslice and yielded to the operating system (on\n    the presumption that permitting other threads to run will free the\n    mutex so that it can be locked).\n\n  o os_wait_times indicates the amount of time (in ms) spent in\n    operating system waits. In MySQL 5.7 timing is disabled and this\n    value is always 0.\n\n  As of MySQL 5.7.8, the Status field reports the number of spins,\n  waits, and calls. Statistics for low-level operating system mutexes,\n  which are implemented outside of InnoDB, are not reported.\n\n  o spins indicates the number of spins.\n\n  o waits indicates the number of mutex waits.\n\n  o calls indicates how many times the mutex was requested.\n\nSHOW ENGINE INNODB MUTEX skips the mutexes and rw-locks of buffer pool\nblocks, as the amount of output can be overwhelming on systems with a\nlarge buffer pool. (There is one mutex and one rw-lock in each 16K\nbuffer pool block, and there are 65,536 blocks per gigabyte.) SHOW\nENGINE INNODB MUTEX also does not list any mutexes or rw-locks that\nhave never been waited on (os_waits=0). Thus, SHOW ENGINE INNODB MUTEX\nonly displays information about mutexes and rw-locks outside of the\nbuffer pool that have caused at least one OS-level wait.\n\nUse SHOW ENGINE PERFORMANCE_SCHEMA STATUS to inspect the internal\noperation of the Performance Schema code:\n\nmysql> SHOW ENGINE PERFORMANCE_SCHEMA STATUS\\G\n...\n*************************** 3. row ***************************\n  Type: performance_schema\n  Name: events_waits_history.size\nStatus: 76\n*************************** 4. row ***************************\n  Type: performance_schema\n  Name: events_waits_history.count\nStatus: 10000\n*************************** 5. row ***************************\n  Type: performance_schema\n  Name: events_waits_history.memory\nStatus: 760000\n...\n*************************** 57. row ***************************\n  Type: performance_schema\n  Name: performance_schema.memory\nStatus: 26459600\n...\n\nThis statement is intended to help the DBA understand the effects that\ndifferent Performance Schema options have on memory requirements.\n\nName values consist of two parts, which name an internal buffer and a\nbuffer attribute, respectively. Interpret buffer names as follows:\n\no An internal buffer that is not exposed as a table is named within\n  parentheses. Examples: (pfs_cond_class).size,\n  (pfs_mutex_class).memory.\n\no An internal buffer that is exposed as a table in the\n  performance_schema database is named after the table, without\n  parentheses. Examples: events_waits_history.size,\n  mutex_instances.count.\n\no A value that applies to the Performance Schema as a whole begins with\n  performance_schema. Example: performance_schema.memory.\n\nBuffer attributes have these meanings:\n\no size is the size of the internal record used by the implementation,\n  such as the size of a row in a table. size values cannot be changed.\n\no count is the number of internal records, such as the number of rows\n  in a table. count values can be changed using Performance Schema\n  configuration options.\n\no For a table, tbl_name.memory is the product of size and count. For\n  the Performance Schema as a whole, performance_schema.memory is the\n  sum of all the memory used (the sum of all other memory values).\n\nIn some cases, there is a direct relationship between a Performance\nSchema configuration parameter and a SHOW ENGINE value. For example,\nevents_waits_history_long.count corresponds to\nperformance_schema_events_waits_history_long_size. In other cases, the\nrelationship is more complex. For example, events_waits_history.count\ncorresponds to performance_schema_events_waits_history_size (the number\nof rows per thread) multiplied by\nperformance_schema_max_thread_instances ( the number of threads).\n\nSHOW ENGINE NDB STATUS If the server has the NDB storage engine\nenabled, SHOW ENGINE NDB STATUS displays cluster status information\nsuch as the number of connected data nodes, the cluster connectstring,\nand cluster binary log epochs, as well as counts of various Cluster API\nobjects created by the MySQL Server when connected to the cluster.\nSample output from this statement is shown here:\n\nmysql> SHOW ENGINE NDB STATUS;\n+------------+-----------------------+--------------------------------------------------+\n| Type       | Name                  | Status                                           |\n+------------+-----------------------+--------------------------------------------------+\n| ndbcluster | connection            | cluster_node_id=7,\n  connected_host=198.51.100.103, connected_port=1186, number_of_data_nodes=4,\n  number_of_ready_data_nodes=3, connect_count=0                                         |\n| ndbcluster | NdbTransaction        | created=6, free=0, sizeof=212                    |\n| ndbcluster | NdbOperation          | created=8, free=8, sizeof=660                    |\n| ndbcluster | NdbIndexScanOperation | created=1, free=1, sizeof=744                    |\n| ndbcluster | NdbIndexOperation     | created=0, free=0, sizeof=664                    |\n| ndbcluster | NdbRecAttr            | created=1285, free=1285, sizeof=60               |\n| ndbcluster | NdbApiSignal          | created=16, free=16, sizeof=136                  |\n| ndbcluster | NdbLabel              | created=0, free=0, sizeof=196                    |\n| ndbcluster | NdbBranch             | created=0, free=0, sizeof=24                     |\n| ndbcluster | NdbSubroutine         | created=0, free=0, sizeof=68                     |\n| ndbcluster | NdbCall               | created=0, free=0, sizeof=16                     |\n| ndbcluster | NdbBlob               | created=1, free=1, sizeof=264                    |\n| ndbcluster | NdbReceiver           | created=4, free=0, sizeof=68                     |\n| ndbcluster | binlog                | latest_epoch=155467, latest_trans_epoch=148126,\n  latest_received_binlog_epoch=0, latest_handled_binlog_epoch=0,\n  latest_applied_binlog_epoch=0                                                         |\n+------------+-----------------------+--------------------------------------------------+\n\nThe Status column in each of these rows provides information about the\nMySQL server\'s connection to the cluster and about the cluster binary\nlog\'s status, respectively. The Status information is in the form of\ncomma-delimited set of name/value pairs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-engine.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-engine.html'),(623,'SHOW ENGINES',3,'Syntax:\nSHOW [STORAGE] ENGINES\n\nSHOW ENGINES displays status information about the server\'s storage\nengines. This is particularly useful for checking whether a storage\nengine is supported, or to see what the default engine is.\n\nFor information about MySQL storage engines, see\nhttps://dev.mysql.com/doc/refman/5.7/en/innodb-storage-engine.html, and\nhttps://dev.mysql.com/doc/refman/5.7/en/storage-engines.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-engines.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-engines.html'),(624,'SHOW ERRORS',3,'Syntax:\nSHOW ERRORS [LIMIT [offset,] row_count]\nSHOW COUNT(*) ERRORS\n\nSHOW ERRORS is a diagnostic statement that is similar to SHOW WARNINGS,\nexcept that it displays information only for errors, rather than for\nerrors, warnings, and notes.\n\nThe LIMIT clause has the same syntax as for the SELECT statement. See\nhttps://dev.mysql.com/doc/refman/5.7/en/select.html.\n\nThe SHOW COUNT(*) ERRORS statement displays the number of errors. You\ncan also retrieve this number from the error_count variable:\n\nSHOW COUNT(*) ERRORS;\nSELECT @@error_count;\n\nSHOW ERRORS and error_count apply only to errors, not warnings or\nnotes. In other respects, they are similar to SHOW WARNINGS and\nwarning_count. In particular, SHOW ERRORS cannot display information\nfor more than max_error_count messages, and error_count can exceed the\nvalue of max_error_count if the number of errors exceeds\nmax_error_count.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-errors.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-errors.html'),(625,'SHOW EVENTS',3,'Syntax:\nSHOW EVENTS\n    [{FROM | IN} schema_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nThis statement displays information about Event Manager events, which\nare discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/event-scheduler.html. It\nrequires the EVENT privilege for the database from which the events are\nto be shown.\n\nIn its simplest form, SHOW EVENTS lists all of the events in the\ncurrent schema:\n\nmysql> SELECT CURRENT_USER(), SCHEMA();\n+----------------+----------+\n| CURRENT_USER() | SCHEMA() |\n+----------------+----------+\n| jon@ghidora    | myschema |\n+----------------+----------+\n1 row in set (0.00 sec)\n\nmysql> SHOW EVENTS\\G\n*************************** 1. row ***************************\n                  Db: myschema\n                Name: e_daily\n             Definer: jon@ghidora\n           Time zone: SYSTEM\n                Type: RECURRING\n          Execute at: NULL\n      Interval value: 1\n      Interval field: DAY\n              Starts: 2018-08-08 11:06:34\n                Ends: NULL\n              Status: ENABLED\n          Originator: 1\ncharacter_set_client: utf8\ncollation_connection: utf8_general_ci\n  Database Collation: latin1_swedish_ci\n\nTo see events for a specific schema, use the FROM clause. For example,\nto see events for the test schema, use the following statement:\n\nSHOW EVENTS FROM test;\n\nThe LIKE clause, if present, indicates which event names to match. The\nWHERE clause can be given to select rows using more general conditions,\nas discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-events.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-events.html'),(626,'SHOW FUNCTION CODE',3,'Syntax:\nSHOW FUNCTION CODE func_name\n\nThis statement is similar to SHOW PROCEDURE CODE but for stored\nfunctions. See [HELP SHOW PROCEDURE CODE].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-function-code.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-function-code.html'),(627,'SHOW FUNCTION STATUS',3,'Syntax:\nSHOW FUNCTION STATUS\n    [LIKE \'pattern\' | WHERE expr]\n\nThis statement is similar to SHOW PROCEDURE STATUS but for stored\nfunctions. See [HELP SHOW PROCEDURE STATUS].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-function-status.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-function-status.html'),(628,'SHOW GRANTS',3,'Syntax:\nSHOW GRANTS [FOR user]\n\nThis statement displays the privileges that are assigned to a MySQL\nuser account, in the form of GRANT statements that must be executed to\nduplicate the privilege assignments.\n\n*Note*:\n\nTo display nonprivilege information for MySQL accounts, use the SHOW\nCREATE USER statement. See [HELP SHOW CREATE USER].\n\nSHOW GRANTS requires the SELECT privilege for the mysql system\ndatabase, except to display privileges for the current user.\n\nTo name the account for SHOW GRANTS, use the same format as for the\nGRANT statement (for example, \'jeffrey\'@\'localhost\'):\n\nmysql> SHOW GRANTS FOR \'jeffrey\'@\'localhost\';\n+------------------------------------------------------------------+\n| Grants for jeffrey@localhost                                     |\n+------------------------------------------------------------------+\n| GRANT USAGE ON *.* TO `jeffrey`@`localhost`                      |\n| GRANT SELECT, INSERT, UPDATE ON `db1`.* TO `jeffrey`@`localhost` |\n+------------------------------------------------------------------+\n\nThe host part, if omitted, defaults to \'%\'. For additional information\nabout specifying account names, see\nhttps://dev.mysql.com/doc/refman/5.7/en/account-names.html.\n\nTo display the privileges granted to the current user (the account you\nare using to connect to the server), you can use any of the following\nstatements:\n\nSHOW GRANTS;\nSHOW GRANTS FOR CURRENT_USER;\nSHOW GRANTS FOR CURRENT_USER();\n\nIf SHOW GRANTS FOR CURRENT_USER (or any of the equivalent syntaxes) is\nused in definer context, such as within a stored procedure that\nexecutes with definer rather than invoker privileges, the grants\ndisplayed are those of the definer and not the invoker.\n\nSHOW GRANTS does not display privileges that are available to the named\naccount but are granted to a different account. For example, if an\nanonymous account exists, the named account might be able to use its\nprivileges, but SHOW GRANTS does not display them.\n\nSHOW GRANTS output does not include IDENTIFIED BY PASSWORD clauses. Use\nthe SHOW CREATE USER statement instead. See [HELP SHOW CREATE USER].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-grants.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-grants.html'),(629,'SHOW INDEX',3,'Syntax:\nSHOW {INDEX | INDEXES | KEYS}\n    {FROM | IN} tbl_name\n    [{FROM | IN} db_name]\n    [WHERE expr]\n\nSHOW INDEX returns table index information. The format resembles that\nof the SQLStatistics call in ODBC. This statement requires some\nprivilege for any column in the table.\n\nmysql> SHOW INDEX FROM City\\G\n*************************** 1. row ***************************\n        Table: city\n   Non_unique: 0\n     Key_name: PRIMARY\n Seq_in_index: 1\n  Column_name: ID\n    Collation: A\n  Cardinality: 4188\n     Sub_part: NULL\n       Packed: NULL\n         Null:\n   Index_type: BTREE\n      Comment:\nIndex_comment:\n*************************** 2. row ***************************\n        Table: city\n   Non_unique: 1\n     Key_name: CountryCode\n Seq_in_index: 1\n  Column_name: CountryCode\n    Collation: A\n  Cardinality: 232\n     Sub_part: NULL\n       Packed: NULL\n         Null:\n   Index_type: BTREE\n      Comment:\nIndex_comment:\n\nAn alternative to tbl_name FROM db_name syntax is db_name.tbl_name.\nThese two statements are equivalent:\n\nSHOW INDEX FROM mytable FROM mydb;\nSHOW INDEX FROM mydb.mytable;\n\nThe WHERE clause can be given to select rows using more general\nconditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nSHOW INDEX returns the following fields:\n\no Table\n\n  The name of the table.\n\no Non_unique\n\n  0 if the index cannot contain duplicates, 1 if it can.\n\no Key_name\n\n  The name of the index. If the index is the primary key, the name is\n  always PRIMARY.\n\no Seq_in_index\n\n  The column sequence number in the index, starting with 1.\n\no Column_name\n\n  The name of the column.\n\no Collation\n\n  How the column is sorted in the index. This can have values A\n  (ascending) or NULL (not sorted).\n\no Cardinality\n\n  An estimate of the number of unique values in the index. To update\n  this number, run ANALYZE TABLE or (for MyISAM tables) myisamchk -a.\n\n  Cardinality is counted based on statistics stored as integers, so the\n  value is not necessarily exact even for small tables. The higher the\n  cardinality, the greater the chance that MySQL uses the index when\n  doing joins.\n\no Sub_part\n\n  The index prefix. That is, the number of indexed characters if the\n  column is only partly indexed, NULL if the entire column is indexed.\n\n  *Note*:\n\n  Prefix limits are measured in bytes. However, prefix lengths for\n  index specifications in CREATE TABLE, ALTER TABLE, and CREATE INDEX\n  statements are interpreted as number of characters for nonbinary\n  string types (CHAR, VARCHAR, TEXT) and number of bytes for binary\n  string types (BINARY, VARBINARY, BLOB). Take this into account when\n  specifying a prefix length for a nonbinary string column that uses a\n  multibyte character set.\n\n  For additional information about index prefixes, see\n  https://dev.mysql.com/doc/refman/5.7/en/column-indexes.html, and\n  [HELP CREATE INDEX].\n\no Packed\n\n  Indicates how the key is packed. NULL if it is not.\n\no Null\n\n  Contains YES if the column may contain NULL values and \'\' if not.\n\no Index_type\n\n  The index method used (BTREE, FULLTEXT, HASH, RTREE).\n\no Comment\n\n  Information about the index not described in its own column, such as\n  disabled if the index is disabled.\n\no Index_comment\n\n  Any comment provided for the index with a COMMENT attribute when the\n  index was created.\n\nInformation about table indexes is also available from the\nINFORMATION_SCHEMA STATISTICS table. See\nhttps://dev.mysql.com/doc/refman/5.7/en/statistics-table.html.\n\nYou can list a table\'s indexes with the mysqlshow -k db_name tbl_name\ncommand.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-index.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-index.html'),(630,'SHOW MASTER STATUS',3,'Syntax:\nSHOW MASTER STATUS\n\nThis statement provides status information about the binary log files\nof the master. It requires either the SUPER or REPLICATION CLIENT\nprivilege.\n\nExample:\n\nmysql> SHOW MASTER STATUS\\G\n*************************** 1. row ***************************\n             File: master-bin.000002\n         Position: 1307\n     Binlog_Do_DB: test\n Binlog_Ignore_DB: manual, mysql\nExecuted_Gtid_Set: 3E11FA47-71CA-11E1-9E33-C80AA9429562:1-5\n1 row in set (0.00 sec)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-master-status.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-master-status.html'),(631,'SHOW OPEN TABLES',3,'Syntax:\nSHOW OPEN TABLES\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW OPEN TABLES lists the non-TEMPORARY tables that are currently open\nin the table cache. See\nhttps://dev.mysql.com/doc/refman/5.7/en/table-cache.html. The FROM\nclause, if present, restricts the tables shown to those present in the\ndb_name database. The LIKE clause, if present, indicates which table\nnames to match. The WHERE clause can be given to select rows using more\ngeneral conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-open-tables.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-open-tables.html'),(632,'SHOW PLUGINS',3,'Syntax:\nSHOW PLUGINS\n\nSHOW PLUGINS displays information about server plugins.\n\nExample of SHOW PLUGINS output:\n\nmysql> SHOW PLUGINS\\G\n*************************** 1. row ***************************\n   Name: binlog\n Status: ACTIVE\n   Type: STORAGE ENGINE\nLibrary: NULL\nLicense: GPL\n*************************** 2. row ***************************\n   Name: CSV\n Status: ACTIVE\n   Type: STORAGE ENGINE\nLibrary: NULL\nLicense: GPL\n*************************** 3. row ***************************\n   Name: MEMORY\n Status: ACTIVE\n   Type: STORAGE ENGINE\nLibrary: NULL\nLicense: GPL\n*************************** 4. row ***************************\n   Name: MyISAM\n Status: ACTIVE\n   Type: STORAGE ENGINE\nLibrary: NULL\nLicense: GPL\n...\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-plugins.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-plugins.html'),(633,'SHOW PRIVILEGES',3,'Syntax:\nSHOW PRIVILEGES\n\nSHOW PRIVILEGES shows the list of system privileges that the MySQL\nserver supports. The exact list of privileges depends on the version of\nyour server.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-privileges.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-privileges.html'),(634,'SHOW PROCEDURE CODE',3,'Syntax:\nSHOW PROCEDURE CODE proc_name\n\nThis statement is a MySQL extension that is available only for servers\nthat have been built with debugging support. It displays a\nrepresentation of the internal implementation of the named stored\nprocedure. A similar statement, SHOW FUNCTION CODE, displays\ninformation about stored functions (see [HELP SHOW FUNCTION CODE]).\n\nTo use either statement, you must be the owner of the routine or have\nSELECT access to the mysql.proc table.\n\nIf the named routine is available, each statement produces a result\nset. Each row in the result set corresponds to one \"instruction\" in the\nroutine. The first column is Pos, which is an ordinal number beginning\nwith 0. The second column is Instruction, which contains an SQL\nstatement (usually changed from the original source), or a directive\nwhich has meaning only to the stored-routine handler.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-procedure-code.html\n\n','mysql> DELIMITER //\nmysql> CREATE PROCEDURE p1 ()\n    -> BEGIN\n    ->   DECLARE fanta INT DEFAULT 55;\n    ->   DROP TABLE t2;\n    ->   LOOP\n    ->     INSERT INTO t3 VALUES (fanta);\n    ->     END LOOP;\n    ->   END//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SHOW PROCEDURE CODE p1//\n+-----+----------------------------------------+\n| Pos | Instruction                            |\n+-----+----------------------------------------+\n|   0 | set fanta@0 55                         |\n|   1 | stmt 9 \"DROP TABLE t2\"                 |\n|   2 | stmt 5 \"INSERT INTO t3 VALUES (fanta)\" |\n|   3 | jump 2                                 |\n+-----+----------------------------------------+\n4 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/show-procedure-code.html'),(635,'SHOW PROCEDURE STATUS',3,'Syntax:\nSHOW PROCEDURE STATUS\n    [LIKE \'pattern\' | WHERE expr]\n\nThis statement is a MySQL extension. It returns characteristics of a\nstored procedure, such as the database, name, type, creator, creation\nand modification dates, and character set information. A similar\nstatement, SHOW FUNCTION STATUS, displays information about stored\nfunctions (see [HELP SHOW FUNCTION STATUS]).\n\nThe LIKE clause, if present, indicates which procedure or function\nnames to match. The WHERE clause can be given to select rows using more\ngeneral conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-procedure-status.html\n\n','mysql> SHOW PROCEDURE STATUS LIKE \'sp1\'\\G\n*************************** 1. row ***************************\n                  Db: test\n                Name: sp1\n                Type: PROCEDURE\n             Definer: testuser@localhost\n            Modified: 2018-08-08 13:54:11\n             Created: 2018-08-08 13:54:11\n       Security_type: DEFINER\n             Comment:\ncharacter_set_client: utf8\ncollation_connection: utf8_general_ci\n  Database Collation: latin1_swedish_ci\n','https://dev.mysql.com/doc/refman/5.7/en/show-procedure-status.html'),(636,'SHOW PROCESSLIST',3,'Syntax:\nSHOW [FULL] PROCESSLIST\n\nSHOW PROCESSLIST shows which threads are running. If you have the\nPROCESS privilege, you can see all threads. Otherwise, you can see only\nyour own threads (that is, threads associated with the MySQL account\nthat you are using). If you do not use the FULL keyword, only the first\n100 characters of each statement are shown in the Info field.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-processlist.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-processlist.html'),(637,'SHOW PROFILE',3,'Syntax:\nSHOW PROFILE [type [, type] ... ]\n    [FOR QUERY n]\n    [LIMIT row_count [OFFSET offset]]\n\ntype: {\n    ALL\n  | BLOCK IO\n  | CONTEXT SWITCHES\n  | CPU\n  | IPC\n  | MEMORY\n  | PAGE FAULTS\n  | SOURCE\n  | SWAPS\n}\n\nThe SHOW PROFILE and SHOW PROFILES statements display profiling\ninformation that indicates resource usage for statements executed\nduring the course of the current session.\n\n*Note*:\n\nThe SHOW PROFILE and SHOW PROFILES statements are deprecated and will\nbe removed in a future MySQL release. Use the Performance Schema\ninstead; see\nhttps://dev.mysql.com/doc/refman/5.7/en/performance-schema-query-profil\ning.html.\n\nTo control profiling, use the profiling session variable, which has a\ndefault value of 0 (OFF). Enable profiling by setting profiling to 1 or\nON:\n\nmysql> SET profiling = 1;\n\nSHOW PROFILES displays a list of the most recent statements sent to the\nserver. The size of the list is controlled by the\nprofiling_history_size session variable, which has a default value of\n15. The maximum value is 100. Setting the value to 0 has the practical\neffect of disabling profiling.\n\nAll statements are profiled except SHOW PROFILE and SHOW PROFILES, so\nyou will find neither of those statements in the profile list.\nMalformed statements are profiled. For example, SHOW PROFILING is an\nillegal statement, and a syntax error occurs if you try to execute it,\nbut it will show up in the profiling list.\n\nSHOW PROFILE displays detailed information about a single statement.\nWithout the FOR QUERY n clause, the output pertains to the most\nrecently executed statement. If FOR QUERY n is included, SHOW PROFILE\ndisplays information for statement n. The values of n correspond to the\nQuery_ID values displayed by SHOW PROFILES.\n\nThe LIMIT row_count clause may be given to limit the output to\nrow_count rows. If LIMIT is given, OFFSET offset may be added to begin\nthe output offset rows into the full set of rows.\n\nBy default, SHOW PROFILE displays Status and Duration columns. The\nStatus values are like the State values displayed by SHOW PROCESSLIST,\nalthough there might be some minor differences in interpretion for the\ntwo statements for some status values (see\nhttps://dev.mysql.com/doc/refman/5.7/en/thread-information.html).\n\nOptional type values may be specified to display specific additional\ntypes of information:\n\no ALL displays all information\n\no BLOCK IO displays counts for block input and output operations\n\no CONTEXT SWITCHES displays counts for voluntary and involuntary\n  context switches\n\no CPU displays user and system CPU usage times\n\no IPC displays counts for messages sent and received\n\no MEMORY is not currently implemented\n\no PAGE FAULTS displays counts for major and minor page faults\n\no SOURCE displays the names of functions from the source code, together\n  with the name and line number of the file in which the function\n  occurs\n\no SWAPS displays swap counts\n\nProfiling is enabled per session. When a session ends, its profiling\ninformation is lost.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-profile.html\n\n','mysql> SELECT @@profiling;\n+-------------+\n| @@profiling |\n+-------------+\n|           0 |\n+-------------+\n1 row in set (0.00 sec)\n\nmysql> SET profiling = 1;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> DROP TABLE IF EXISTS t1;\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql> CREATE TABLE T1 (id INT);\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> SHOW PROFILES;\n+----------+----------+--------------------------+\n| Query_ID | Duration | Query                    |\n+----------+----------+--------------------------+\n|        0 | 0.000088 | SET PROFILING = 1        |\n|        1 | 0.000136 | DROP TABLE IF EXISTS t1  |\n|        2 | 0.011947 | CREATE TABLE t1 (id INT) |\n+----------+----------+--------------------------+\n3 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE;\n+----------------------+----------+\n| Status               | Duration |\n+----------------------+----------+\n| checking permissions | 0.000040 |\n| creating table       | 0.000056 |\n| After create         | 0.011363 |\n| query end            | 0.000375 |\n| freeing items        | 0.000089 |\n| logging slow query   | 0.000019 |\n| cleaning up          | 0.000005 |\n+----------------------+----------+\n7 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE FOR QUERY 1;\n+--------------------+----------+\n| Status             | Duration |\n+--------------------+----------+\n| query end          | 0.000107 |\n| freeing items      | 0.000008 |\n| logging slow query | 0.000015 |\n| cleaning up        | 0.000006 |\n+--------------------+----------+\n4 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE CPU FOR QUERY 2;\n+----------------------+----------+----------+------------+\n| Status               | Duration | CPU_user | CPU_system |\n+----------------------+----------+----------+------------+\n| checking permissions | 0.000040 | 0.000038 |   0.000002 |\n| creating table       | 0.000056 | 0.000028 |   0.000028 |\n| After create         | 0.011363 | 0.000217 |   0.001571 |\n| query end            | 0.000375 | 0.000013 |   0.000028 |\n| freeing items        | 0.000089 | 0.000010 |   0.000014 |\n| logging slow query   | 0.000019 | 0.000009 |   0.000010 |\n| cleaning up          | 0.000005 | 0.000003 |   0.000002 |\n+----------------------+----------+----------+------------+\n7 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/show-profile.html'),(638,'SHOW PROFILES',3,'Syntax:\nSHOW PROFILES\n\nThe SHOW PROFILES statement, together with SHOW PROFILE, displays\nprofiling information that indicates resource usage for statements\nexecuted during the course of the current session. For more\ninformation, see [HELP SHOW PROFILE].\n\n*Note*:\n\nThe SHOW PROFILE and SHOW PROFILES statements are deprecated and will\nbe removed in a future MySQL release. Use the Performance Schema\ninstead; see\nhttps://dev.mysql.com/doc/refman/5.7/en/performance-schema-query-profil\ning.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-profiles.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-profiles.html'),(639,'SHOW RELAYLOG EVENTS',3,'Syntax:\nSHOW RELAYLOG EVENTS\n    [IN \'log_name\']\n    [FROM pos]\n    [LIMIT [offset,] row_count]\n    [channel_option]\n\nchannel_option:\n    FOR CHANNEL channel\n\nShows the events in the relay log of a replication slave. If you do not\nspecify \'log_name\', the first relay log is displayed. This statement\nhas no effect on the master. SHOW RELAYLOG EVENTS requires the\nREPLICATION SLAVE privilege.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-relaylog-events.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-relaylog-events.html'),(640,'SHOW SLAVE HOSTS',3,'Syntax:\nSHOW SLAVE HOSTS\n\nDisplays a list of replication slaves currently registered with the\nmaster.\n\nSHOW SLAVE HOSTS should be executed on a server that acts as a\nreplication master. SHOW SLAVE HOSTS requires the REPLICATION SLAVE\nprivilege. The statement displays information about servers that are or\nhave been connected as replication slaves, with each row of the result\ncorresponding to one slave server, as shown here:\n\nmysql> SHOW SLAVE HOSTS;\n+------------+-----------+------+-----------+--------------------------------------+\n| Server_id  | Host      | Port | Master_id | Slave_UUID                           |\n+------------+-----------+------+-----------+--------------------------------------+\n|  192168010 | iconnect2 | 3306 | 192168011 | 14cb6624-7f93-11e0-b2c0-c80aa9429562 |\n| 1921680101 | athena    | 3306 | 192168011 | 07af4990-f41f-11df-a566-7ac56fdaf645 |\n+------------+-----------+------+-----------+--------------------------------------+\n\no Server_id: The unique server ID of the slave server, as configured in\n  the slave server\'s option file, or on the command line with\n  --server-id=value.\n\no Host: The host name of the slave server as specified on the slave\n  with the --report-host option. This can differ from the machine name\n  as configured in the operating system.\n\no User: The slave server user name as, specified on the slave with the\n  --report-user option. Statement output includes this column only if\n  the master server is started with the --show-slave-auth-info option.\n\no Password: The slave server password as, specified on the slave with\n  the --report-password option. Statement output includes this column\n  only if the master server is started with the --show-slave-auth-info\n  option.\n\no Port: The port on the master to which the slave server is listening,\n  as specified on the slave with the --report-port option.\n\n  A zero in this column means that the slave port (--report-port) was\n  not set.\n\no Master_id: The unique server ID of the master server that the slave\n  server is replicating from. This is the server ID of the server on\n  which SHOW SLAVE HOSTS is executed, so this same value is listed for\n  each row in the result.\n\no Slave_UUID: The globally unique ID of this slave, as generated on the\n  slave and found in the slave\'s auto.cnf file.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-slave-hosts.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-slave-hosts.html'),(641,'SHOW SLAVE STATUS',3,'Syntax:\nSHOW SLAVE STATUS [FOR CHANNEL channel]\n\nThis statement provides status information on essential parameters of\nthe slave threads. It requires either the SUPER or REPLICATION CLIENT\nprivilege.\n\nIf you issue this statement using the mysql client, you can use a \\G\nstatement terminator rather than a semicolon to obtain a more readable\nvertical layout:\n\nmysql> SHOW SLAVE STATUS\\G\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: localhost\n                  Master_User: repl\n                  Master_Port: 13000\n                Connect_Retry: 60\n              Master_Log_File: master-bin.000002\n          Read_Master_Log_Pos: 1307\n               Relay_Log_File: slave-relay-bin.000003\n                Relay_Log_Pos: 1508\n        Relay_Master_Log_File: master-bin.000002\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n              Replicate_Do_DB:\n          Replicate_Ignore_DB:\n           Replicate_Do_Table:\n       Replicate_Ignore_Table:\n      Replicate_Wild_Do_Table:\n  Replicate_Wild_Ignore_Table:\n                   Last_Errno: 0\n                   Last_Error:\n                 Skip_Counter: 0\n          Exec_Master_Log_Pos: 1307\n              Relay_Log_Space: 1858\n              Until_Condition: None\n               Until_Log_File:\n                Until_Log_Pos: 0\n           Master_SSL_Allowed: No\n           Master_SSL_CA_File:\n           Master_SSL_CA_Path:\n              Master_SSL_Cert:\n            Master_SSL_Cipher:\n               Master_SSL_Key:\n        Seconds_Behind_Master: 0\nMaster_SSL_Verify_Server_Cert: No\n                Last_IO_Errno: 0\n                Last_IO_Error:\n               Last_SQL_Errno: 0\n               Last_SQL_Error:\n  Replicate_Ignore_Server_Ids:\n             Master_Server_Id: 1\n                  Master_UUID: 3e11fa47-71ca-11e1-9e33-c80aa9429562\n             Master_Info_File: /var/mysqld.2/data/master.info\n                    SQL_Delay: 0\n          SQL_Remaining_Delay: NULL\n      Slave_SQL_Running_State: Reading event from the relay log\n           Master_Retry_Count: 10\n                  Master_Bind:\n      Last_IO_Error_Timestamp:\n     Last_SQL_Error_Timestamp:\n               Master_SSL_Crl:\n           Master_SSL_Crlpath:\n           Retrieved_Gtid_Set: 3e11fa47-71ca-11e1-9e33-c80aa9429562:1-5\n            Executed_Gtid_Set: 3e11fa47-71ca-11e1-9e33-c80aa9429562:1-5\n                Auto_Position: 1\n         Replicate_Rewrite_DB:\n                 Channel_name:\n           Master_TLS_Version: TLSv1.2\n\nThe Performance Schema provides tables that expose replication\ninformation. This is similar to the information available from the SHOW\nSLAVE STATUS statement, but represented in table form. For details, see\nhttps://dev.mysql.com/doc/refman/5.7/en/performance-schema-replication-\ntables.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-slave-status.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-slave-status.html'),(642,'SHOW STATUS',3,'Syntax:\nSHOW [GLOBAL | SESSION] STATUS\n    [LIKE \'pattern\' | WHERE expr]\n\n*Note*:\n\nAs of MySQL 5.7.6, the value of the show_compatibility_56 system\nvariable affects the information available from and privileges required\nfor the statement described here. For details, see the description of\nthat variable in\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nSHOW STATUS provides server status information (see\nhttps://dev.mysql.com/doc/refman/5.7/en/server-status-variables.html).\nThis statement does not require any privilege. It requires only the\nability to connect to the server.\n\nStatus variable information is also available from these sources:\n\no Performance Schema tables. See\n  https://dev.mysql.com/doc/refman/5.7/en/performance-schema-status-var\n  iable-tables.html.\n\no The GLOBAL_STATUS and SESSION_STATUS tables. See\n  https://dev.mysql.com/doc/refman/5.7/en/status-table.html.\n\no The mysqladmin extended-status command. See\n  https://dev.mysql.com/doc/refman/5.7/en/mysqladmin.html.\n\nFor SHOW STATUS, a LIKE clause, if present, indicates which variable\nnames to match. A WHERE clause can be given to select rows using more\ngeneral conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nSHOW STATUS accepts an optional GLOBAL or SESSION variable scope\nmodifier:\n\no With a GLOBAL modifier, the statement displays the global status\n  values. A global status variable may represent status for some aspect\n  of the server itself (for example, Aborted_connects), or the\n  aggregated status over all connections to MySQL (for example,\n  Bytes_received and Bytes_sent). If a variable has no global value,\n  the session value is displayed.\n\no With a SESSION modifier, the statement displays the status variable\n  values for the current connection. If a variable has no session\n  value, the global value is displayed. LOCAL is a synonym for SESSION.\n\no If no modifier is present, the default is SESSION.\n\nThe scope for each status variable is listed at\nhttps://dev.mysql.com/doc/refman/5.7/en/server-status-variables.html.\n\nEach invocation of the SHOW STATUS statement uses an internal temporary\ntable and increments the global Created_tmp_tables value.\n\nWith a LIKE clause, the statement displays only rows for those\nvariables with names that match the pattern:\n\nmysql> SHOW STATUS LIKE \'Key%\';\n+--------------------+----------+\n| Variable_name      | Value    |\n+--------------------+----------+\n| Key_blocks_used    | 14955    |\n| Key_read_requests  | 96854827 |\n| Key_reads          | 162040   |\n| Key_write_requests | 7589728  |\n| Key_writes         | 3813196  |\n+--------------------+----------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-status.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-status.html'),(643,'SHOW TABLE STATUS',3,'Syntax:\nSHOW TABLE STATUS\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW TABLE STATUS works likes SHOW TABLES, but provides a lot of\ninformation about each non-TEMPORARY table. You can also get this list\nusing the mysqlshow --status db_name command. The LIKE clause, if\npresent, indicates which table names to match. The WHERE clause can be\ngiven to select rows using more general conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-table-status.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-table-status.html'),(644,'SHOW TABLES',3,'Syntax:\nSHOW [FULL] TABLES\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW TABLES lists the non-TEMPORARY tables in a given database. You can\nalso get this list using the mysqlshow db_name command. The LIKE\nclause, if present, indicates which table names to match. The WHERE\nclause can be given to select rows using more general conditions, as\ndiscussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nMatching performed by the LIKE clause is dependent on the setting of\nthe lower_case_table_names system variable.\n\nThis statement also lists any views in the database. The optional FULL\nmodifier causes SHOW TABLES to display a second output column with\nvalues of BASE TABLE for a table, VIEW for a view, or SYSTEM VIEW for\nan INFORMATION_SCHEMA table.\n\nIf you have no privileges for a base table or view, it does not show up\nin the output from SHOW TABLES or mysqlshow db_name.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-tables.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-tables.html'),(645,'SHOW TRIGGERS',3,'Syntax:\nSHOW TRIGGERS\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW TRIGGERS lists the triggers currently defined for tables in a\ndatabase (the default database unless a FROM clause is given). This\nstatement returns results only for databases and tables for which you\nhave the TRIGGER privilege. The LIKE clause, if present, indicates\nwhich table names (not trigger names) to match and causes the statement\nto display triggers for those tables. The WHERE clause can be given to\nselect rows using more general conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nFor the ins_sum trigger defined in\nhttps://dev.mysql.com/doc/refman/5.7/en/triggers.html, the output of\nSHOW TRIGGERS is as shown here:\n\nmysql> SHOW TRIGGERS LIKE \'acc%\'\\G\n*************************** 1. row ***************************\n             Trigger: ins_sum\n               Event: INSERT\n               Table: account\n           Statement: SET @sum = @sum + NEW.amount\n              Timing: BEFORE\n             Created: 2018-08-08 10:10:12.61\n            sql_mode: ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,\n                      NO_ZERO_IN_DATE,NO_ZERO_DATE,\n                      ERROR_FOR_DIVISION_BY_ZERO,\n                      NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\n             Definer: me@localhost\ncharacter_set_client: utf8\ncollation_connection: utf8_general_ci\n  Database Collation: latin1_swedish_ci\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-triggers.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-triggers.html'),(646,'SHOW VARIABLES',3,'Syntax:\nSHOW [GLOBAL | SESSION] VARIABLES\n    [LIKE \'pattern\' | WHERE expr]\n\n*Note*:\n\nAs of MySQL 5.7.6, the value of the show_compatibility_56 system\nvariable affects the information available from and privileges required\nfor the statement described here. For details, see the description of\nthat variable in\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nSHOW VARIABLES shows the values of MySQL system variables (see\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html).\nThis statement does not require any privilege. It requires only the\nability to connect to the server.\n\nSystem variable information is also available from these sources:\n\no Performance Schema tables. See\n  https://dev.mysql.com/doc/refman/5.7/en/performance-schema-system-var\n  iable-tables.html.\n\no The GLOBAL_VARIABLES and SESSION_VARIABLES tables. See\n  https://dev.mysql.com/doc/refman/5.7/en/variables-table.html.\n\no The mysqladmin variables command. See\n  https://dev.mysql.com/doc/refman/5.7/en/mysqladmin.html.\n\nFor SHOW VARIABLES, a LIKE clause, if present, indicates which variable\nnames to match. A WHERE clause can be given to select rows using more\ngeneral conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nSHOW VARIABLES accepts an optional GLOBAL or SESSION variable scope\nmodifier:\n\no With a GLOBAL modifier, the statement displays global system variable\n  values. These are the values used to initialize the corresponding\n  session variables for new connections to MySQL. If a variable has no\n  global value, no value is displayed.\n\no With a SESSION modifier, the statement displays the system variable\n  values that are in effect for the current connection. If a variable\n  has no session value, the global value is displayed. LOCAL is a\n  synonym for SESSION.\n\no If no modifier is present, the default is SESSION.\n\nThe scope for each system variable is listed at\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nSHOW VARIABLES is subject to a version-dependent display-width limit.\nFor variables with very long values that are not completely displayed,\nuse SELECT as a workaround. For example:\n\nSELECT @@GLOBAL.innodb_data_file_path;\n\nMost system variables can be set at server startup (read-only variables\nsuch as version_comment are exceptions). Many can be changed at runtime\nwith the SET statement. See\nhttps://dev.mysql.com/doc/refman/5.7/en/using-system-variables.html,\nand [HELP SET].\n\nWith a LIKE clause, the statement displays only rows for those\nvariables with names that match the pattern. To obtain the row for a\nspecific variable, use a LIKE clause as shown:\n\nSHOW VARIABLES LIKE \'max_join_size\';\nSHOW SESSION VARIABLES LIKE \'max_join_size\';\n\nTo get a list of variables whose name match a pattern, use the %\nwildcard character in a LIKE clause:\n\nSHOW VARIABLES LIKE \'%size%\';\nSHOW GLOBAL VARIABLES LIKE \'%size%\';\n\nWildcard characters can be used in any position within the pattern to\nbe matched. Strictly speaking, because _ is a wildcard that matches any\nsingle character, you should escape it as \\_ to match it literally. In\npractice, this is rarely necessary.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-variables.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-variables.html'),(647,'SHOW WARNINGS',3,'Syntax:\nSHOW WARNINGS [LIMIT [offset,] row_count]\nSHOW COUNT(*) WARNINGS\n\nSHOW WARNINGS is a diagnostic statement that displays information about\nthe conditions (errors, warnings, and notes) resulting from executing a\nstatement in the current session. Warnings are generated for DML\nstatements such as INSERT, UPDATE, and LOAD DATA as well as DDL\nstatements such as CREATE TABLE and ALTER TABLE.\n\nThe LIMIT clause has the same syntax as for the SELECT statement. See\nhttps://dev.mysql.com/doc/refman/5.7/en/select.html.\n\nSHOW WARNINGS is also used following EXPLAIN, to display the extended\ninformation generated by EXPLAIN. See\nhttps://dev.mysql.com/doc/refman/5.7/en/explain-extended.html.\n\nSHOW WARNINGS displays information about the conditions resulting from\nexecution of the most recent nondiagnostic statement in the current\nsession. If the most recent statement resulted in an error during\nparsing, SHOW WARNINGS shows the resulting conditions, regardless of\nstatement type (diagnostic or nondiagnostic).\n\nThe SHOW COUNT(*) WARNINGS diagnostic statement displays the total\nnumber of errors, warnings, and notes. You can also retrieve this\nnumber from the warning_count system variable:\n\nSHOW COUNT(*) WARNINGS;\nSELECT @@warning_count;\n\nA difference in these statements is that the first is a diagnostic\nstatement that does not clear the message list. The second, because it\nis a SELECT statement is considered nondiagnostic and does clear the\nmessage list.\n\nA related diagnostic statement, SHOW ERRORS, shows only error\nconditions (it excludes warnings and notes), and SHOW COUNT(*) ERRORS\nstatement displays the total number of errors. See [HELP SHOW ERRORS].\nGET DIAGNOSTICS can be used to examine information for individual\nconditions. See [HELP GET DIAGNOSTICS].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-warnings.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-warnings.html'),(648,'BINLOG',3,'Syntax:\nBINLOG \'str\'\n\nBINLOG is an internal-use statement. It is generated by the mysqlbinlog\nprogram as the printable representation of certain events in binary log\nfiles. (See https://dev.mysql.com/doc/refman/5.7/en/mysqlbinlog.html.)\nThe \'str\' value is a base 64-encoded string the that server decodes to\ndetermine the data change indicated by the corresponding event. This\nstatement requires the SUPER privilege.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/binlog.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/binlog.html'),(649,'CACHE INDEX',3,'Syntax:\nCACHE INDEX {\n      tbl_index_list [, tbl_index_list] ...\n    | tbl_name PARTITION (partition_list)\n  }\n  IN key_cache_name\n\ntbl_index_list:\n  tbl_name [{INDEX|KEY} (index_name[, index_name] ...)]\n\npartition_list: {\n    partition_name[, partition_name] ...\n  | ALL\n}\n\nThe CACHE INDEX statement assigns table indexes to a specific key\ncache. It applies only to MyISAM tables, including partitioned MyISAM\ntables. After the indexes have been assigned, they can be preloaded\ninto the cache if desired with LOAD INDEX INTO CACHE.\n\nThe following statement assigns indexes from the tables t1, t2, and t3\nto the key cache named hot_cache:\n\nmysql> CACHE INDEX t1, t2, t3 IN hot_cache;\n+---------+--------------------+----------+----------+\n| Table   | Op                 | Msg_type | Msg_text |\n+---------+--------------------+----------+----------+\n| test.t1 | assign_to_keycache | status   | OK       |\n| test.t2 | assign_to_keycache | status   | OK       |\n| test.t3 | assign_to_keycache | status   | OK       |\n+---------+--------------------+----------+----------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/cache-index.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/cache-index.html'),(650,'FLUSH',3,'Syntax:\nFLUSH [NO_WRITE_TO_BINLOG | LOCAL] {\n    flush_option [, flush_option] ...\n  | tables_option\n}\n\nflush_option: {\n    BINARY LOGS\n  | DES_KEY_FILE\n  | ENGINE LOGS\n  | ERROR LOGS\n  | GENERAL LOGS\n  | HOSTS\n  | LOGS\n  | PRIVILEGES\n  | OPTIMIZER_COSTS\n  | QUERY CACHE\n  | RELAY LOGS [FOR CHANNEL channel]\n  | SLOW LOGS\n  | STATUS\n  | USER_RESOURCES\n}\n\ntables_option: {\n    TABLES\n  | TABLES tbl_name [, tbl_name] ...\n  | TABLES WITH READ LOCK\n  | TABLES tbl_name [, tbl_name] ... WITH READ LOCK\n  | TABLES tbl_name [, tbl_name] ... FOR EXPORT\n}\n\nThe FLUSH statement has several variant forms that clear or reload\nvarious internal caches, flush tables, or acquire locks. To execute\nFLUSH, you must have the RELOAD privilege. Specific flush options might\nrequire additional privileges, as described later.\n\n*Note*:\n\nIt is not possible to issue FLUSH statements within stored functions or\ntriggers. However, you may use FLUSH in stored procedures, so long as\nthese are not called from stored functions or triggers. See\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-program-restrictions.htm\nl.\n\nBy default, the server writes FLUSH statements to the binary log so\nthat they replicate to replication slaves. To suppress logging, specify\nthe optional NO_WRITE_TO_BINLOG keyword or its alias LOCAL.\n\n*Note*:\n\nFLUSH LOGS, FLUSH BINARY LOGS, FLUSH TABLES WITH READ LOCK (with or\nwithout a table list), and FLUSH TABLES tbl_name ... FOR EXPORT are not\nwritten to the binary log in any case because they would cause problems\nif replicated to a slave.\n\nThe FLUSH statement causes an implicit commit. See\nhttps://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\nThe mysqladmin utility provides a command-line interface to some flush\noperations, using commands such as flush-hosts, flush-logs,\nflush-privileges, flush-status, and flush-tables. See\nhttps://dev.mysql.com/doc/refman/5.7/en/mysqladmin.html.\n\nSending a SIGHUP signal to the server causes several flush operations\nto occur that are similar to various forms of the FLUSH statement. See\nhttps://dev.mysql.com/doc/refman/5.7/en/server-signal-response.html.\n\nThe RESET statement is similar to FLUSH. See [HELP RESET], for\ninformation about using the RESET statement with replication.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/flush.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/flush.html'),(651,'KILL',3,'Syntax:\nKILL [CONNECTION | QUERY] processlist_id\n\nEach connection to mysqld runs in a separate thread. You can kill a\nthread with the KILL processlist_id statement.\n\nThread processlist identifiers can be determined from the ID column of\nthe INFORMATION_SCHEMA PROCESSLIST table, the Id column of SHOW\nPROCESSLIST output, and the PROCESSLIST_ID column of the Performance\nSchema threads table. The value for the current thread is returned by\nthe CONNECTION_ID() function.\n\nKILL permits an optional CONNECTION or QUERY modifier:\n\no KILL CONNECTION is the same as KILL with no modifier: It terminates\n  the connection associated with the given processlist_id, after\n  terminating any statement the connection is executing.\n\no KILL QUERY terminates the statement the connection is currently\n  executing, but leaves the connection itself intact.\n\nThe ability to see which threads are available to be killed depends on\nthe PROCESS privilege:\n\no Without PROCESS, you can see only your own threads.\n\no With PROCESS, you can see all threads.\n\nThe ability to kill threads and statements depends on the SUPER\nprivilege:\n\no Without SUPER, you can kill only your own threads and statements.\n\no With SUPER, you can kill all threads and statements.\n\nYou can also use the mysqladmin processlist and mysqladmin kill\ncommands to examine and kill threads.\n\n*Note*:\n\nYou cannot use KILL with the Embedded MySQL Server library because the\nembedded server merely runs inside the threads of the host application.\nIt does not create any connection threads of its own.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/kill.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/kill.html'),(652,'LOAD INDEX',3,'Syntax:\nLOAD INDEX INTO CACHE\n  tbl_index_list [, tbl_index_list] ...\n\ntbl_index_list:\n  tbl_name\n    [PARTITION (partition_list)]\n    [{INDEX|KEY} (index_name[, index_name] ...)]\n    [IGNORE LEAVES]\n\npartition_list: {\n    partition_name[, partition_name] ...\n  | ALL\n}\n\nThe LOAD INDEX INTO CACHE statement preloads a table index into the key\ncache to which it has been assigned by an explicit CACHE INDEX\nstatement, or into the default key cache otherwise.\n\nLOAD INDEX INTO CACHE applies only to MyISAM tables, including\npartitioned MyISAM tables. In addition, indexes on partitioned tables\ncan be preloaded for one, several, or all partitions.\n\nThe IGNORE LEAVES modifier causes only blocks for the nonleaf nodes of\nthe index to be preloaded.\n\nIGNORE LEAVES is also supported for partitioned MyISAM tables.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/load-index.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/load-index.html'),(653,'RESET',3,'Syntax:\nRESET reset_option [, reset_option] ...\n\nreset_option: {\n    MASTER\n  | QUERY CACHE\n  | SLAVE\n}\n\nThe RESET statement is used to clear the state of various server\noperations. You must have the RELOAD privilege to execute RESET.\n\nRESET acts as a stronger version of the FLUSH statement. See [HELP\nFLUSH].\n\nThe RESET statement causes an implicit commit. See\nhttps://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\nThe following list describes the permitted RESET statement reset_option\nvalues:\n\no RESET MASTER\n\n  Deletes all binary logs listed in the index file, resets the binary\n  log index file to be empty, and creates a new binary log file.\n\no RESET QUERY CACHE\n\n  Removes all query results from the query cache.\n\n  *Note*:\n\n  The query cache is deprecated as of MySQL 5.7.20, and is removed in\n  MySQL 8.0. Deprecation includes RESET QUERY CACHE.\n\no RESET SLAVE\n\n  Makes the slave forget its replication position in the master binary\n  logs. Also resets the relay log by deleting any existing relay log\n  files and beginning a new one.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/reset.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/reset.html'),(654,'SHUTDOWN',3,'Syntax:\nSHUTDOWN\n\nThis statement stops the MySQL server. It requires the SHUTDOWN\nprivilege.\n\nSHUTDOWN was added in MySQL 5.7.9. It provides an SQL-level interface\nto the same functionality available using the mysqladmin shutdown\ncommand or the mysql_shutdown() C API function.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/shutdown.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/shutdown.html'),(655,'EXPLAIN',41,'Syntax:\n{EXPLAIN | DESCRIBE | DESC}\n    tbl_name [col_name | wild]\n\n{EXPLAIN | DESCRIBE | DESC}\n    [explain_type]\n    {explainable_stmt | FOR CONNECTION connection_id}\n\nexplain_type: {\n    EXTENDED\n  | PARTITIONS\n  | FORMAT = format_name\n}\n\nformat_name: {\n    TRADITIONAL\n  | JSON\n}\n\nexplainable_stmt: {\n    SELECT statement\n  | DELETE statement\n  | INSERT statement\n  | REPLACE statement\n  | UPDATE statement\n}\n\nThe DESCRIBE and EXPLAIN statements are synonyms. In practice, the\nDESCRIBE keyword is more often used to obtain information about table\nstructure, whereas EXPLAIN is used to obtain a query execution plan\n(that is, an explanation of how MySQL would execute a query).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/explain.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/explain.html'),(656,'DESCRIBE',41,'Syntax:\n{EXPLAIN | DESCRIBE | DESC}\n    tbl_name [col_name | wild]\n\n{EXPLAIN | DESCRIBE | DESC}\n    [explain_type]\n    {explainable_stmt | FOR CONNECTION connection_id}\n\nexplain_type: {\n    EXTENDED\n  | PARTITIONS\n  | FORMAT = format_name\n}\n\nformat_name: {\n    TRADITIONAL\n  | JSON\n}\n\nexplainable_stmt: {\n    SELECT statement\n  | DELETE statement\n  | INSERT statement\n  | REPLACE statement\n  | UPDATE statement\n}\n\nThe DESCRIBE and EXPLAIN statements are synonyms. In practice, the\nDESCRIBE keyword is more often used to obtain information about table\nstructure, whereas EXPLAIN is used to obtain a query execution plan\n(that is, an explanation of how MySQL would execute a query).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/explain.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/explain.html'),(657,'DESC',41,'Syntax:\n{EXPLAIN | DESCRIBE | DESC}\n    tbl_name [col_name | wild]\n\n{EXPLAIN | DESCRIBE | DESC}\n    [explain_type]\n    {explainable_stmt | FOR CONNECTION connection_id}\n\nexplain_type: {\n    EXTENDED\n  | PARTITIONS\n  | FORMAT = format_name\n}\n\nformat_name: {\n    TRADITIONAL\n  | JSON\n}\n\nexplainable_stmt: {\n    SELECT statement\n  | DELETE statement\n  | INSERT statement\n  | REPLACE statement\n  | UPDATE statement\n}\n\nThe DESCRIBE and EXPLAIN statements are synonyms. In practice, the\nDESCRIBE keyword is more often used to obtain information about table\nstructure, whereas EXPLAIN is used to obtain a query execution plan\n(that is, an explanation of how MySQL would execute a query).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/explain.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/explain.html'),(658,'HELP STATEMENT',41,'Syntax:\nHELP \'search_string\'\n\nThe HELP statement returns online information from the MySQL Reference\nManual. Its proper operation requires that the help tables in the mysql\ndatabase be initialized with help topic information (see\nhttps://dev.mysql.com/doc/refman/5.7/en/server-side-help-support.html).\n\nThe HELP statement searches the help tables for the given search string\nand displays the result of the search. The search string is not\ncase-sensitive.\n\nThe search string can contain the wildcard characters % and _. These\nhave the same meaning as for pattern-matching operations performed with\nthe LIKE operator. For example, HELP \'rep%\' returns a list of topics\nthat begin with rep.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/help.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/help.html'),(659,'USE',41,'Syntax:\nUSE db_name\n\nThe USE db_name statement tells MySQL to use the db_name database as\nthe default (current) database for subsequent statements. The database\nremains the default until the end of the session or another USE\nstatement is issued:\n\nUSE db1;\nSELECT COUNT(*) FROM mytable;   # selects from db1.mytable\nUSE db2;\nSELECT COUNT(*) FROM mytable;   # selects from db2.mytable\n\nThe database name must be specified on a single line. Newlines in\ndatabase names are not supported.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/use.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/use.html'),(660,'MERGE',42,'The MERGE storage engine, also known as the MRG_MyISAM engine, is a\ncollection of identical MyISAM tables that can be used as one.\n\"Identical\" means that all tables have identical column data types and\nindex information. You cannot merge MyISAM tables in which the columns\nare listed in a different order, do not have exactly the same data\ntypes in corresponding columns, or have the indexes in different order.\nHowever, any or all of the MyISAM tables can be compressed with\nmyisampack. See\nhttps://dev.mysql.com/doc/refman/5.7/en/myisampack.html. Differences\nbetween tables such as these do not matter:\n\no Names of corresponding columns and indexes can differ.\n\no Comments for tables, columns, and indexes can differ.\n\no Table options such as AVG_ROW_LENGTH, MAX_ROWS, or PACK_KEYS can\n  differ.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/merge-storage-engine.html\n\n','mysql> CREATE TABLE t1 (\n    ->    a INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    ->    message CHAR(20)) ENGINE=MyISAM;\nmysql> CREATE TABLE t2 (\n    ->    a INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    ->    message CHAR(20)) ENGINE=MyISAM;\nmysql> INSERT INTO t1 (message) VALUES (\'Testing\'),(\'table\'),(\'t1\');\nmysql> INSERT INTO t2 (message) VALUES (\'Testing\'),(\'table\'),(\'t2\');\nmysql> CREATE TABLE total (\n    ->    a INT NOT NULL AUTO_INCREMENT,\n    ->    message CHAR(20), INDEX(a))\n    ->    ENGINE=MERGE UNION=(t1,t2) INSERT_METHOD=LAST;\n','https://dev.mysql.com/doc/refman/5.7/en/merge-storage-engine.html');
/*!40000 ALTER TABLE `help_topic` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `innodb_index_stats`
--

DROP TABLE IF EXISTS `innodb_index_stats`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `innodb_index_stats` (
  `database_name` varchar(64) COLLATE utf8_bin NOT NULL,
  `table_name` varchar(199) COLLATE utf8_bin NOT NULL,
  `index_name` varchar(64) COLLATE utf8_bin NOT NULL,
  `last_update` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `stat_name` varchar(64) COLLATE utf8_bin NOT NULL,
  `stat_value` bigint(20) unsigned NOT NULL,
  `sample_size` bigint(20) unsigned DEFAULT NULL,
  `stat_description` varchar(1024) COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`database_name`,`table_name`,`index_name`,`stat_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `innodb_index_stats`
--

LOCK TABLES `innodb_index_stats` WRITE;
/*!40000 ALTER TABLE `innodb_index_stats` DISABLE KEYS */;
INSERT INTO `innodb_index_stats` VALUES ('blog','auth_group','PRIMARY','2019-09-01 03:35:08','n_diff_pfx01',0,1,'id'),('blog','auth_group','PRIMARY','2019-09-01 03:35:08','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','auth_group','PRIMARY','2019-09-01 03:35:08','size',1,NULL,'Number of pages in the index'),('blog','auth_group','name','2019-09-01 03:35:08','n_diff_pfx01',0,1,'name'),('blog','auth_group','name','2019-09-01 03:35:08','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','auth_group','name','2019-09-01 03:35:08','size',1,NULL,'Number of pages in the index'),('blog','auth_group_permissions','PRIMARY','2019-09-01 03:35:07','n_diff_pfx01',0,1,'id'),('blog','auth_group_permissions','PRIMARY','2019-09-01 03:35:07','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','auth_group_permissions','PRIMARY','2019-09-01 03:35:07','size',1,NULL,'Number of pages in the index'),('blog','auth_group_permissions','auth_group_permissio_permission_id_84c5c92e_fk_auth_perm','2019-09-01 03:35:07','n_diff_pfx01',0,1,'permission_id'),('blog','auth_group_permissions','auth_group_permissio_permission_id_84c5c92e_fk_auth_perm','2019-09-01 03:35:07','n_diff_pfx02',0,1,'permission_id,id'),('blog','auth_group_permissions','auth_group_permissio_permission_id_84c5c92e_fk_auth_perm','2019-09-01 03:35:07','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','auth_group_permissions','auth_group_permissio_permission_id_84c5c92e_fk_auth_perm','2019-09-01 03:35:07','size',1,NULL,'Number of pages in the index'),('blog','auth_group_permissions','auth_group_permissions_group_id_permission_id_0cd325b0_uniq','2019-09-01 03:35:07','n_diff_pfx01',0,1,'group_id'),('blog','auth_group_permissions','auth_group_permissions_group_id_permission_id_0cd325b0_uniq','2019-09-01 03:35:07','n_diff_pfx02',0,1,'group_id,permission_id'),('blog','auth_group_permissions','auth_group_permissions_group_id_permission_id_0cd325b0_uniq','2019-09-01 03:35:07','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','auth_group_permissions','auth_group_permissions_group_id_permission_id_0cd325b0_uniq','2019-09-01 03:35:07','size',1,NULL,'Number of pages in the index'),('blog','auth_permission','PRIMARY','2019-09-06 17:03:25','n_diff_pfx01',48,1,'id'),('blog','auth_permission','PRIMARY','2019-09-06 17:03:25','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','auth_permission','PRIMARY','2019-09-06 17:03:25','size',1,NULL,'Number of pages in the index'),('blog','auth_permission','auth_permission_content_type_id_codename_01ab375a_uniq','2019-09-06 17:03:25','n_diff_pfx01',12,1,'content_type_id'),('blog','auth_permission','auth_permission_content_type_id_codename_01ab375a_uniq','2019-09-06 17:03:25','n_diff_pfx02',48,1,'content_type_id,codename'),('blog','auth_permission','auth_permission_content_type_id_codename_01ab375a_uniq','2019-09-06 17:03:25','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','auth_permission','auth_permission_content_type_id_codename_01ab375a_uniq','2019-09-06 17:03:25','size',1,NULL,'Number of pages in the index'),('blog','auth_user','PRIMARY','2019-09-01 03:35:08','n_diff_pfx01',0,1,'id'),('blog','auth_user','PRIMARY','2019-09-01 03:35:08','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','auth_user','PRIMARY','2019-09-01 03:35:08','size',1,NULL,'Number of pages in the index'),('blog','auth_user','username','2019-09-01 03:35:08','n_diff_pfx01',0,1,'username'),('blog','auth_user','username','2019-09-01 03:35:08','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','auth_user','username','2019-09-01 03:35:08','size',1,NULL,'Number of pages in the index'),('blog','auth_user_groups','PRIMARY','2019-09-01 03:35:08','n_diff_pfx01',0,1,'id'),('blog','auth_user_groups','PRIMARY','2019-09-01 03:35:08','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','auth_user_groups','PRIMARY','2019-09-01 03:35:08','size',1,NULL,'Number of pages in the index'),('blog','auth_user_groups','auth_user_groups_group_id_97559544_fk_auth_group_id','2019-09-01 03:35:08','n_diff_pfx01',0,1,'group_id'),('blog','auth_user_groups','auth_user_groups_group_id_97559544_fk_auth_group_id','2019-09-01 03:35:08','n_diff_pfx02',0,1,'group_id,id'),('blog','auth_user_groups','auth_user_groups_group_id_97559544_fk_auth_group_id','2019-09-01 03:35:08','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','auth_user_groups','auth_user_groups_group_id_97559544_fk_auth_group_id','2019-09-01 03:35:08','size',1,NULL,'Number of pages in the index'),('blog','auth_user_groups','auth_user_groups_user_id_group_id_94350c0c_uniq','2019-09-01 03:35:08','n_diff_pfx01',0,1,'user_id'),('blog','auth_user_groups','auth_user_groups_user_id_group_id_94350c0c_uniq','2019-09-01 03:35:08','n_diff_pfx02',0,1,'user_id,group_id'),('blog','auth_user_groups','auth_user_groups_user_id_group_id_94350c0c_uniq','2019-09-01 03:35:08','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','auth_user_groups','auth_user_groups_user_id_group_id_94350c0c_uniq','2019-09-01 03:35:08','size',1,NULL,'Number of pages in the index'),('blog','auth_user_user_permissions','PRIMARY','2019-09-01 03:35:08','n_diff_pfx01',0,1,'id'),('blog','auth_user_user_permissions','PRIMARY','2019-09-01 03:35:08','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','auth_user_user_permissions','PRIMARY','2019-09-01 03:35:08','size',1,NULL,'Number of pages in the index'),('blog','auth_user_user_permissions','auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm','2019-09-01 03:35:08','n_diff_pfx01',0,1,'permission_id'),('blog','auth_user_user_permissions','auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm','2019-09-01 03:35:08','n_diff_pfx02',0,1,'permission_id,id'),('blog','auth_user_user_permissions','auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm','2019-09-01 03:35:08','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','auth_user_user_permissions','auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm','2019-09-01 03:35:08','size',1,NULL,'Number of pages in the index'),('blog','auth_user_user_permissions','auth_user_user_permissions_user_id_permission_id_14a6b632_uniq','2019-09-01 03:35:08','n_diff_pfx01',0,1,'user_id'),('blog','auth_user_user_permissions','auth_user_user_permissions_user_id_permission_id_14a6b632_uniq','2019-09-01 03:35:08','n_diff_pfx02',0,1,'user_id,permission_id'),('blog','auth_user_user_permissions','auth_user_user_permissions_user_id_permission_id_14a6b632_uniq','2019-09-01 03:35:08','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','auth_user_user_permissions','auth_user_user_permissions_user_id_permission_id_14a6b632_uniq','2019-09-01 03:35:08','size',1,NULL,'Number of pages in the index'),('blog','django_admin_log','PRIMARY','2019-09-10 02:41:41','n_diff_pfx01',72,1,'id'),('blog','django_admin_log','PRIMARY','2019-09-10 02:41:41','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','django_admin_log','PRIMARY','2019-09-10 02:41:41','size',1,NULL,'Number of pages in the index'),('blog','django_admin_log','django_admin_log_content_type_id_c4bce8eb_fk_django_co','2019-09-10 02:41:41','n_diff_pfx01',3,1,'content_type_id'),('blog','django_admin_log','django_admin_log_content_type_id_c4bce8eb_fk_django_co','2019-09-10 02:41:41','n_diff_pfx02',72,1,'content_type_id,id'),('blog','django_admin_log','django_admin_log_content_type_id_c4bce8eb_fk_django_co','2019-09-10 02:41:41','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','django_admin_log','django_admin_log_content_type_id_c4bce8eb_fk_django_co','2019-09-10 02:41:41','size',1,NULL,'Number of pages in the index'),('blog','django_admin_log','django_admin_log_user_id_c564eba6_fk_auth_user_id','2019-09-10 02:41:41','n_diff_pfx01',1,1,'user_id'),('blog','django_admin_log','django_admin_log_user_id_c564eba6_fk_auth_user_id','2019-09-10 02:41:41','n_diff_pfx02',72,1,'user_id,id'),('blog','django_admin_log','django_admin_log_user_id_c564eba6_fk_auth_user_id','2019-09-10 02:41:41','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','django_admin_log','django_admin_log_user_id_c564eba6_fk_auth_user_id','2019-09-10 02:41:41','size',1,NULL,'Number of pages in the index'),('blog','django_content_type','PRIMARY','2019-09-06 17:03:15','n_diff_pfx01',11,1,'id'),('blog','django_content_type','PRIMARY','2019-09-06 17:03:15','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','django_content_type','PRIMARY','2019-09-06 17:03:15','size',1,NULL,'Number of pages in the index'),('blog','django_content_type','django_content_type_app_label_model_76bd3d3b_uniq','2019-09-06 17:03:15','n_diff_pfx01',5,1,'app_label'),('blog','django_content_type','django_content_type_app_label_model_76bd3d3b_uniq','2019-09-06 17:03:15','n_diff_pfx02',11,1,'app_label,model'),('blog','django_content_type','django_content_type_app_label_model_76bd3d3b_uniq','2019-09-06 17:03:15','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','django_content_type','django_content_type_app_label_model_76bd3d3b_uniq','2019-09-06 17:03:15','size',1,NULL,'Number of pages in the index'),('blog','django_migrations','PRIMARY','2019-09-07 09:05:08','n_diff_pfx01',27,1,'id'),('blog','django_migrations','PRIMARY','2019-09-07 09:05:08','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','django_migrations','PRIMARY','2019-09-07 09:05:08','size',1,NULL,'Number of pages in the index'),('blog','django_session','PRIMARY','2019-09-05 14:41:31','n_diff_pfx01',4,1,'session_key'),('blog','django_session','PRIMARY','2019-09-05 14:41:31','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','django_session','PRIMARY','2019-09-05 14:41:31','size',1,NULL,'Number of pages in the index'),('blog','django_session','django_session_expire_date_a5c62663','2019-09-05 14:41:31','n_diff_pfx01',4,1,'expire_date'),('blog','django_session','django_session_expire_date_a5c62663','2019-09-05 14:41:31','n_diff_pfx02',4,1,'expire_date,session_key'),('blog','django_session','django_session_expire_date_a5c62663','2019-09-05 14:41:31','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','django_session','django_session_expire_date_a5c62663','2019-09-05 14:41:31','size',1,NULL,'Number of pages in the index'),('blog','home_article','PRIMARY','2019-09-10 09:14:04','n_diff_pfx01',25,6,'id'),('blog','home_article','PRIMARY','2019-09-10 09:14:04','n_leaf_pages',27,NULL,'Number of leaf pages in the index'),('blog','home_article','PRIMARY','2019-09-10 09:14:04','size',28,NULL,'Number of pages in the index'),('blog','home_article','home_article_category_id_f7eda728','2019-09-10 09:14:04','n_diff_pfx01',4,1,'category_id'),('blog','home_article','home_article_category_id_f7eda728','2019-09-10 09:14:04','n_diff_pfx02',31,1,'category_id,id'),('blog','home_article','home_article_category_id_f7eda728','2019-09-10 09:14:04','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','home_article','home_article_category_id_f7eda728','2019-09-10 09:14:04','size',1,NULL,'Number of pages in the index'),('blog','home_article_tags','PRIMARY','2019-09-10 09:14:04','n_diff_pfx01',18,1,'id'),('blog','home_article_tags','PRIMARY','2019-09-10 09:14:04','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','home_article_tags','PRIMARY','2019-09-10 09:14:04','size',1,NULL,'Number of pages in the index'),('blog','home_article_tags','home_article_tags_article_id_tag_id_d41c09f0_uniq','2019-09-10 09:14:04','n_diff_pfx01',17,1,'article_id'),('blog','home_article_tags','home_article_tags_article_id_tag_id_d41c09f0_uniq','2019-09-10 09:14:04','n_diff_pfx02',18,1,'article_id,tag_id'),('blog','home_article_tags','home_article_tags_article_id_tag_id_d41c09f0_uniq','2019-09-10 09:14:04','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','home_article_tags','home_article_tags_article_id_tag_id_d41c09f0_uniq','2019-09-10 09:14:04','size',1,NULL,'Number of pages in the index'),('blog','home_article_tags','home_article_tags_tag_id_5aaef4e5_fk_home_tag_id','2019-09-10 09:14:04','n_diff_pfx01',5,1,'tag_id'),('blog','home_article_tags','home_article_tags_tag_id_5aaef4e5_fk_home_tag_id','2019-09-10 09:14:04','n_diff_pfx02',18,1,'tag_id,id'),('blog','home_article_tags','home_article_tags_tag_id_5aaef4e5_fk_home_tag_id','2019-09-10 09:14:04','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','home_article_tags','home_article_tags_tag_id_5aaef4e5_fk_home_tag_id','2019-09-10 09:14:04','size',1,NULL,'Number of pages in the index'),('blog','home_category','PRIMARY','2019-09-09 00:34:26','n_diff_pfx01',4,1,'id'),('blog','home_category','PRIMARY','2019-09-09 00:34:26','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','home_category','PRIMARY','2019-09-09 00:34:26','size',1,NULL,'Number of pages in the index'),('blog','home_comment','PRIMARY','2019-09-07 12:26:59','n_diff_pfx01',6,1,'id'),('blog','home_comment','PRIMARY','2019-09-07 12:26:59','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','home_comment','PRIMARY','2019-09-07 12:26:59','size',1,NULL,'Number of pages in the index'),('blog','home_comment','home_comment_article_id_130f9732_fk_home_article_id','2019-09-07 12:26:59','n_diff_pfx01',5,1,'article_id'),('blog','home_comment','home_comment_article_id_130f9732_fk_home_article_id','2019-09-07 12:26:59','n_diff_pfx02',6,1,'article_id,id'),('blog','home_comment','home_comment_article_id_130f9732_fk_home_article_id','2019-09-07 12:26:59','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','home_comment','home_comment_article_id_130f9732_fk_home_article_id','2019-09-07 12:26:59','size',1,NULL,'Number of pages in the index'),('blog','home_comment','home_comment_pid_id_349973a4_fk_home_comment_id','2019-09-07 12:26:59','n_diff_pfx01',1,1,'pid_id'),('blog','home_comment','home_comment_pid_id_349973a4_fk_home_comment_id','2019-09-07 12:26:59','n_diff_pfx02',6,1,'pid_id,id'),('blog','home_comment','home_comment_pid_id_349973a4_fk_home_comment_id','2019-09-07 12:26:59','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','home_comment','home_comment_pid_id_349973a4_fk_home_comment_id','2019-09-07 12:26:59','size',1,NULL,'Number of pages in the index'),('blog','home_readandpraise','PRIMARY','2019-09-10 01:58:07','n_diff_pfx01',52,1,'id'),('blog','home_readandpraise','PRIMARY','2019-09-10 01:58:07','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','home_readandpraise','PRIMARY','2019-09-10 01:58:07','size',1,NULL,'Number of pages in the index'),('blog','home_tag','PRIMARY','2019-09-11 01:43:36','n_diff_pfx01',6,1,'id'),('blog','home_tag','PRIMARY','2019-09-11 01:43:36','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('blog','home_tag','PRIMARY','2019-09-11 01:43:36','size',1,NULL,'Number of pages in the index'),('mysql','gtid_executed','PRIMARY','2019-08-30 01:24:36','n_diff_pfx01',0,1,'source_uuid'),('mysql','gtid_executed','PRIMARY','2019-08-30 01:24:36','n_diff_pfx02',0,1,'source_uuid,interval_start'),('mysql','gtid_executed','PRIMARY','2019-08-30 01:24:36','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('mysql','gtid_executed','PRIMARY','2019-08-30 01:24:36','size',1,NULL,'Number of pages in the index'),('sys','sys_config','PRIMARY','2019-08-30 01:24:36','n_diff_pfx01',2,1,'variable'),('sys','sys_config','PRIMARY','2019-08-30 01:24:36','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('sys','sys_config','PRIMARY','2019-08-30 01:24:36','size',1,NULL,'Number of pages in the index');
/*!40000 ALTER TABLE `innodb_index_stats` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `innodb_table_stats`
--

DROP TABLE IF EXISTS `innodb_table_stats`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `innodb_table_stats` (
  `database_name` varchar(64) COLLATE utf8_bin NOT NULL,
  `table_name` varchar(199) COLLATE utf8_bin NOT NULL,
  `last_update` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `n_rows` bigint(20) unsigned NOT NULL,
  `clustered_index_size` bigint(20) unsigned NOT NULL,
  `sum_of_other_index_sizes` bigint(20) unsigned NOT NULL,
  PRIMARY KEY (`database_name`,`table_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `innodb_table_stats`
--

LOCK TABLES `innodb_table_stats` WRITE;
/*!40000 ALTER TABLE `innodb_table_stats` DISABLE KEYS */;
INSERT INTO `innodb_table_stats` VALUES ('blog','auth_group','2019-09-01 03:35:08',0,1,1),('blog','auth_group_permissions','2019-09-01 03:35:07',0,1,3),('blog','auth_permission','2019-09-06 17:03:25',48,1,1),('blog','auth_user','2019-09-01 03:35:08',0,1,1),('blog','auth_user_groups','2019-09-01 03:35:08',0,1,3),('blog','auth_user_user_permissions','2019-09-01 03:35:08',0,1,3),('blog','django_admin_log','2019-09-10 02:41:41',72,1,2),('blog','django_content_type','2019-09-06 17:03:15',11,1,1),('blog','django_migrations','2019-09-07 09:05:08',27,1,0),('blog','django_session','2019-09-05 14:41:31',4,1,1),('blog','home_article','2019-09-10 09:14:04',25,28,1),('blog','home_article_tags','2019-09-10 09:14:04',18,1,2),('blog','home_category','2019-09-09 00:34:26',4,1,0),('blog','home_comment','2019-09-07 12:26:59',6,1,2),('blog','home_readandpraise','2019-09-10 01:58:07',52,1,0),('blog','home_tag','2019-09-11 01:43:36',6,1,0),('mysql','gtid_executed','2019-08-30 01:24:36',0,1,0),('sys','sys_config','2019-08-30 01:24:36',2,1,0);
/*!40000 ALTER TABLE `innodb_table_stats` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ndb_binlog_index`
--

DROP TABLE IF EXISTS `ndb_binlog_index`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ndb_binlog_index` (
  `Position` bigint(20) unsigned NOT NULL,
  `File` varchar(255) NOT NULL,
  `epoch` bigint(20) unsigned NOT NULL,
  `inserts` int(10) unsigned NOT NULL,
  `updates` int(10) unsigned NOT NULL,
  `deletes` int(10) unsigned NOT NULL,
  `schemaops` int(10) unsigned NOT NULL,
  `orig_server_id` int(10) unsigned NOT NULL,
  `orig_epoch` bigint(20) unsigned NOT NULL,
  `gci` int(10) unsigned NOT NULL,
  `next_position` bigint(20) unsigned NOT NULL,
  `next_file` varchar(255) NOT NULL,
  PRIMARY KEY (`epoch`,`orig_server_id`,`orig_epoch`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ndb_binlog_index`
--

LOCK TABLES `ndb_binlog_index` WRITE;
/*!40000 ALTER TABLE `ndb_binlog_index` DISABLE KEYS */;
/*!40000 ALTER TABLE `ndb_binlog_index` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plugin`
--

DROP TABLE IF EXISTS `plugin`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `plugin` (
  `name` varchar(64) NOT NULL DEFAULT '',
  `dl` varchar(128) NOT NULL DEFAULT '',
  PRIMARY KEY (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='MySQL plugins';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plugin`
--

LOCK TABLES `plugin` WRITE;
/*!40000 ALTER TABLE `plugin` DISABLE KEYS */;
INSERT INTO `plugin` VALUES ('auth_socket','auth_socket.so');
/*!40000 ALTER TABLE `plugin` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `proc`
--

DROP TABLE IF EXISTS `proc`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `proc` (
  `db` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `name` char(64) NOT NULL DEFAULT '',
  `type` enum('FUNCTION','PROCEDURE') NOT NULL,
  `specific_name` char(64) NOT NULL DEFAULT '',
  `language` enum('SQL') NOT NULL DEFAULT 'SQL',
  `sql_data_access` enum('CONTAINS_SQL','NO_SQL','READS_SQL_DATA','MODIFIES_SQL_DATA') NOT NULL DEFAULT 'CONTAINS_SQL',
  `is_deterministic` enum('YES','NO') NOT NULL DEFAULT 'NO',
  `security_type` enum('INVOKER','DEFINER') NOT NULL DEFAULT 'DEFINER',
  `param_list` blob NOT NULL,
  `returns` longblob NOT NULL,
  `body` longblob NOT NULL,
  `definer` char(93) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `sql_mode` set('REAL_AS_FLOAT','PIPES_AS_CONCAT','ANSI_QUOTES','IGNORE_SPACE','NOT_USED','ONLY_FULL_GROUP_BY','NO_UNSIGNED_SUBTRACTION','NO_DIR_IN_CREATE','POSTGRESQL','ORACLE','MSSQL','DB2','MAXDB','NO_KEY_OPTIONS','NO_TABLE_OPTIONS','NO_FIELD_OPTIONS','MYSQL323','MYSQL40','ANSI','NO_AUTO_VALUE_ON_ZERO','NO_BACKSLASH_ESCAPES','STRICT_TRANS_TABLES','STRICT_ALL_TABLES','NO_ZERO_IN_DATE','NO_ZERO_DATE','INVALID_DATES','ERROR_FOR_DIVISION_BY_ZERO','TRADITIONAL','NO_AUTO_CREATE_USER','HIGH_NOT_PRECEDENCE','NO_ENGINE_SUBSTITUTION','PAD_CHAR_TO_FULL_LENGTH') NOT NULL DEFAULT '',
  `comment` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `character_set_client` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `collation_connection` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `db_collation` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `body_utf8` longblob,
  PRIMARY KEY (`db`,`name`,`type`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Stored Procedures';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `proc`
--

LOCK TABLES `proc` WRITE;
/*!40000 ALTER TABLE `proc` DISABLE KEYS */;
/*!40000 ALTER TABLE `proc` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `procs_priv`
--

DROP TABLE IF EXISTS `procs_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `procs_priv` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Routine_name` char(64) CHARACTER SET utf8 NOT NULL DEFAULT '',
  `Routine_type` enum('FUNCTION','PROCEDURE') COLLATE utf8_bin NOT NULL,
  `Grantor` char(93) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Proc_priv` set('Execute','Alter Routine','Grant') CHARACTER SET utf8 NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`Host`,`Db`,`User`,`Routine_name`,`Routine_type`),
  KEY `Grantor` (`Grantor`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Procedure privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `procs_priv`
--

LOCK TABLES `procs_priv` WRITE;
/*!40000 ALTER TABLE `procs_priv` DISABLE KEYS */;
/*!40000 ALTER TABLE `procs_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `proxies_priv`
--

DROP TABLE IF EXISTS `proxies_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `proxies_priv` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Proxied_host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Proxied_user` char(32) COLLATE utf8_bin NOT NULL DEFAULT '',
  `With_grant` tinyint(1) NOT NULL DEFAULT '0',
  `Grantor` char(93) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`Host`,`User`,`Proxied_host`,`Proxied_user`),
  KEY `Grantor` (`Grantor`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='User proxy privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `proxies_priv`
--

LOCK TABLES `proxies_priv` WRITE;
/*!40000 ALTER TABLE `proxies_priv` DISABLE KEYS */;
INSERT INTO `proxies_priv` VALUES ('localhost','root','','',1,'boot@connecting host','0000-00-00 00:00:00');
/*!40000 ALTER TABLE `proxies_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `server_cost`
--

DROP TABLE IF EXISTS `server_cost`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `server_cost` (
  `cost_name` varchar(64) NOT NULL,
  `cost_value` float DEFAULT NULL,
  `last_update` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `comment` varchar(1024) DEFAULT NULL,
  PRIMARY KEY (`cost_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `server_cost`
--

LOCK TABLES `server_cost` WRITE;
/*!40000 ALTER TABLE `server_cost` DISABLE KEYS */;
INSERT INTO `server_cost` VALUES ('disk_temptable_create_cost',NULL,'2019-08-30 01:24:36',NULL),('disk_temptable_row_cost',NULL,'2019-08-30 01:24:36',NULL),('key_compare_cost',NULL,'2019-08-30 01:24:36',NULL),('memory_temptable_create_cost',NULL,'2019-08-30 01:24:36',NULL),('memory_temptable_row_cost',NULL,'2019-08-30 01:24:36',NULL),('row_evaluate_cost',NULL,'2019-08-30 01:24:36',NULL);
/*!40000 ALTER TABLE `server_cost` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `servers`
--

DROP TABLE IF EXISTS `servers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `servers` (
  `Server_name` char(64) NOT NULL DEFAULT '',
  `Host` char(64) NOT NULL DEFAULT '',
  `Db` char(64) NOT NULL DEFAULT '',
  `Username` char(64) NOT NULL DEFAULT '',
  `Password` char(64) NOT NULL DEFAULT '',
  `Port` int(4) NOT NULL DEFAULT '0',
  `Socket` char(64) NOT NULL DEFAULT '',
  `Wrapper` char(64) NOT NULL DEFAULT '',
  `Owner` char(64) NOT NULL DEFAULT '',
  PRIMARY KEY (`Server_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='MySQL Foreign Servers table';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `servers`
--

LOCK TABLES `servers` WRITE;
/*!40000 ALTER TABLE `servers` DISABLE KEYS */;
/*!40000 ALTER TABLE `servers` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `slave_master_info`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE IF NOT EXISTS `slave_master_info` (
  `Number_of_lines` int(10) unsigned NOT NULL COMMENT 'Number of lines in the file.',
  `Master_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'The name of the master binary log currently being read from the master.',
  `Master_log_pos` bigint(20) unsigned NOT NULL COMMENT 'The master log position of the last read event.',
  `Host` char(64) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'The host name of the master.',
  `User_name` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The user name used to connect to the master.',
  `User_password` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The password used to connect to the master.',
  `Port` int(10) unsigned NOT NULL COMMENT 'The network port used to connect to the master.',
  `Connect_retry` int(10) unsigned NOT NULL COMMENT 'The period (in seconds) that the slave will wait before trying to reconnect to the master.',
  `Enabled_ssl` tinyint(1) NOT NULL COMMENT 'Indicates whether the server supports SSL connections.',
  `Ssl_ca` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The file used for the Certificate Authority (CA) certificate.',
  `Ssl_capath` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The path to the Certificate Authority (CA) certificates.',
  `Ssl_cert` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The name of the SSL certificate file.',
  `Ssl_cipher` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The name of the cipher in use for the SSL connection.',
  `Ssl_key` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The name of the SSL key file.',
  `Ssl_verify_server_cert` tinyint(1) NOT NULL COMMENT 'Whether to verify the server certificate.',
  `Heartbeat` float NOT NULL,
  `Bind` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'Displays which interface is employed when connecting to the MySQL server',
  `Ignored_server_ids` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The number of server IDs to be ignored, followed by the actual server IDs',
  `Uuid` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The master server uuid.',
  `Retry_count` bigint(20) unsigned NOT NULL COMMENT 'Number of reconnect attempts, to the master, before giving up.',
  `Ssl_crl` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The file used for the Certificate Revocation List (CRL)',
  `Ssl_crlpath` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The path used for Certificate Revocation List (CRL) files',
  `Enabled_auto_position` tinyint(1) NOT NULL COMMENT 'Indicates whether GTIDs will be used to retrieve events from the master.',
  `Channel_name` char(64) NOT NULL COMMENT 'The channel on which the slave is connected to a source. Used in Multisource Replication',
  `Tls_version` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'Tls version',
  PRIMARY KEY (`Channel_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Master Information';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `slave_relay_log_info`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE IF NOT EXISTS `slave_relay_log_info` (
  `Number_of_lines` int(10) unsigned NOT NULL COMMENT 'Number of lines in the file or rows in the table. Used to version table definitions.',
  `Relay_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'The name of the current relay log file.',
  `Relay_log_pos` bigint(20) unsigned NOT NULL COMMENT 'The relay log position of the last executed event.',
  `Master_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'The name of the master binary log file from which the events in the relay log file were read.',
  `Master_log_pos` bigint(20) unsigned NOT NULL COMMENT 'The master log position of the last executed event.',
  `Sql_delay` int(11) NOT NULL COMMENT 'The number of seconds that the slave must lag behind the master.',
  `Number_of_workers` int(10) unsigned NOT NULL,
  `Id` int(10) unsigned NOT NULL COMMENT 'Internal Id that uniquely identifies this record.',
  `Channel_name` char(64) NOT NULL COMMENT 'The channel on which the slave is connected to a source. Used in Multisource Replication',
  PRIMARY KEY (`Channel_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Relay Log Information';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `slave_worker_info`
--

DROP TABLE IF EXISTS `slave_worker_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `slave_worker_info` (
  `Id` int(10) unsigned NOT NULL,
  `Relay_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Relay_log_pos` bigint(20) unsigned NOT NULL,
  `Master_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Master_log_pos` bigint(20) unsigned NOT NULL,
  `Checkpoint_relay_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Checkpoint_relay_log_pos` bigint(20) unsigned NOT NULL,
  `Checkpoint_master_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Checkpoint_master_log_pos` bigint(20) unsigned NOT NULL,
  `Checkpoint_seqno` int(10) unsigned NOT NULL,
  `Checkpoint_group_size` int(10) unsigned NOT NULL,
  `Checkpoint_group_bitmap` blob NOT NULL,
  `Channel_name` char(64) NOT NULL COMMENT 'The channel on which the slave is connected to a source. Used in Multisource Replication',
  PRIMARY KEY (`Channel_name`,`Id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Worker Information';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `slave_worker_info`
--

LOCK TABLES `slave_worker_info` WRITE;
/*!40000 ALTER TABLE `slave_worker_info` DISABLE KEYS */;
/*!40000 ALTER TABLE `slave_worker_info` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tables_priv`
--

DROP TABLE IF EXISTS `tables_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tables_priv` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Table_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Grantor` char(93) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `Table_priv` set('Select','Insert','Update','Delete','Create','Drop','Grant','References','Index','Alter','Create View','Show view','Trigger') CHARACTER SET utf8 NOT NULL DEFAULT '',
  `Column_priv` set('Select','Insert','Update','References') CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`Host`,`Db`,`User`,`Table_name`),
  KEY `Grantor` (`Grantor`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Table privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tables_priv`
--

LOCK TABLES `tables_priv` WRITE;
/*!40000 ALTER TABLE `tables_priv` DISABLE KEYS */;
INSERT INTO `tables_priv` VALUES ('localhost','mysql','mysql.session','user','boot@connecting host','0000-00-00 00:00:00','Select',''),('localhost','sys','mysql.sys','sys_config','root@localhost','2019-08-30 01:24:36','Select','');
/*!40000 ALTER TABLE `tables_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone`
--

DROP TABLE IF EXISTS `time_zone`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_zone` (
  `Time_zone_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Use_leap_seconds` enum('Y','N') NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Time_zone_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Time zones';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone`
--

LOCK TABLES `time_zone` WRITE;
/*!40000 ALTER TABLE `time_zone` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_leap_second`
--

DROP TABLE IF EXISTS `time_zone_leap_second`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_zone_leap_second` (
  `Transition_time` bigint(20) NOT NULL,
  `Correction` int(11) NOT NULL,
  PRIMARY KEY (`Transition_time`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Leap seconds information for time zones';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_leap_second`
--

LOCK TABLES `time_zone_leap_second` WRITE;
/*!40000 ALTER TABLE `time_zone_leap_second` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_leap_second` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_name`
--

DROP TABLE IF EXISTS `time_zone_name`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_zone_name` (
  `Name` char(64) NOT NULL,
  `Time_zone_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Time zone names';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_name`
--

LOCK TABLES `time_zone_name` WRITE;
/*!40000 ALTER TABLE `time_zone_name` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_name` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_transition`
--

DROP TABLE IF EXISTS `time_zone_transition`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_zone_transition` (
  `Time_zone_id` int(10) unsigned NOT NULL,
  `Transition_time` bigint(20) NOT NULL,
  `Transition_type_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Time_zone_id`,`Transition_time`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Time zone transitions';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_transition`
--

LOCK TABLES `time_zone_transition` WRITE;
/*!40000 ALTER TABLE `time_zone_transition` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_transition` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_transition_type`
--

DROP TABLE IF EXISTS `time_zone_transition_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_zone_transition_type` (
  `Time_zone_id` int(10) unsigned NOT NULL,
  `Transition_type_id` int(10) unsigned NOT NULL,
  `Offset` int(11) NOT NULL DEFAULT '0',
  `Is_DST` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `Abbreviation` char(8) NOT NULL DEFAULT '',
  PRIMARY KEY (`Time_zone_id`,`Transition_type_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Time zone transition types';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_transition_type`
--

LOCK TABLES `time_zone_transition_type` WRITE;
/*!40000 ALTER TABLE `time_zone_transition_type` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_transition_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Select_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Insert_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Update_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Delete_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Drop_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Reload_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Shutdown_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Process_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `File_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Grant_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `References_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Index_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Show_db_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Super_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Execute_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Repl_slave_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Repl_client_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Show_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_user_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Event_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Trigger_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_tablespace_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `ssl_type` enum('','ANY','X509','SPECIFIED') CHARACTER SET utf8 NOT NULL DEFAULT '',
  `ssl_cipher` blob NOT NULL,
  `x509_issuer` blob NOT NULL,
  `x509_subject` blob NOT NULL,
  `max_questions` int(11) unsigned NOT NULL DEFAULT '0',
  `max_updates` int(11) unsigned NOT NULL DEFAULT '0',
  `max_connections` int(11) unsigned NOT NULL DEFAULT '0',
  `max_user_connections` int(11) unsigned NOT NULL DEFAULT '0',
  `plugin` char(64) COLLATE utf8_bin NOT NULL DEFAULT 'mysql_native_password',
  `authentication_string` text COLLATE utf8_bin,
  `password_expired` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `password_last_changed` timestamp NULL DEFAULT NULL,
  `password_lifetime` smallint(5) unsigned DEFAULT NULL,
  `account_locked` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Host`,`User`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Users and global privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES ('localhost','root','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','','','','',0,0,0,0,'mysql_native_password','*6C362347EBEAA7DF44F6D34884615A35095E80EB','N','2019-08-30 01:30:42',NULL,'N'),('localhost','mysql.session','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','Y','N','N','N','N','N','N','N','N','N','N','N','N','N','','','','',0,0,0,0,'mysql_native_password','*THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE','N','2019-08-30 01:24:36',NULL,'Y'),('localhost','mysql.sys','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','','','','',0,0,0,0,'mysql_native_password','*THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE','N','2019-08-30 01:24:36',NULL,'Y'),('localhost','debian-sys-maint','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','','','','',0,0,0,0,'mysql_native_password','*94C9A9CE53BEB46F5280A7A102C6B5800727A055','N','2019-08-30 01:24:36',NULL,'N');
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `general_log`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE IF NOT EXISTS `general_log` (
  `event_time` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  `user_host` mediumtext NOT NULL,
  `thread_id` bigint(21) unsigned NOT NULL,
  `server_id` int(10) unsigned NOT NULL,
  `command_type` varchar(64) NOT NULL,
  `argument` mediumblob NOT NULL
) ENGINE=CSV DEFAULT CHARSET=utf8 COMMENT='General log';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `slow_log`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE IF NOT EXISTS `slow_log` (
  `start_time` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  `user_host` mediumtext NOT NULL,
  `query_time` time(6) NOT NULL,
  `lock_time` time(6) NOT NULL,
  `rows_sent` int(11) NOT NULL,
  `rows_examined` int(11) NOT NULL,
  `db` varchar(512) NOT NULL,
  `last_insert_id` int(11) NOT NULL,
  `insert_id` int(11) NOT NULL,
  `server_id` int(10) unsigned NOT NULL,
  `sql_text` mediumblob NOT NULL,
  `thread_id` bigint(21) unsigned NOT NULL
) ENGINE=CSV DEFAULT CHARSET=utf8 COMMENT='Slow log';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2019-09-11 15:06:59
